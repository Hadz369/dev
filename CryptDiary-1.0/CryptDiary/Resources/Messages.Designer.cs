//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CryptDiary.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CryptDiary.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tagebucheintragsdatei konnte nicht geladen werden. ähnelt.
        /// </summary>
        internal static string ErrorDiaryEntryFileNotLoadable {
            get {
                return ResourceManager.GetString("ErrorDiaryEntryFileNotLoadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das &quot;EncryptedData&quot;-Element wurde nicht gefunden. ähnelt.
        /// </summary>
        internal static string ErrorEncryptedDataElementNotFound {
            get {
                return ResourceManager.GetString("ErrorEncryptedDataElementNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Xml-Datei enthält keinen Knoten &quot;EncryptionInformation&quot; ähnelt.
        /// </summary>
        internal static string ErrorEncryptionInfoNotFound {
            get {
                return ResourceManager.GetString("ErrorEncryptionInfoNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Datei kann nicht geschrieben werden.\nWurde ein Arbeitsverzeichnis gewählt? ähnelt.
        /// </summary>
        internal static string ErrorFileCanNotBeWritten {
            get {
                return ResourceManager.GetString("ErrorFileCanNotBeWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die zu löschende Datei existiert nicht. ähnelt.
        /// </summary>
        internal static string ErrorFileToDeleteDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorFileToDeleteDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das Datum enthält ungültige Zeichen:  ähnelt.
        /// </summary>
        internal static string ErrorInvalidDateString {
            get {
                return ResourceManager.GetString("ErrorInvalidDateString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Dateiname hat ein ungültiges Format:  ähnelt.
        /// </summary>
        internal static string ErrorInvalidFileNameFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidFileNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Keylänge muss 128, 192 oder 256 Bit betragen. ähnelt.
        /// </summary>
        internal static string ErrorInvalidKeyLength {
            get {
                return ResourceManager.GetString("ErrorInvalidKeyLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Iteration-Count konnte nicht aus der Xml-Datei geparsed werden.\n ähnelt.
        /// </summary>
        internal static string ErrorIterationCountNotParsable {
            get {
                return ResourceManager.GetString("ErrorIterationCountNotParsable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der IV konnte nicht aus der Xml-Datei gelesen werden.\n ähnelt.
        /// </summary>
        internal static string ErrorIVNotReadable {
            get {
                return ResourceManager.GetString("ErrorIVNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die KeySize konnte nicht aus der Xml-Datei gelesen werden.\n ähnelt.
        /// </summary>
        internal static string ErrorKeySizeNotReadable {
            get {
                return ResourceManager.GetString("ErrorKeySizeNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kein Nachbardatum gefunden. ähnelt.
        /// </summary>
        internal static string ErrorNeighborDateNotFound {
            get {
                return ResourceManager.GetString("ErrorNeighborDateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Salt konnte nicht aus der Xml-Datei gelesen werden.\n ähnelt.
        /// </summary>
        internal static string ErrorSaltNotReadable {
            get {
                return ResourceManager.GetString("ErrorSaltNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das Datum konnte nicht ermittelt werden. Liegt es im falschen Format vor? ähnelt.
        /// </summary>
        internal static string ErrorWrongDateFormat {
            get {
                return ResourceManager.GetString("ErrorWrongDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Falsches Passwort? ähnelt.
        /// </summary>
        internal static string ErrorWrongPassword {
            get {
                return ResourceManager.GetString("ErrorWrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das Attribut \&quot;Date\&quot; wurde nicht gefunden. ähnelt.
        /// </summary>
        internal static string ErrorXmlAttributeDateNotFound {
            get {
                return ResourceManager.GetString("ErrorXmlAttributeDateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das spezifizierte XML-Element wurde nicht gefunden. ähnelt.
        /// </summary>
        internal static string ErrorXmlElementNotFound {
            get {
                return ResourceManager.GetString("ErrorXmlElementNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tagebuch gesperrt! ähnelt.
        /// </summary>
        internal static string InfoDiaryLocked {
            get {
                return ResourceManager.GetString("InfoDiaryLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ordner muss leer sein! ähnelt.
        /// </summary>
        internal static string InfoDirectoryNotEmpty {
            get {
                return ResourceManager.GetString("InfoDirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Um Brute-Force-Angriffe bei der Passwort-Eingabe zu erschweren, wird das eingegebene Passwort mindestens 1000 mal gehashed. Dies dauert lang genug, um wiederholte Passworteingaben sehr stark zu verlangsamen, ist aber schnell genug, um einzelne Passworteingaben nicht unnötig auszubremsen. Versuchen Sie, einen Wert zu finden, der bei einem Benchmark ein Ergebnis zwischen 100 und 300 ms liefert. ähnelt.
        /// </summary>
        internal static string InfoPasswordIterationsText {
            get {
                return ResourceManager.GetString("InfoPasswordIterationsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die beiden Eingaben für das neue Passwort stimmen nicht überein. ähnelt.
        /// </summary>
        internal static string InfoPasswordsNotEqual {
            get {
                return ResourceManager.GetString("InfoPasswordsNotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitte das neue Passwort zur Bestätigung erneut eingeben. ähnelt.
        /// </summary>
        internal static string PromptConfirmNewPassword {
            get {
                return ResourceManager.GetString("PromptConfirmNewPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitte das neue Passwort eingeben. ähnelt.
        /// </summary>
        internal static string PromptEnterNewPassword {
            get {
                return ResourceManager.GetString("PromptEnterNewPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitte das alte Passwort eingeben. ähnelt.
        /// </summary>
        internal static string PromptEnterOldPassword {
            get {
                return ResourceManager.GetString("PromptEnterOldPassword", resourceCulture);
            }
        }
    }
}
