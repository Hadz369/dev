<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Schedules.v10.3</name>
    </assembly>
    <members>
        <member name="T:Infragistics.PropertyChangeNotifierExtended">
            <summary>
            Abstract base class for objects that implement INotifyPropertyChanged.
            </summary>
        </member>
        <member name="M:Infragistics.PropertyChangeNotifierExtended.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.PropertyChangeNotifierExtended"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.PropertyChangeNotifierExtended.OnPropertyChanged(System.String)">
            <summary>
            Overridden. Called when property changed event is raised.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Infragistics.PropertyChangeNotifierExtended.NotifyListeners(System.Object,System.String,System.Object)">
            <summary>
            Notifies listeners of the property change.
            </summary>
            <param name="sender">Object whose property changed.</param>
            <param name="property">Property that changed.</param>
            <param name="extraInfo">Any extra info associated with the property change.</param>
        </member>
        <member name="M:Infragistics.PropertyChangeNotifierExtended.OnSubObjectPropertyChanged(System.Object,System.String,System.Object)">
            <summary>
            Called when a subobject's, including this object's, property changes.
            </summary>
            <param name="sender">Object whose property changed.</param>
            <param name="property">Property that changed.</param>
            <param name="extraInfo">Any extra info associated with the property change.</param>
        </member>
        <member name="M:LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:InternalDynamicResourceString.#ctor(Infragistics.Shared.ResourceCustomizer,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            This constructor is for internal use only.
            </summary>
        </member>
        <member name="M:InternalDynamicResourceString.GetStringFromResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            </summary>
            <returns>A string that contains 'MonthViewDayHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader"/>
            </summary>
            <returns>A string that contains 'MonthViewDayOfWeekHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            </summary>
            <returns>A string that contains 'MonthViewWeekHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer.IsOffscreenCore">
            <summary>
            Returns a boolean indicating if the element is not in view.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.ScheduleControlBaseAutomationPeer">
            <summary>
            Abstract base class for automation peers of classes that derive from <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleControlBaseAutomationPeer.#ctor(Infragistics.Controls.Schedules.ScheduleControlBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.ScheduleControlBaseAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleControlBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamMonthViewAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMonthViewAutomationPeer.#ctor(Infragistics.Controls.Schedules.XamMonthView)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamMonthViewAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMonthViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMonthViewAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
            <returns>A string that contains 'XamMonthView'</returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> object that will be executed against.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase.CommandType">
            <summary>
            Returns the type of command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandSource.CommandType">
            <summary>
            Gets or sets the RecurrenceChooserDialogCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogSaveAndCloseCommand">
            <summary>
            A command that accepts the Recurrence choice and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogSaveAndCloseCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.RecurrenceChooserDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCloseCommand">
            <summary>
            A command that closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> without accepting any choice. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCloseCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.RecurrenceChooserDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.RecurrenceChooserDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/> object that will be executed against.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase.CommandType">
            <summary>
            Returns the type of command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandSource.CommandType">
            <summary>
            Gets or sets the ReminderDialogCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogDismissAllCommand">
            <summary>
            A command that dismisses all the reminders in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogDismissAllCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.ReminderDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogOpenSelectedCommand">
            <summary>
            A command that opens the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> dialog for all currently selected reminder(s) that represent a reminder for an <see cref="T:Infragistics.Controls.Schedules.Appointment"/> activity type. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogOpenSelectedCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.ReminderDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogDismissSelectedCommand">
            <summary>
            A command that dismisses the currently selected reminder(s) in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogDismissSelectedCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.ReminderDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogSnoozeSelectedCommand">
            <summary>
            A command that snoozes the currently selected reminder(s) in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogSnoozeSelectedCommand.CommandType">
            <summary>
            Returns a <see cref="T:Infragistics.Controls.Schedules.ReminderDialogCommand"/> enumeration that specified which <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogCommandBase"/> command this is.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandBase.ExecuteCommand(Infragistics.Controls.Schedules.ScheduleControlBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            </summary>
            <param name="scheduleControl">The control for which the command will be executed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleControlCommandSource.CommandType">
            <summary>
            Gets or sets the ScheduleControlCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleControlBaseCommand">
            <summary>
            A command object used to execute a command for a <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlBaseCommand.#ctor(Infragistics.Controls.Schedules.ScheduleControlCommand)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ScheduleControlCommand"/>
            </summary>
            <param name="commandType"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlBaseCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleControlBaseCommand.ExecuteCommand(Infragistics.Controls.Schedules.ScheduleControlBase)">
            <summary>
            Executes the command
            </summary>
            <param name="ScheduleControl">The <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> object that will execute the command.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.BeginEdit(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityBase,System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}},Infragistics.DataErrorInfo@)">
            <summary>
            Begins modifications to an activity.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="activity">ActivityBase derived object that is to be modified.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
            <returns>A value indicating whether the operation succeeded.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.CheckActivityOperationAllowed(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityOperationResult,Infragistics.Controls.Schedules.ActivityOperation)">
            <summary>
            Checks to see if the specified operation is allowed for the activity using connector's IsActivityOperationSupported
            method. If the operation is not allowed, initializes the specified result with an error.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="result">Activity result object.</param>
            <param name="operation">Operation being performed.</param>
            <returns>True if the operation is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.CheckActivityOperationAllowed(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.DataErrorInfo@)">
            <summary>
            Checks to see if the specified operation is allowed for the activity using connector's IsActivityOperationSupported
            method. If the operation is not allowed, initializes the specified result with an error.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="activity">Activity object.</param>
            <param name="operation">Operation being performed.</param>
            <param name="error">This will be set to an error object if the operation is not allowed.</param>
            <returns>True if the operation is allowed. False otherwise.</returns>
            <returns>True if the operation is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.DefaultCancelEditImplementation(Infragistics.Controls.Schedules.ActivityBase,System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}},Infragistics.DataErrorInfo@)">
            <summary>
            Cancels a new activity that was created by the ScheduleDataConnectorBase's CreateNew call however one that 
            hasn't been commited yet.
            </summary>
            <param name="activity">ActivityBase derived object that was created using ScheduleDataConnectorBase's CreateNew method however
            one that hasn't been committed yet.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.DefaultEndEditOverrideImplementation(Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean)">
            <summary>
            This is called to commit changes to an activity to the underlying data source.
            </summary>
            <param name="editList">This is the list manager.</param>
            <param name="result">Result's Activity is being updated. This result should be initialized with the result of the opreation.</param>
            <param name="force">True if the UI cannot remain in edit mode and therefore the operation must be ended,
            either with success or with an error. It cannot be canceled.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.EndEdit(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}})">
            <summary>
            Commits a new or modified activity.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="activity">A new or modified ActivityBase derived instance.</param>
            <param name="force">True to force the edit operation to end. Used when user interface
            being used to perform the edit operation cannot remain in edit mode and therefore the
            edit operation must be ended. If the specified activity is deemed invalid to be committed
            then an error result should be returned.
            </param>
            <param name="endEditOverride">The callback used for each activity actually changed in the end edit operation.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance which may be initialized with the result
            asynchronously.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.Remove(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityBase,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}})">
            <summary>
            Removes an activity.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="activity">ActivityBase derived instance to remove.</param>
            <param name="endEditOverride">The callback used for each activity actually changed in the end edit operation.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.EndEdit(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}})"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.CommitVarianceHelper(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean,System.Int32,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}})">
            <summary>
            Committing a variance involves potentially updating the associated root activity's MaxOccurrenceDateTime
            field if the new end time of the occurrence is greater than the MaxOccurrenceDateTime because the 
            MaxOccurrenceDateTime must always be greater than or equal to the maximum end time of all the occurrences
            of the recurring activity. This is relied upon by our querying logic.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="result">This is the result object. Result's Activity is the variance that's being updated.</param>
            <param name="force">True if the UI cannot remain in edit mode and therefore the operation must be ended,
            either with success or with an error. It cannot be canceled.</param>
            <param name="attempt">0 if this is the first attempt at updating the root activity. 1 if we had previously attempted
            to update the root activity and we shouldn't try again.</param>
            <param name="endEditOverride">The callback used for each activity actually changed in the end edit operation.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.EndEditHelper(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}},System.Nullable{System.Boolean})">
            <summary>
            A helper method that's called by the EndEdit and CommitVarianceHelper methods.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="result">Activity result object.</param>
            <param name="force">Whether to force end.</param>
            <param name="endEditOverride">The callback used for each activity actually changed in the end edit operation.</param>
            <param name="getEditListCallback">The callback to get the edit list associated with a specific activity.</param>
            <param name="updateVarianceRootQueryTimes"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnectorUtilities.OnRootActivityUpdated_CommitVariance(System.Object,System.Tuple{Infragistics.Controls.Schedules.ActivityOperationResult,Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean,System.Action{Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean},System.Func{Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase}}})">
            <summary>
            When a variance' root activity is updated, in order to update the variance we may need to wait for
            the root activity to complete updating. This is called when the root activity end edit operation
            compltes.
            </summary>
            <param name="notUsed"></param>
            <param name="data"></param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.PropertyStorageListManager`2">
            <summary>
            List manager that supports property storage mechanism for managing mapped property values on view items.
            The view item class needs to provide a StoragePropsInfo which essentially is a collection of PropInfo
            objects that describe the property of the view item. The prop info is used to manage the field value
            notifications as well as providing the view items the value for the associated field via a property 
            storage.
            </summary>
            <typeparam name="TViewItem"></typeparam>
            <typeparam name="TMappingKey"></typeparam>
        </member>
        <member name="M:Infragistics.Controls.Schedules.IEditList`1.IsEditTransactionSupported(`0)">
            <summary>
            Returns true if BeginEdit, CancelEdit and EndEdit are supported.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.AssociateDataItemToAddNewViewItem(`0,Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new data item and associates it with the specified view item. Note that the data item
            is not added to the underlying list. It must be added separately, either via EndEdit call or
            manually. Also the underlying list must support adding a data item.
            </summary>
            <param name="item">View item.</param>
            <param name="error">Will be set to an error if any.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.CreateNew(Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new TViewItem instance.
            </summary>
            <param name="dataError"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.EndEdit(`0,Infragistics.DataErrorInfo@)">
            <summary>
            Commits the specified view item.
            </summary>
            <param name="viewItem"></param>
            <param name="dataError"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.EnsureViewItemInitialized(`0)">
            <summary>
            When view items are used as data items in the data source (in other words the data source
            comprises of view items) then when a view item is used directly, we may need to initialize
            the view item (the same way ViewList would do it). For example, in the case of activity,
            activity's owning resource and calendar need to be initialized based on the id properties.
            This initialization is done by the view list however if a view item is used directly
            by accessing it from the data source, then we need to make sure it's initialized.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.GetFieldValueAccessorConverted(`1,System.Type)">
            <summary>
            Gets field value accessor that will convert the values to the specified target type.
            </summary>
            <param name="field">Identifies the field.</param>
            <param name="convertTargetType">Target type to convert the values to.</param>
            <returns>IFieldValueAccessor instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.IsEditTransactionSupported(`0)">
            <summary>
            Returns true if BeginEdit, CancelEdit and EndEdit are supported.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.RecreateAllViewItems">
            <summary>
            Discards all the existing view items and dirties all the query results so the view items get re-created.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.ReevaluateQuery(Infragistics.Controls.Schedules.ListQueryResult)">
            <summary>
            Re-evaluates the specified query result and updates its result list.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.Remove(`0,Infragistics.DataErrorInfo@)">
            <summary>
            Removes the specified view item.
            </summary>
            <param name="viewItem"></param>
            <param name="dataError"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.CreateLinqStatement(Infragistics.Controls.Schedules.ListQueryResult,Infragistics.DataErrorInfo@)">
            <summary>
            This method is called to create linq condition from a list specific query result, like ActivityQuery for the
            activity list manager.
            </summary>
            <param name="result">Query result object that was passed into the <see cref="M:Infragistics.Controls.Schedules.ListManager`2.PerformQuery(Infragistics.Controls.Schedules.ListQueryResult,System.Boolean)"/> method, from which
            the derived list manager is to create the corresponding linq condition.</param>
            <param name="error">This out param will be set if an error occurs.</param>
            <returns>Returns linq condition derived from the specified listSpecificQueryInfo object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.GetAllMappingKeys">
            <summary>
            Returns all potential mapping keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.ManageQueryResult(Infragistics.Controls.Schedules.ListQueryResult)">
            <summary>
            Manages query results so any changes made to the list manager, like list or mappings being changed, will
            cause the list manager to re-evaluate the result and re-initialize the result with the new set of
            queried data.
            </summary>
            <param name="result">Result to manage.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.PerformQuery(Infragistics.Controls.Schedules.ListQueryResult,System.Boolean)">
            <summary>
            Performs query and returns the result object. <b>NOTE:</b> CreateLinqCondition method must be
            overridden to provide logic for converting the specified listSpecificQueryInfo object into
            linq query conditions.
            </summary>
            <param name="result">Performs query referenced by this result.</param>
            <param name="manageResult"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.VerifyItemsInCleanResults(System.Collections.IEnumerable,System.Nullable{System.Boolean})">
            <summary>
            Adds or removes specified items from the results based on the 'add' parameter. If 'add' parameter
            is null it verifies whether the item should exist in the result and adds or removes it from the
            result accordingly.
            </summary>
            <param name="dataItemsToVerify">Items beign added/removed or to be verified.</param>
            <param name="add">If true, performs add. If false, performs removal. If null verifies whether
            the item should exist in the result based on the result's query criteria and adds or removes
            it from the result accordingly.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.VerifyItemsInResult(Infragistics.Controls.Schedules.ListQueryResult,System.Collections.IEnumerable,System.Nullable{System.Boolean})">
            <summary>
            Adds or removes specified items from the result based on the 'add' parameter. If 'add' parameter
            is null it verifies whether the item should exist in the result and adds or removes it from the
            result accordingly.
            </summary>
            <param name="result">Query result.</param>
            <param name="dataItemsToVerify">Items beign added/removed or to be verified.</param>
            <param name="add">If true, performs add. If false, performs removal. If null verifies whether
            the item should exist in the result based on the result's query criteria and adds or removes
            it from the result accordingly.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.DirtyFieldValueAccessors">
            <summary>
            Called to dirty field value accessors. This is typically called when the list is changed to different
            list or one or more mappings are changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.VerifyFieldValueAccessors_AddDataItemPropListener(System.String,Infragistics.IFieldValueAccessor)">
            <summary>
            Adds an entry to _dataItemPropNameToListenerMap for the specified mapped field. DataItemPropNameToListenerMap is used
            to route property change notification from the data item to the correct field value accessor.
            </summary>
            <param name="mappedField">Mapped field.</param>
            <param name="accessor">Field value accessor.</param>
            <returns>Notifier associated with the accessor.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListManager`2.VerifyFieldValueAccessors_CreateAccessorHelper(System.String,System.Boolean,Infragistics.ConverterInfo,Infragistics.Controls.Schedules.LinqQueryManager,System.Object@,System.Object@)">
            <summary>
            Creates IFieldValueAccessor for the specified mapped field.
            </summary>
            <param name="mappedField">Field in the data source.</param>
            <param name="isExplicitlyMapped">Whether the field was explicitly mapped. If true then fallbacks to using binding if the corresponding property is not found.</param>
            <param name="converterInfo">Converter information.</param>
            <param name="linqQueryManager">Linq query manager.</param>
            <param name="propDescriptorAccessorFactoryCache">Used by the method to cache certain information in this variable.</param>
            <param name="reflectionPropAcessorFactoryCache">Used by the method to cache certain information in this variable.</param>
            <returns>Created field value accessor or null if mapped field is not found.</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.IsListViewItemsList">
            <summary>
            Indicates if the associated data source list contains actual view items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.List">
            <summary>
            The data source list.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.LinqQueryManager">
            <summary>
            Linq query manager used for quering the data source list.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.Mappings">
            <summary>
            Gets or sets the field mappings collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.ViewItemFactory">
            <summary>
            Factory if any used to create TViewItem instances for specific data items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.ViewItemManager">
            <summary>
            View item manager used to manage and track view item objects by their id values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListManager`2.Results">
            <summary>
            List of results that are actively being managed and whose result lists are updated to reflect
            any changes that occur to the data source list.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.#ctor(Infragistics.Controls.Schedules.StoragePropsInfo,System.Converter{`0,System.Object})">
            <summary>
            Constructor.
            </summary>
            <param name="propsInfo">Property information of the TViewItem.</param>
            <param name="viewItemToDataItemConverter">Converter that retrieves the data item from the view item.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.CreateFieldValueAccessorOverride(`1)">
            <summary>
            Overridden. Creates IFieldValueAccessor for the specified TViewItem property.
            </summary>
            <param name="field">Identifies the TViewItem property.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.GetAllMappingKeys">
            <summary>
            Returns all potential mapping keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.InitializeUnmappedPropertiesMappingKey(`1)">
            <summary>
            Initializes unmapped properties field key. Any unampped field values will be stored as XML in this field.
            </summary>
            <param name="unmappedPropertiesMappingKey">Field mapping key where the XML will be stored.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.PropertyStorageListManager`2.PropertyStoreWrapperBase">
            <summary>
            This IPropertyStore implementation dynamically switches between using a IFieldValueAccessor if a property has a field mapping for it
            or using a DictionaryPropertyStore if there's no mapping for the field.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.PropertyStorageListManager`2.PropertyStoreWrapper`1">
            <summary>
            This IPropertyStore implementation dynamically switches between using a IFieldValueAccessor if a property has a field mapping for it
            or using a DictionaryPropertyStore if there's no mapping for the field.
            </summary>
            <typeparam name="TValue">Type of values that are stored.</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.PropertyStoreWrapper`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.PropertyStorageListManager`2.PropertyValueConverter._converterInfo">
            <summary>
            User supplied converter info.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.PropertyStorageListManager`2.PropertyValueConverter.#ctor(Infragistics.Controls.Schedules.StoragePropsInfo.PropInfo,Infragistics.ConverterInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="propInfo"></param>
            <param name="converterInfo"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.GetDateRange(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets the activity's date range.
            </summary>
            <param name="activity">Activity object.</param>
            <returns>Date-time range of the activity.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.GetDateRangeInUTC(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Gets the activity's date range.
            </summary>
            <param name="activity">Activity object.</param>
            <param name="localTimeZone">Local time zone. Used when the activity is time-zone neutral in which case its
            start and end times are in effect in local time zone, and therefore we need to convert them to UTC in order
            to compare to the date ranges which are in UTC.</param>
            <returns>Date-time range of the activity in UTC.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.GetTimeZoneToken(Infragistics.Controls.Schedules.Resource,Infragistics.Controls.Schedules.TimeZoneInfoProvider,Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Gets the time zone for the resource based on its PrimaryTimeZoneId property. If id not specified or is invalid,
            fallbacks to fallbackTimeZone and if that's null then to local time zone.
            </summary>
            <param name="resource"></param>
            <param name="provider"></param>
            <param name="fallbackTimeZone"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.Intersects(Infragistics.Controls.Schedules.ActivityBase,System.Collections.Generic.IEnumerable{Infragistics.DateRange},Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Checks to see if the activity's date range intersects with one of the date ranges in rangesInUTC collection.
            </summary>
            <param name="activity">Activity instance.</param>
            <param name="rangesInUTC">Date ranges in UTC.</param>
            <param name="localTimeZone">Local time zone. Used when the activity is time-zone neutral in which case its
            start and end times are in effect in local time zone, and therefore we need to convert them to UTC in order
            to compare to the date ranges which are in UTC.</param>
            <returns>True if the activity date range intersects with one of the date ranges specified via the 'rangesInUTC' parameter.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.Max(System.Double,System.Double)">
            <summary>
            Helper method to return the larger value or non-NaN value if one is NaN
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.MaxReached(System.Int32,System.Int32)">
            <summary>
            If max > 0 then returns true if value > max;
            </summary>
            <param name="max"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.Min(System.Double,System.Double)">
            <summary>
            Helper method to return the larger value or non-NaN value if one is NaN
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.Reinitialize``1(Infragistics.Collections.ObservableCollectionExtended{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Helper method for invoking the Reinitialize method where the call is only made if the collections differ.
            </summary>
            <typeparam name="T">The type of items in the collections</typeparam>
            <param name="collection">The collection to reinitialize</param>
            <param name="newItems">The new list of items used to update the collection</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.ToCalendars(System.Object)">
            <summary>
            Converts value which can be Resource, IEnumerable&lt;Resource&gt;, ResourceCalendar or IEnumerable&lt;ResourceCalendar&gt; into IEnumerable&lt;ResourceCalendar&gt;.
            </summary>
            <param name="value">Value can be Resource, IEnumerable&lt;Resource&gt;, ResourceCalendar or IEnumerable&lt;ResourceCalendar&gt;.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.ToCalendarsReadOnlyCollection(System.Object)">
            <summary>
            Converts value which can be Resource, IEnumerable&lt;Resource&gt;, ResourceCalendar or IEnumerable&lt;ResourceCalendar&gt; into ImmutableCollection&lt;ResourceCalendar&gt;.
            </summary>
            <param name="value">Value can be Resource, IEnumerable&lt;Resource&gt;, ResourceCalendar or IEnumerable&lt;ResourceCalendar&gt;.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.ToImmutableCollection``1(System.Object)">
            <summary>
            Converts value which can be a T instance, or an IEnumerable&lt;T&gt; to ImmutableCollection&lt;T&gt;.
            </summary>
            <param name="value">Value can be a T or an IEnumerable&lt;T&gt;.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.TruncateToSecond(System.DateTime)">
            <summary>
            Truncates the specified date to seconds.
            </summary>
            <param name="date">Date to trucate.</param>
            <returns>Date value truncated to seconds.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Helper method for performing a binary search of a sorted list
            </summary>
            <typeparam name="T">The type of items in the list</typeparam>
            <param name="list">The sorted list to be searched</param>
            <param name="item">The item to look for</param>
            <param name="comparer">The comparer used to perform the search</param>
            <param name="ignoreItem">False for a standard binary search. True if the <paramref name="item"/> should 
            be ignored in the search. This is useful where the item's sort criteria may have changed to find out where 
            the item should be moved to.</param>
            <returns>The index where the item in the list. If the item does not exist then it returns the bitwise 
            complement. In the case where <paramref name="ignoreItem"/> is true, the index of the item will be returned 
            if it exists at the correct location otherwise the bitwise complement of where it should be. Note the complement 
            may need to be decremented if doing a move and the item is before the new index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.BinarySearch``2(System.Collections.Generic.IList{``0},System.Func{``0,``1,System.Int32},``1)">
            <summary>
            Helper method for performing a binary search where the search criteria is a separate piece of data
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TComparison"></typeparam>
            <param name="items"></param>
            <param name="comparer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.FindNearestAfterOrDefault``1(System.Collections.Generic.IList{``0},System.Int32,System.Predicate{``0})">
            <summary>
            Searches the specified list at the position after the starting point 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list to search</param>
            <param name="index">The starting index for the search</param>
            <param name="match">The method used to perform the check for which item should be returned</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.FindNextOrDefault``1(System.Collections.Generic.IList{``0},System.Int32,System.Boolean,System.Int32,System.Boolean,System.Predicate{``0})">
            <summary>
            Enumerates the list from the specified starting point skipping the specified number of items that match.
            </summary>
            <typeparam name="T">The type of item in the list</typeparam>
            <param name="list">The list to enumerate</param>
            <param name="startingIndex">The index of the item at which to start. Note the item itself is not considered even if <paramref name="returnLast"/> is true.</param>
            <param name="match">The method to invoke to determine if the item is a match</param>
            <param name="next">True to look forward in the list; false to iterate backwards</param>
            <param name="returnLast">True to return the last item that matches</param>
            <param name="matchCount">The number of matching items that must match</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.GetRecurrenceCalculatorHelper(Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.RecurrenceBase,System.Nullable{System.DateTime})">
            <summary>
            Gets the recurrence calculator.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.HasOverlappingInstances(System.Collections.Generic.IEnumerable{Infragistics.DateRange})">
            <summary>
            Returns true if at least one date range overlaps with another in the list.
            </summary>
            <param name="ranges">Date ranges.</param>
            <returns>True if at least one date range overlaps with another. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.IndexOfNearestAfter``1(System.Collections.Generic.IList{``0},System.Int32,System.Predicate{``0})">
            <summary>
            Searches the specified list at the position after the starting point 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list to search</param>
            <param name="index">The starting index for the search</param>
            <param name="match">The method used to perform the check for which item should be returned</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.IndexOfNext``1(System.Collections.Generic.IList{``0},System.Int32,System.Boolean,System.Int32,System.Boolean,System.Predicate{``0})">
            <summary>
            Enumerates the list from the specified starting point skipping the specified number of items that match.
            </summary>
            <typeparam name="T">The type of item in the list</typeparam>
            <param name="list">The list to enumerate</param>
            <param name="startingIndex">The index of the item at which to start. Note the item itself is not considered even if <paramref name="returnLast"/> is true.</param>
            <param name="match">The method to invoke to determine if the item is a match</param>
            <param name="next">True to look forward in the list; false to iterate backwards</param>
            <param name="returnLast">True to return the last item that matches</param>
            <param name="matchCount">The number of matching items that must match</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.ReparentElement(System.Windows.Controls.Panel,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Helper method for putting an element into or pulling out of a panel.
            </summary>
            <param name="panel">The panel to add/remove the child to/from</param>
            <param name="child">The element to add/remove</param>
            <param name="add">True to add the element assuming its current visual parent is null or false to remove the element assuming its current visual parent is the specified <paramref name="panel"/></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleUtilities.SetBoolTrueProperty(System.Windows.UIElement,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            Helper method for setting the value of a property to a boxed true when true and UnsetValue when false.
            </summary>
            <param name="element">The element on which the property is being set</param>
            <param name="dp">The property to set</param>
            <param name="newValue">True to set the value to true and false to clear the local value.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleUtilities.KeyedCollectionImpl`2">
            <summary>
            Keyed collection that uses a delegate for retrieving key value from item.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TItem">Type of item.</typeparam>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleUtilities.AntirecursionUtility">
            <summary>
            Used instead of anti-recursion flag to prevent an action from being taken recursively.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.#ctor(Infragistics.Controls.Schedules.ScheduleDataConnectorBase)">
            <summary>
            Constructor.
            </summary>
            <param name="connector">Connector.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.SubscribeToReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber,Infragistics.DataErrorInfo@)">
            <summary>
            Subscribes to reminders for the activities of the specified calendar. Note that more than one 
            subscriber can be subscribed to a single calendar as well as multiple calendars can be 
            subscribed to.
            </summary>
            <param name="calendar">This calendars activity reminders will be deilvered to the specified subscribed.</param>
            <param name="subscriber">When a reminder is due for an activity, the subscriber's <see cref="M:Infragistics.Controls.Schedules.ReminderSubscriber.DeliverReminder(Infragistics.Controls.Schedules.ReminderInfo)"/> method will be invoked.</param>
            <param name="error">If there's an error, this will be set to error information.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.UnsubscribeFromReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber)">
            <summary>
            Unsubscribes from activity reminders of the specified calendar. If the specified subscriber hadn't been subscribed
            previously then this method will take no action.
            </summary>
            <param name="calendar">The calendar's activity reminders to unsubscribe from.</param>
            <param name="subscriber">Subscriber instance.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.AddTask(System.DateTime,System.Action)">
            <summary>
            Adds a task that will be performed at the specified time, which is in UTC.
            </summary>
            <param name="dateTime">Time in UTC.</param>
            <param name="action">Action to perform.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.GetReminderInfo(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Boolean)">
            <summary>
            Gets the reminder info object associated with the activity. This reminder info is exposed via data manager's active reminders collection.
            </summary>
            <param name="activity">Activity instance.</param>
            <param name="allocateIfNecessary">If true allocates one if one hasn't been allocated.</param>
            <param name="reactivateIfNecessary">If the reminder was dismissed, resets its IsDismissed to false.</param>
            <returns>Returns the reminder info object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityReminderManager.SyncWithActivityReminder(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Synchronizes ReminderInfo's Reminder to activity's Reminder or the other way around based on the 'copyToActivity' parameter.
            </summary>
            <param name="activity">Activity object.</param>
            <param name="copyToActivity">If copyToActivity is true then reminder info's Reminder is copied 
            to Activity and if it's false then activity's reminder is copied to the reminder info.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityReminderManager.ReminderSubscribers">
            <summary>
            List of reminder subscribers. When a reminder for an activity is to be displayed,
            the task for conveying the reminder is delegated to these reminder subscribers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListConnectorActivityReminderManager.#ctor(Infragistics.Controls.Schedules.ListScheduleDataConnector)">
            <summary>
            Constructor.
            </summary>
            <param name="connector">Connector.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AsyncActivityOperationCompletedHandler`2">
            <summary>
            When an async operation is being performed that requires raising of an event when the operation is 
            complete, for example the add appointment operation, this class is used to raise the event when the 
            operation completes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DataManagerActivityOperationCompletedHandler">
            <summary>
            When an async operation is being performed that requires raising of an event when the operation is 
            complete, for example the add appointment operation, this class is used to raise the event when the 
            operation completes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WcfServiceException">
            <summary>
            Represents an exception that occurs during a remote service call.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfServiceException.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Schedules.WcfServiceException"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfServiceException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Schedules.WcfServiceException"/> instance.
            </summary>
            <param name="message">The message describing the error which occurred on the server.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Schedules.WcfServiceException"/> instance.
            </summary>
            <param name="message">The message describing the error which occurred on the server.</param>
            <param name="innerException">The error which caused this error or null.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfServiceException.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Schedules.WcfServiceException"/> instance.
            </summary>
            <param name="message">The message describing the error which occurred on the server.</param>
            <param name="serviceExceptionTypeName">The full type name of the exception thrown by the service.</param>
            <param name="serviceExceptionStackTrace">The stack trace of the exception thrown by the service.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfServiceException.ServiceExceptionStackTrace">
            <summary>
            Gets the stack trace of the exception thrown by the service.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfServiceException.ServiceExceptionTypeName">
            <summary>
            Gets the full type name of the exception thrown by the service.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WcfListScheduleDataConnector">
            <summary>
            Used for providing schedule data from a server over WCF services.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnector"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase">
            <summary>
            An abstract base class that is used to provide schedule data to the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.
            </summary>
            <remarks>
            <para class="body">
            <b>ScheduleDataConnectorBase</b> is an abstract base class. Derived instances are used to provide schedule data to the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.
            </para>
            </remarks>
            <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactoryProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderResolved"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)">
            <summary>
            Indicates whether the activities of the specified activity type are supported by this data connector.
            </summary>
            <param name="activityType">Activity type.</param>
            <returns>True if the specified activities are supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if activities of the specified type are supported by the data connector.
            If they are not supported, relevant user interface will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Begins modifications to an activity.
            </summary>
            <param name="activity">ActivityBase derived object that is to be modified.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A value indicating whether the operation succeeded.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> BeginEdit cannot be called more than once without an intervening call to CancelEdit or EndEdit. Successive BeginEdit
            calls should result an error and return false.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Cancels modifications to an existing activity or cancels a new activity that was created by the 
            <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> call however one that hasn't been commited yet.
            </summary>
            <param name="activity">ActivityBase derived object that was put in edit state by <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> call
            or one that was created using <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method however one that hasn't been committed yet.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>CancelEdit</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            to cancel modifications to an existing activity. It also calls this method to cancel and discard a 
            new activity that was created using the <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method, however the activity must 
            not have been commited yet. This is typically done when the user cancels the dialog for creating 
            a new activity, like the new appointment dialog.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelPendingOperation(Infragistics.OperationResult)">
            <summary>
            Cancels a pending operation.
            </summary>
            <param name="operation">Pending operation that is to be canceled.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>CancelPendingOperation</b> method is called to cancel a pending operation. It's only valid for
            operations that are still pending, that is their <see cref="P:Infragistics.OperationResult.IsComplete"/> is false.
            </para>
            <para class="body">
            An example of how this method is used is as follows. <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
            method returns <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object. The activities can be retrieved 
            asynchronously. Before the activities are retrieved, there may be a need for canceling the operation.
            For example, the user scrolls the schedule control to a different range of dates in which case
            it's not necessary to retrieve activities for the perviously visible date range. In such a case,
            the previous query operation will be canceled if it's still pending.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new ActivityBase derived instance based on the activityType parameter.
            </summary>
            <param name="activityType">Indicates the type of activity to create.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A new ActivityBase derived object created according to the activityType parameter.</returns>
            <remarks>
            <para class="body">
            <b>CreateActivity</b> creates a new <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object, like Appointment, Journal, or Task. 
            Which activity type to create is specified by the <paramref name="activityType"/> parameter. Note that the created activity 
            doesn't get commited to the data source until <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method is called. Also if you wish to
            not commit the created activity then it is necessary to call <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> 
            so the activity object can be properly discarded by the the data connector.
            </para>
            <para class="body">
            <b>Note:</b> <b>CreateNew</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> to create a 
            new Appointment, Journal, or Task object. This is typically done when the user initiates creation 
            of a new activity in one of the calendar view controls. If the user commits the appointment then 
            <i>EndEdit</i> method is called to commit the activity. If the user cancels the activity creation 
            then <i>CancelEdit</i> method is called to discard the activity object.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Commits a new or modified activity.
            </summary>
            <param name="activity">A new or modified ActivityBase derived instance.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance which may be initialized with the result
            asynchronously.</returns>
            <remarks>
            <para class="body">
            <b>EndEdit</b> method is used to commit a modified activity, or a new activity that 
            was created using the <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method.
            </para>
            <param name="force">True to force the edit operation to end. Used when user interface
            being used to perform the edit operation cannot remain in edit mode and therefore the
            edit operation must be ended.
            </param>
            <para class="body">
            <b>Note</b> that the operation of committing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized (via <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>), 
            it will show the user with appropriate status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)">
            <summary>
            Gets activities that meet the criteria specified by the <i>query</i> parameter.
            </summary>
            <param name="query">Query criteria - contains information about which activities to get.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object that contains the activities that meet the 
            criteria specified by the <i>query</i> parameter.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>GetActivities</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> 
            to retrieve appointments, tasks, journals or a combination of the three for one or more 
            resources as needed to display them in calendar view controls that may be associated with
            it. This method may get called multiple times to satisfy
            multiple calendar view controls and also may get called again as dates are navigated in
            those calendar view controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified feature is supported for the activities of the specified type.
            </summary>
            <param name="activityType">Activity type for which to check if the specified feature is supported.</param>
            <param name="activityFeature">Feature to check for support.</param>
            <param name="calendar">Resource calendar context.</param>
            <returns>True if the feature is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified feature is supprted for activities of
            the specified type that belong the specified calendar. If the feature is not supported, relevant user interface 
            will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activity">Activity instance on which the operation is going to be performed.</param>
            <param name="activityOperation">Activity operation.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the specified activity.
            This method is called when there's a context of an activity object available, for which the operation is to be performed.
            If there's no context of an activity available, then the overload <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            that takes in an <see cref="T:Infragistics.Controls.Schedules.ActivityType"/> value is used by the data manager to determine if an operation
            can be performed. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="activityOperation">Activity operation.</param>
            <param name="calendar">ResourceCalendar for which to check if the operation can be performed.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the activities of the specified type
            for the specified resource calendar. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            <para class="body">
            When the context of an activity object for which the operation is being performed available, the overload
            <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/> that takes in the activity is used.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RaiseError(Infragistics.DataErrorInfo)">
            <summary>
            This method is called when there's an error.
            </summary>
            <param name="error">Error information.</param>
            <remarks>
            <para class="body">
            Derived connectors can call this method when there's an error to notify the data manager and controls
            of the error. Doing so will cause the data manager to raise its Error event. Also depending upon the
            severity of the error, the data manager and the controls will take appropriate action to alert the 
            user of the error.
            </para>
            <para class="body">
            <b>Note</b> that typically there's no need to call this method since most of the operations performed
            on the data connector return an error as an out parameter (like <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> method), or
            return an operation result object that contains the error information. The caller, typically the
            <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>, gets those errors and takes appropriate action. This method
            should be called when an error occurs outside of these operations or method calls where the 
            <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> or the view controls do not have any way of knowing. An example
            would be that a connection to the server is lost and you want to notify the user of that via the
            view control's error user interface.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.Remove(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Removes an activity.
            </summary>
            <param name="activity">ActivityBase derived instance to remove.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance.</returns>
            <remarks>
            <para class="body">
            <b>Note</b> that the operation of removing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized (via <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>), 
            it will show the user with appropriate status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.SubscribeToReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber,Infragistics.DataErrorInfo@)">
            <summary>
            Subscribes to reminders for the activities of the specified calendar. Note that more than one 
            subscriber can be subscribed to a single calendar as well as multiple calendars can be 
            subscribed to.
            </summary>
            <param name="calendar">This calendars activity reminders will be deilvered to the specified subscribed.</param>
            <param name="subscriber">When a reminder is due for an activity, the subscriber's <see cref="M:Infragistics.Controls.Schedules.ReminderSubscriber.DeliverReminder(Infragistics.Controls.Schedules.ReminderInfo)"/> method will be invoked.</param>
            <param name="error">If there's an error, this will be set to error information.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.UnsubscribeFromReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber)">
            <summary>
            Unsubscribes from activity reminders of the specified calendar. If the specified subscriber hadn't been subscribed
            previously then this method will take no action.
            </summary>
            <param name="calendar">The calendar's activity reminders to unsubscribe from.</param>
            <param name="subscriber">Subscriber instance.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.VerifyInitialState(System.Collections.Generic.List{Infragistics.DataErrorInfo})">
            <summary>
            Called to verify that the data connector has sufficient state to operate.
            </summary>
            <param name="errorList">A list to receive the errors.</param>
            <remarks>
            <para class="note"><b>Note</b>: this method gets called once by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> when it is verifying its inital state.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.NotifyListeners(System.Object,System.String,System.Object)">
            <summary>
            Notifies the ISupportPropertyChangeNotifications listeners.
            </summary>
            <param name="sender">Object whose property changed.</param>
            <param name="property">Property that changed.</param>
            <param name="extraInfo">Any extra info associated with the property change.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory">
            <summary>
            Gets the recurrence calculator factory used to provide recurrence calculation logic.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this is used by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> to evaluate recurrences
            specified on <see cref="T:Infragistics.Controls.Schedules.DaySettingsOverride"/> objects. It's not used by the <i>XamScheduleDataManager</i>
            to resolve activity recurrences since activity recurrences are resolved by the schedule data connector
            itself.
            </para>
            <para class="body">
            A connector may have its own logic for resolving activity recurences and may not necessarily use
            this recurrence calculator factory for activity recurrence resolution. <b>Note</b> that 
            <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/> does utilize this to resolve activity recurrences.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactoryProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactoryResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactoryResolved">
            <summary>
            Gets the resolved recurrence calculator factory.
            </summary>
            <remarks>
            <para class="body">
            If <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/> property has been set to an instance of <see cref="T:Infragistics.Controls.Schedules.RecurrenceCalculatorFactoryBase"/> then 
            that instance will be returned. Otherwise a default RecurrenceCalculatorFactoryBase instance will be returned.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.ResourceItems">
            <summary>
            Gets the resources collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider">
            <summary>
            Returns or sets and instance of a class that supply timezone information.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderResolved">
            <summary>
            Returns an instance of a <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/> derived class (read-only)
            </summary>
            <value>The value of the <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/> property if set. Otherwise a default provider.</value>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderResolvedProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Schedules.WcfListScheduleDataConnector"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)">
            <summary>
            Indicates whether the activities of the specified activity type are supported by this data connector.
            </summary>
            <param name="activityType">Activity type.</param>
            <returns>True if the specified activities are supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if activities of the specified type are supported by the data connector.
            If they are not supported, relevant user interface will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Begins modifications to an activity.
            </summary>
            <param name="activity">ActivityBase derived object that is to be modified.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A value indicating whether the operation succeeded.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> BeginEdit cannot be called more than once without an intervening call to CancelEdit or EndEdit. Successive BeginEdit
            calls should result an error and return false.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.CancelPendingOperation(Infragistics.OperationResult)">
            <summary>
            Cancels a pending operation.
            </summary>
            <param name="operation">Pending operation that is to be canceled.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>CancelPendingOperation</b> method is called to cancel a pending operation. It's only valid for
            operations that are still pending, that is their <see cref="P:Infragistics.OperationResult.IsComplete"/> is false.
            </para>
            <para class="body">
            An example of how this method is used is as follows. <see cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
            method returns <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object. The activities can be retrieved 
            asynchronously. Before the activities are retrieved, there may be a need for canceling the operation.
            For example, the user scrolls the schedule control to a different range of dates in which case
            it's not necessary to retrieve activities for the perviously visible date range. In such a case,
            the previous query operation will be canceled if it's still pending.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new ActivityBase derived instance based on the activityType parameter.
            </summary>
            <param name="activityType">Indicates the type of activity to create.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A new ActivityBase derived object created according to the activityType parameter.</returns>
            <remarks>
            <para class="body">
            <b>CreateActivity</b> creates a new <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object, like Appointment, Journal, or Task. 
            Which activity type to create is specified by the <paramref name="activityType"/> parameter. Note that the created activity 
            doesn't get commited to the data source until <see cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method is called. Also if you wish to
            not commit the created activity then it is necessary to call <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> 
            so the activity object can be properly discarded by the the data connector.
            </para>
            <para class="body">
            <b>Note:</b> <b>CreateNew</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> to create a 
            new Appointment, Journal, or Task object. This is typically done when the user initiates creation 
            of a new activity in one of the calendar view controls. If the user commits the appointment then 
            <i>EndEdit</i> method is called to commit the activity. If the user cancels the activity creation 
            then <i>CancelEdit</i> method is called to discard the activity object.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Commits a new or modified activity.
            </summary>
            <param name="activity">A new or modified ActivityBase derived instance.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance which may be initialized with the result
            asynchronously.</returns>
            <remarks>
            <para class="body">
            <b>EndEdit</b> method is used to commit a modified activity, or a new activity that 
            was created using the <see cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method.
            </para>
            <param name="force">True to force the edit operation to end. Used when user interface
            being used to perform the edit operation cannot remain in edit mode and therefore the
            edit operation must be ended.
            </param>
            <para class="body">
            <b>Note</b> that the operation of committing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized (via <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>), 
            it will show the user with appropriate status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)">
            <summary>
            Gets activities that meet the criteria specified by the <i>query</i> parameter.
            </summary>
            <param name="query">Query criteria - contains information about which activities to get.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object that contains the activities that meet the 
            criteria specified by the <i>query</i> parameter.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>GetActivities</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> 
            to retrieve appointments, tasks, journals or a combination of the three for one or more 
            resources as needed to display them in calendar view controls that may be associated with
            it. This method may get called multiple times to satisfy
            multiple calendar view controls and also may get called again as dates are navigated in
            those calendar view controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified feature is supported for the activities of the specified type.
            </summary>
            <param name="activityType">Activity type for which to check if the specified feature is supported.</param>
            <param name="activityFeature">Feature to check for support.</param>
            <param name="calendar">Resource calendar context.</param>
            <returns>True if the feature is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified feature is supprted for activities of
            the specified type that belong the specified calendar. If the feature is not supported, relevant user interface 
            will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="activityOperation">Activity operation.</param>
            <param name="calendar">ResourceCalendar for which to check if the operation can be performed.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the activities of the specified type
            for the specified resource calendar. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            <para class="body">
            When the context of an activity object for which the operation is being performed available, the overload
            <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/> that takes in the activity is used.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activity">Activity instance on which the operation is going to be performed.</param>
            <param name="activityOperation">Activity operation.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the specified activity.
            This method is called when there's a context of an activity object available, for which the operation is to be performed.
            If there's no context of an activity available, then the overload <see cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            that takes in an <see cref="T:Infragistics.Controls.Schedules.ActivityType"/> value is used by the data manager to determine if an operation
            can be performed. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Removes an activity.
            </summary>
            <param name="activity">ActivityBase derived instance to remove.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance.</returns>
            <remarks>
            <para class="body">
            <b>Note</b> that the operation of removing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized (via <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>), 
            it will show the user with appropriate status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.SubscribeToReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber,Infragistics.DataErrorInfo@)">
            <summary>
            Subscribes to reminders for the activities of the specified calendar. Note that more than one 
            subscriber can be subscribed to a single calendar as well as multiple calendars can be 
            subscribed to.
            </summary>
            <param name="calendar">This calendars activity reminders will be deilvered to the specified subscribed.</param>
            <param name="subscriber">When a reminder is due for an activity, the subscriber's <see cref="M:Infragistics.Controls.Schedules.ReminderSubscriber.DeliverReminder(Infragistics.Controls.Schedules.ReminderInfo)"/> method will be invoked.</param>
            <param name="error">If there's an error, this will be set to error information.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.UnsubscribeFromReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber)">
            <summary>
            Unsubscribes from activity reminders of the specified calendar. If the specified subscriber hadn't been subscribed
            previously then this method will take no action.
            </summary>
            <param name="calendar">The calendar's activity reminders to unsubscribe from.</param>
            <param name="subscriber">Subscriber instance.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.VerifyInitialState(System.Collections.Generic.List{Infragistics.DataErrorInfo})">
            <summary>
            Called to verify that the data connector has sufficient state to operate.
            </summary>
            <param name="errorList">A list to receive the erros</param>
            <remarks>
            <para class="note"><b>Note</b>: this method gets called once by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> when it is verifying its inital state.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationName"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingIntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingInterval"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddressProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddress"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBindingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBinding"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.SecurityTokenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.SecurityToken"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.ResourceItems">
            <summary>
            Gets the resources collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationName">
            <summary>
            Returns or sets the name of the endpoint defined in the client configuration file which is used to communicate 
            with the WCF service.
            </summary>
            <remarks>
            <p class="body">
            If this is not set, both the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBinding"/> and <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddress"/> must be set for the connector
            to be able to connect to the WCF service.
            </p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationNameProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBinding"/>
            <seealso cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddress"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingInterval">
            <summary>
            Returns or sets the interval at which the client will poll the server for changes to the data sources.
            The default is 30 seconds.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingMode"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingMode">
            <summary>
            Returns or sets the mode of polling to use when polling the server for changes.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Polling only works when the item sources on the service send out list change notifications.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingInterval"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddress">
            <summary>
            Returns or sets the remote address of the WCF service associated with this connector.
            </summary>
            <remarks>
            <p class="body">
            This can be set to a null or an instance of one of these types: string, System.Uri, or System.ServiceModel.EndpointAddress.
            </p>
            <p class="body">
            If the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationName"/> is specified, this property is not required, but will override the 
            service address defined in the endpoint when it is set. If the EndpointConfigurationName is not set, then it is required
            that this property and <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBinding"/> are set for the connector to be able to connect to the WCF service.
            </p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddressProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBinding">
            <summary>
            Returns or sets the binding to use when connecting to the WCF service.
            </summary>
            <remarks>
            <p class="body">
            If the RemoteBinding and the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteAddress"/> are both set, the <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.EndpointConfigurationName"/>
            will not be used even if it is set.
            </p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.RemoteBindingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.SecurityToken">
            <summary>
            Gets or sets security information which will be authenticaed by the service on all remote calls.
            </summary>
            <remarks>
            <para class="body">
            This property can be set to a string instance that contained security information or an instance of an object
            whose ToString method returns the security information.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.SecurityTokenProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ListScheduleDataConnector">
            <summary>
            Used for providing schedule data from various data sources to <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.
            </summary>
            <remarks>
            <para class="body">
            <b>ListScheduleDataConnector</b> exposes properties for specifying data sources from which the data for appointments, 
            tasks, journals, resources and resource calendars are retrieved from. These schedule objects are then provided to the
            <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> whose <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnector"/> property
            is set to this instance of <i>ListScheduleDataConnector</i>.
            </para>
            <para class="body">
            Not all data sources are required. Minimally however the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/> and one of
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>, <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/> or <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/>
            is required for a useful setup. If you want to utilize multiple calendars per resource capability then
            you need to specify <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSource"/> as well.
            </para>
            <para class="body">
            The data sources can be any objects that implement <i>IEnumerable</i> interface. You need to specify property
            mappings that map properties or fields of the data source objects to the properties of the corresponding schedule 
            objects using corresponding property mapping collections exposed on the class. For example 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/> is used to map properties or fields of 
            the data objects in the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/> to the properties of
            the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> clas. You can set the <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> 
            property on the mappings collection to indicate that the property or field names in the data items are the same as 
            the names of properties in the corresponding class in the schedule object model. If a property's name is different then 
            you can add an entry in the mapping collection for that property.
            </para>
            <para class="body">
            For example, if you set <i>UseDefaultMappings</i> to true on the <i>AppointmentPropertyMappings</i> collection,
            the data objects in the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/> are assumed 
            to contain properties or fields with the same names as the properties of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> 
            class. If one or more properties' names do not match, you can add entries in the mapping collection for
            those properties. Other properties will still use the default mappings. If you leave <i>UseDefaultMappings</i>
            to false, then you need to add an entry in the mapping collection each property that you want to map.
            Data for certain properties are required for proper functioning. See <see cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/>,
            <see cref="T:Infragistics.Controls.Schedules.JournalProperty"/>, <see cref="T:Infragistics.Controls.Schedules.TaskProperty"/>, <see cref="T:Infragistics.Controls.Schedules.ResourceProperty"/> and 
            <see cref="T:Infragistics.Controls.Schedules.ResourceCalendarProperty"/> enums for more information on which properties are required.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnector"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)">
            <summary>
            Indicates whether the activities of the specified activity type are supported by this data connector.
            </summary>
            <param name="activityType">Activity type.</param>
            <returns>True if the specified activities are supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if activities of the specified type are supported by the data connector.
            If they are not supported, relevant user interface will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Begins modifications to an activity.
            </summary>
            <param name="activity">ActivityBase derived object that is to be modified.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A value indicating whether the operation succeeded.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> BeginEdit can be called multiple times for an activity without intervening EndEdit or CancelEdit calls. Successive BeginEdit
            calls should result in NOOP and return true and null error information. However note that only a single EndEdit or CancelEdit call may 
            be made to come out of edit state.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Cancels a new activity that was created by the <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> call however one that 
            hasn't been commited yet.
            </summary>
            <param name="activity">ActivityBase derived object that was created using <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method however
            one that hasn't been committed yet.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>CancelEdit</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            to cancel a new activity that was created using the <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method
            however the activity must not have been commited yet. This is typically done when the user 
            cancels the dialog for creating a new activity, like the new appointment dialog.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelPendingOperation(Infragistics.OperationResult)">
            <summary>
            Cancels a pending operation.
            </summary>
            <param name="operation">Pending operation.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>CancelPendingOperation</b> method is called to cancel a pending operation. It's only valid for
            operations that are still pending, that is their <see cref="P:Infragistics.OperationResult.IsComplete"/> is false.
            </para>
            <para class="body">
            An example of how this method is used is as follows. <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
            method returns <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object. The activities can be retrieved 
            asynchronously. Before the activities are retrieved, there may be a need for canceling the operation.
            For example, the user scrolls the schedule control to a different range of dates in which case
            it's not necessary to retrieve activities for the perviously visible date range. In such a case,
            the previous query operation will be canceled if it's still pending.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new ActivityBase derived instance based on the activityType parameter.
            </summary>
            <param name="activityType"></param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A new ActivityBase derived object created according to the activityType parameter.</returns>
            <remarks>
            <para class="body">
            <b>CreateActivity</b> creates a new <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object, like Appointment, Journal or Task. 
            Which activity type to create is specified by the <paramref name="activityType"/> parameter. Note that the created activity 
            doesn't get commited to the data source until <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method is called. Also if you wish to
            not commit the created activity then it is necessary to call <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> 
            so the activity object can be properly discarded by the the data connector.
            </para>
            <para class="body">
            <b>Note:</b> <b>CreateNew</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> to create a 
            new Appointment, Journal or Task object. This is typically done when the user initiates creation 
            of a new activity in one of the calendar view controls. If the user commits the appointment then 
            <i>EndEdit</i> method is called to commit the activity. If the user cancels the activity creation 
            then <i>CancelEdit</i> method is called to discard the activity object.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Commits a new or modified activity.
            </summary>
            <param name="activity">A new or modified ActivityBase derived instance.</param>
            <param name="force">True to force the edit operation to end. Used when user interface
            being used to perform the edit operation cannot remain in edit mode and therefore the
            edit operation must be ended. If the specified activity is deemed invalid to be committed
            then an error result should be returned.
            </param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance which may be initialized with the result
            asynchronously.</returns>
            <remarks>
            <para class="body">
            <b>EndEdit</b> method is used to commit a modified activity or a new activity that 
            was created using the <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method.
            </para>
            <para class="body">
            <b>Note</b> that the operation of committing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized, it will show the user with appropriate
            status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)">
            <summary>
            Gets activities that meet the criteria specified by the <i>query</i> parameter.
            </summary>
            <param name="query">Query criteria - contains information about which activities to get.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object that contains the activities that meet the 
            criteria specified by the <i>query</i> parameter.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>GetActivities</b> method is called by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> 
            to retrieve appointments, tasks, journals or a combination of the three for one or more 
            resources as needed to display them in calendar view controls that may be associated with
            it. This method may get called multiple times to satisfy
            multiple calendar view controls and also may get called again as dates are navigated in
            those calendar view controls.
            </para>
            <para class="body">
            <b>Note:</b> If there's an error the returned ActivityQueryResult's <see cref="P:Infragistics.OperationResult.Error"/> 
            property will return the error information.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified feature is supported for the activities of the specified type.
            </summary>
            <param name="activityType">Activity type for which to check if the specified feature is supported.</param>
            <param name="activityFeature">Feature to check for support.</param>
            <param name="calendar">Resource calendar context.</param>
            <returns>True if the feature is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified feature is supprted for activities of
            the specified type that belong the specified calendar. If the feature is not supported, relevant user interface 
            will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activity">Activity instance on which the operation is going to be performed.</param>
            <param name="activityOperation">Activity operation.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the specified activity.
            This method is called when there's a context of an activity object available, for which the operation is to be performed.
            If there's no context of an activity available, then the overload <see cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            that takes in an <see cref="T:Infragistics.Controls.Schedules.ActivityType"/> value is used by the data manager to determine if an operation
            can be performed. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="activityOperation">Activity operation.</param>
            <param name="calendar">ResourceCalendar for which to check if the operation can be performed.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the activities of the specified type
            for the specified resource calendar. If the operation is not supported, relevant user interface will be disabled or hidden in 
            the schedule controls.
            </para>
            <para class="body">
            When the context of an activity object for which the operation is being performed available, the overload
            <see cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/> that takes in the activity is used.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityOperationSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.Remove(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Removes an activity.
            </summary>
            <param name="activity">ActivityBase derived instance to remove.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance.</returns>
            <remarks>
            <para class="body">
            <b>Note</b> that the operation of removing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized (via <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>), 
            it will show the user with appropriate status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.SubscribeToReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber,Infragistics.DataErrorInfo@)">
            <summary>
            Subscribes to reminders for the activities of the specified calendar. Note that more than one 
            subscriber can be subscribed to a single calendar as well as multiple calendars can be 
            subscribed to.
            </summary>
            <param name="calendar">This calendars activity reminders will be deilvered to the specified subscribed.</param>
            <param name="subscriber">When a reminder is due for an activity, the subscriber's <see cref="M:Infragistics.Controls.Schedules.ReminderSubscriber.DeliverReminder(Infragistics.Controls.Schedules.ReminderInfo)"/> method will be invoked.</param>
            <param name="error">If there's an error, this will be set to error information.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.UnsubscribeFromReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber)">
            <summary>
            Unsubscribes from activity reminders of the specified calendar. If the specified subscriber hadn't been subscribed
            previously then this method will take no action.
            </summary>
            <param name="calendar">The calendar's activity reminders to unsubscribe from.</param>
            <param name="subscriber">Subscriber instance.</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentPropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentPropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListScheduleDataConnector.EndEditOverride(Infragistics.Controls.Schedules.IEditList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.ActivityOperationResult,System.Boolean)">
            <summary>
            This is called to commit changes to an activity to the underlying data source.
            </summary>
            <param name="editList">This is the list manager.</param>
            <param name="result">Result's Activity is being updated. This result should be initialized with the result of the opreation.</param>
            <param name="force">True if the UI cannot remain in edit mode and therefore the operation must be ended,
            either with success or with an error. It cannot be canceled.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItems">
            <summary>
            Gets the resources collection.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the changes to the returned collection will be synchronized with the 
            the data items in the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/>.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource">
            <summary>
            Specifies the data source where the appointments are stored.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>AppointmentPropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>AppointmentPropertyMappingCollection</i> to true if the field names 
            in the data source are the same as the property names as defined by the <see cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/> 
            enum. You can also set <i>UseDefaultMapping</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having the 
            rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource">
            <summary>
            Specifies the data source where the journals are stored.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>JournalPropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>JournalPropertyMappingCollection</i>
            to true if the field names in the data source are the same as the 
            property names as defined by the <see cref="T:Infragistics.Controls.Schedules.JournalProperty"/> enum.
            You can also set <i>UseDefaultMapping</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having
            the rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.JournalPropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.JournalPropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.JournalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSource">
            <summary>
            Specifies the data source where the recurring appointments are stored.
            </summary>
            <remarks>
            <para class="body">
            <b>RecurringAppointmentItemsSource</b> specifies the data source where the recurring
            appointments are stored. This is optional. If not specified then the recurring appointments
            will be stored in the data source specified by <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>.
            If specified then the recurring appointments, including variances, will be stored in this 
            data source.
            </para>
            <para class="body">
            Note that if this data source is specified then all the appointments in the 
            <i>AppointmentItemsSource</i> will be assumed to be non-recurring appointments. 
            In other words it's not allowed for both the <i>AppointmentItemsSource</i> and 
            <i>RecurringAppointmentItemsSource</i> data sources to contain recurring appointments.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentPropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>RecurringAppointmentPropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>AppointmentPropertyMappingCollection</i> to true if the field names 
            in the data source are the same as the property names as defined by the <see cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/> 
            enum. You can also set <i>UseDefaultMappings</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having the 
            rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSource"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource">
            <summary>
            Specifies the data source where the resources are stored.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourcePropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>ResourcePropertyMappingCollection</i>  
            to true if the field names in the data source are the same as the 
            property names as defined by the <see cref="T:Infragistics.Controls.Schedules.ResourceProperty"/> enum.
            You can also set <i>UseDefaultMapping</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having
            the rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourcePropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourcePropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSource">
            <summary>
            Specifies the data source where the resource calendars are stored.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourceCalendarPropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>ResourceCalendarPropertyMappingCollection</i>  
            to true if the field names in the data source are the same as the 
            property names as defined by the <see cref="T:Infragistics.Controls.Schedules.ResourceProperty"/> enum.
            You can also set <i>UseDefaultMapping</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having
            the rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendarProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource">
            <summary>
            Specifies the data source where the tasks are stored.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings">
            <summary>
            Specifies the data source field mappings for the <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>TaskPropertyMappings</b> property is used to specify which fields in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/> provide data for which properties of the
            <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </para>
            <para class="body">
            This property by default returns an empty collection. You can set the 
            <see cref="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings"/> property 
            on the returned <i>TaskPropertyMappingCollection</i>  
            to true if the field names in the data source are the same as the 
            property names as defined by the <see cref="T:Infragistics.Controls.Schedules.TaskProperty"/> enum.
            You can also set <i>UseDefaultMapping</i> to true and add entries for specific
            fields to override the field mappings for those particular fields while having
            the rest of the fields use the default field mappings.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.TaskPropertyMappingCollection"/>
            <seealso cref="T:Infragistics.Controls.Schedules.TaskPropertyMapping"/>
            <seealso cref="T:Infragistics.Controls.Schedules.TaskProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderAdapter">
            <summary>
            Represents the header of a specific date in the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DateItemAdapter`1">
            <summary>
            Represents an item with a specific date
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter">
            <summary>
            Custom class used to represent a group of <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/> instances for a specific set of <see cref="T:Infragistics.Controls.Schedules.Resource"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.#ctor(Infragistics.Controls.Schedules.ScheduleControlBase,System.DateTime,System.DateTime,System.DateTime,System.DateTime,Infragistics.Controls.Schedules.TimeslotCollection,Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter"/>
            </summary>
            <param name="control">The associated control</param>
            <param name="start">The logical starting date for the item</param>
            <param name="end">The logical ending date for the item</param>
            <param name="firstSlotStart">The time for the first timeslot</param>
            <param name="lastSlotEnd">The time for the last timeslot</param>
            <param name="timeslots">A collection of <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/> instances</param>
            <param name="activityOwner">The calendar group for which activity will be generated</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.End"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.End">
            <summary>
            Returns the non-inclusive end time for the last time slot.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.Start">
            <summary>
            Returns the start time for the first time slot.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter.Timeslots">
            <summary>
            Returns a read-only collection of <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/> instances.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotAreaAdapter">
            <summary>
            Represents the area within a CalendarGroup that contains the time information for the group.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotAreaAdapter.#ctor(Infragistics.Controls.Schedules.ScheduleControlBase,Infragistics.Controls.Schedules.CalendarGroupBase,System.Collections.Generic.IList{Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotAreaAdapter"/>
            </summary>
            <param name="control">The owning control</param>
            <param name="calendarGroup">Associated group</param>
            <param name="timeSlotGroups">A collection of the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter"/> instances that the group represents</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotAreaAdapter.TimeslotAreas">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter"/> instances
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeaderAdapter">
            <summary>
            Represents the header of a specific date in the <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotAreaAdapter.#ctor(Infragistics.Controls.Schedules.XamMonthView,System.DateTime,System.DateTime,System.DateTime,System.DateTime,Infragistics.Controls.Schedules.TimeslotCollection,Infragistics.Controls.Schedules.CalendarGroupBase,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotAreaAdapter"/>
            </summary>
            <param name="control">The associated control</param>
            <param name="start">The logical starting date for the item</param>
            <param name="end">The logical ending date for the item</param>
            <param name="firstSlotStart">The time for the first timeslot</param>
            <param name="lastSlotEnd">The time for the last timeslot</param>
            <param name="timeslots">A collection of <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/> instances</param>
            <param name="activityOwner">The calendar group for which activity will be generated</param>
            <param name="weekNumber">Week number that the object represents</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotBase">
            <summary>
            Base class for an object that represents a specific time range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ITimeRange">
            <summary>
            Interface implemented by an item that spans a given range of time.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotBase.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotBase"/>
            </summary>
            <param name="start">The starting time for the time slot</param>
            <param name="end">The ending time for the time slot</param>
            <remarks>
            <p class="note"><b>Note:</b> If the <paramref name="end"/> is before the <paramref name="start"/>, the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/> will represent the normalized time. I.e. The Start will always be before or equal to the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotBase.OnElementAttached(Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase)">
            <summary>
            Invoked when the object is being associated with an element.
            </summary>
            <param name="element">The element with which the object is being associated</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotBase.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End">
            <summary>
            Returns the non-inclusive end time for the time slot.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start">
            <summary>
            Returns the start time for the time slot.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBaseAdapter.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBaseAdapter.IsSelected">
            <summary>
            Returns a boolean indicating if the time slot is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayAdapter.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MultiDayActivityAreaAdapter.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.Timeslot">
            <summary>
            Custom object used to represent a specific time range in a <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.Timeslot.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/>
            </summary>
            <param name="start">The starting time for the time slot</param>
            <param name="end">The ending time for the time slot</param>
            <remarks>
            <p class="note"><b>Note:</b> If the <paramref name="end"/> is before the <paramref name="start"/>, the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/> will represent the normalized time. I.e. The Start will always be before or equal to the End.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.Timeslot.CreateInstanceOfRecyclingElement">
            <summary>
            Used to provide an instance of the containing element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.Timeslot.OnElementAttached(Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase)">
            <summary>
            Invoked when the object is being associated with an element.
            </summary>
            <param name="element">The element with which the object is being associated</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.Timeslot.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.Timeslot.IsSelected">
            <summary>
            Returns a boolean indicating if the time slot is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.Timeslot.IsWorkingHour">
            <summary>
            Returns a boolean indicating if the time slot represents a working hour.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderAdapter">
            <summary>
            Custom class used to represent a header for a specific time range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderAdapter.#ctor(System.DateTime,System.DateTime,Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderAdapter"/>
            </summary>
            <param name="start">The starting time for the time slot</param>
            <param name="end">The ending time for the time slot</param>
            <param name="token">The timezone token for the timezone the header represents or null if it represents the local timezone</param>
            <remarks>
            <p class="note"><b>Note:</b> If the <paramref name="end"/> is before the <paramref name="start"/>, the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/> will represent the normalized time. I.e. The Start will always be before or equal to the End.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Collections.ReadOnlyNotifyCollection`1">
            <summary>
            Represents a read-only collection of items.
            </summary>
            <typeparam name="T">Type of items contained in the collection.</typeparam>
        </member>
        <member name="M:Infragistics.Collections.ReadOnlyNotifyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Collections.ReadOnlyNotifyCollection`1"/>.
            </summary>
            <param name="source">This is the list that this ReadOnlyNotifyCollection will wrap and provide items from.</param>
        </member>
        <member name="M:Infragistics.Collections.ReadOnlyNotifyCollection`1.Contains(`0)">
            <summary>
            Indicates whether the specified item is in the collection.
            </summary>
            <param name="item">Item to check if it's contained in the collection.</param>
            <returns>True if the item exists in the collection, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Collections.ReadOnlyNotifyCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies items from this collection to the specified array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">The location in the destination array where the items will be copied.</param>
        </member>
        <member name="M:Infragistics.Collections.ReadOnlyNotifyCollection`1.GetEnumerator">
            <summary>
            Returns the enumerator for enumerating items in the collection.
            </summary>
            <returns>IEnumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Collections.ReadOnlyNotifyCollection`1.IndexOf(`0)">
            <summary>
            Returns the index of the specified item in the collection.
            </summary>
            <param name="item">The item whose index will be returned.</param>
            <returns>The index of the item if the item exists in the collection, -1 otherwise.</returns>
        </member>
        <member name="E:Infragistics.Collections.ReadOnlyNotifyCollection`1.CollectionChanged">
            <summary>
            Raised when the collection's contents change.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ReadOnlyNotifyCollection`1.Item(System.Int32)">
            <summary>
            Returns the item at the specified index.
            </summary>
            <param name="index">Index of the item to get.</param>
            <returns>Item at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Collections.ReadOnlyNotifyCollection`1.Count">
            <summary>
            Returns the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ReadOnlyNotifyCollection`1.IsReadOnly">
            <summary>
            Indicates whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ReadOnlyNotifyCollection`1.Source">
            <summary>
            Gets the source collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ReadOnlyNotifyCollection`1.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.ItemNotificationCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SelectedActivityCollection">
            <summary>
            Represents a collection of <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instances
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SelectedActivityCollection.ClearItems">
            <summary>
            Removes all the items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SelectedActivityCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the collection is sending out its change notifications
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SelectedActivityCollection.OnItemAdding(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Invoked when an item is about to be added to the collection.
            </summary>
            <param name="itemAdded">The item being added</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.SelectedActivityCollection.NotifyItemsChanged">
            <summary>
            Returns true to indicate that the collection wants to receive notifications as items are added and removed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Reminder">
            <summary>
            Contains information regarding the reminder that's displayed when an activity is due.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.UserData">
            <summary>
            Specifies user data associated with this reminder.
            </summary>
            <remarks>
            <para class="body">
            <b>UserData</b> property's value is not used by the XamSchedule in any way. It's meant
            to allow you to store any piece of data as part of the reminder object so that you can 
            retrieve it later, for example when the reminder is activated. As an example, 
            <i>UserData</i> can be a string that represents an action to take, for example a command
            to execute when the reminder is activated.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.IsSnoozed">
            <summary>
            Indicates whether the activity is snoozed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.LastDisplayedTime">
            <summary>
            Indicates the time that the reminder was last displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.LastSnoozeTime">
            <summary>
            Indicates the time that the reminder was last snoozed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.SnoozeInterval">
            <summary>
            Indicates the interval after the <see cref="P:Infragistics.Controls.Schedules.Reminder.LastSnoozeTime"/> that the reminder will be re-displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Reminder.Text">
            <summary>
            Specifies the text that will be displayed in the reminder.
            </summary>
            <remarks>
            <para class="body">
            <b>Text</b> property specifies the text that will be displayed in the reminder.
            If <i>Text</i> is note set then a default text will be used in the reminder.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ReminderSubscriber">
            <summary>
            A class used to get notified of reminders.
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.SubscribeToReminders(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ReminderSubscriber,Infragistics.DataErrorInfo@)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderSubscriber.DeliverReminder(Infragistics.Controls.Schedules.ReminderInfo)">
            <summary>
            Call to deliver a reminder.
            </summary>
            <param name="reminderInfo">Contains information regarding the reminder.</param>
            <remarks>
            <para class="body">
            <b>Note</b> that this method should not block the caller, for example by displaying a modal 
            dialog. Multiple reminders can be due at the same time in which case this method will
            be called for each of the reminders.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderSubscriber.RemoveReminder(Infragistics.Controls.Schedules.ReminderInfo)">
            <summary>
            Call to remove a reminder.
            </summary>
            <param name="reminderInfo">Contains information regarding the reminder.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ReminderInfo">
            <summary>
            Contains information regarding an invoked reminder.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderInfo.#ctor(Infragistics.Controls.Schedules.Reminder,System.Object)">
            <summary>
            Constructor. Initializes a new instance of <seealso cref="T:Infragistics.Controls.Schedules.ReminderInfo"/> object.
            </summary>
            <param name="reminder">Associated reminder object if any.</param>
            <param name="context">Object associated with the reminder.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderInfo.Dismiss">
            <summary>
            Dismisses the reminder.
            </summary>
            <remarks>
            <b>Dismiss</b> is called when the user acknowledges the reminder and no longer wants the reminder
            to be displayed.
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ReminderInfo.Snooze(System.DateTime,System.TimeSpan)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderInfo.Snooze(System.DateTime,System.TimeSpan)">
            <summary>
            Snoozes the reminder.
            </summary>
            <param name="snoozeTime">When the reminder was snoozed. This date-time value is in UTC.</param>
            <param name="snoozeInterval">The snooze interval after which to re-display the reminder.</param>
            <remarks>
            <para class="body">
            <b>Snooze</b> method is called when the user wants to be re-reminded after a certain interval of time.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ReminderInfo.Dismiss"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderInfo.EnsureReminderAllocated">
            <summary>
            Allocates a reminder if it hasn't been allocated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderInfo.Context">
            <summary>
            Gets the object if any associated with the reminder.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderInfo.IsDismissed">
            <summary>
            Indicates if the reminder has been dismissed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderInfo.IsSnoozed">
            <summary>
            Indicates if the reminder has been snoozed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderInfo.Reminder">
            <summary>
            Gets the associated <see cref="P:Infragistics.Controls.Schedules.ReminderInfo.Reminder"/> object if any.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that if the <b>Reminder</b> property is null then it will be set to a new <see cref="P:Infragistics.Controls.Schedules.ReminderInfo.Reminder"/> object
            when <see cref="M:Infragistics.Controls.Schedules.ReminderInfo.Snooze(System.DateTime,System.TimeSpan)"/> method is called.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.ReminderInfo.Dismiss"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ReminderInfo.Snooze(System.DateTime,System.TimeSpan)"/>
        </member>
        <member name="T:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.ActivityPresenter)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
            <returns>A string that contains 'ActivityPresenter'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or information about the associated activity.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.ActivityResizerBar)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
            <returns>A string that contains 'ActivityPresenter'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ActivityResizerBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea"/>
            </summary>
            <returns>A string that contains 'CalendarGroupTimeslotArea'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Tab</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/>
            </summary>
            <returns>A string that contains 'CalendarHeaderArea'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.CalendarHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>TabItem</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            </summary>
            <returns>A string that contains 'CalendarHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer.RaiseAutomationIsSelectedChanged(System.Boolean)">
            <summary>
            Raises an automation notification that the IsSelected state has changed.
            </summary>
            <param name="isSelected">The new state</param>
        </member>
        <member name="T:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea"/>
            </summary>
            <returns>A string that contains 'DayViewDayHeaderArea'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.DayViewDayHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/>
            </summary>
            <returns>A string that contains 'DayViewDayHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/>
            </summary>
            <returns>A string that contains 'MoreActivityIndicator'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader"/>
            </summary>
            <returns>A string that contains 'ScheduleViewDayHeader'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase"/>
            </summary>
            <returns>A string that contains 'TimeRangePresenterBase'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the element that is associated with this peer.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
            <returns>The pattern provider or null</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.TimeslotArea)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/>
            </summary>
            <returns>A string that contains 'TimeslotArea'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the element that is associated with this peer.
            </summary>
            <returns>The automation name of the element or the name of the associated calendar.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer.#ctor(Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/>
            </summary>
            <returns>A string that contains 'TimeslotHeaderArea'</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamDayViewAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDayViewAutomationPeer.#ctor(Infragistics.Controls.Schedules.XamDayView)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamDayViewAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDayViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDayViewAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
            <returns>A string that contains 'XamDayView'</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer.#ctor(Infragistics.Controls.Schedules.XamScheduleView)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer"/>
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/> that the peer represents</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>
            </summary>
            <returns>A string that contains 'XamScheduleView'</returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandBase.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/>
            </summary>
            <param name="appointmentDialogCore">The window for which the command will be executed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCommandSource.CommandType">
            <summary>
            Gets or sets the AppointmentDialogCoreCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreSaveAndCloseCommand">
            <summary>
            A command that saves the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that is hosting it. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreSaveAndCloseCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreSaveAndCloseCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Saves the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that is hosting it. 
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that will be saved closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCloseCommand">
            <summary>
            A command that closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreCloseCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDeleteCommand">
            <summary>
            A command that deletes the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> current being edited in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDeleteCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDeleteCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Deletes the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> current being edited in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object which is editing the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDisplayRecurrenceDialogCommand">
            <summary>
            A command that deletes the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> current being edited in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDisplayRecurrenceDialogCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreDisplayRecurrenceDialogCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Deletes the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> current being edited in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object which is editing the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreShowTimeZonePickersCommand">
            <summary>
            A command that shows the time zone pickers in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreShowTimeZonePickersCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreShowTimeZonePickersCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Shows the time zone pickers in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object which is editing the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreHideTimeZonePickersCommand">
            <summary>
            A command that shows the time zone pickers in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreHideTimeZonePickersCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCoreHideTimeZonePickersCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore)">
            <summary>
            Hides the time zone pickers in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
            <param name="appointmentDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object which is editing the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandBase.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.CalendarHeader)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            </summary>
            <param name="CalendarHeader">The window for which the command will be executed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCommandSource.CommandType">
            <summary>
            Gets or sets the CalendarHeaderCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCloseCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will be closed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCloseCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderCloseCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.CalendarHeader)">
            <summary>
            Applies closing a XamDialogWindow.
            </summary>
            <param name="CalendarHeader">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderToggleOverlayModeCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will be closed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderToggleOverlayModeCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderToggleOverlayModeCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.CalendarHeader)">
            <summary>
            Applies closing a XamDialogWindow.
            </summary>
            <param name="CalendarHeader">The <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandBase.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
            </summary>
            <param name="appointmentDialogCore">The window for which the command will be executed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCommandSource.CommandType">
            <summary>
            Gets or sets the RecurrenceDialogCoreCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreSaveAndCloseCommand">
            <summary>
            A command that saves the changes (if any) to the Recurrence information and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreSaveAndCloseCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreSaveAndCloseCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore)">
            <summary>
            Saves the changes (if any) to the Recurrence information and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>. 
            </summary>
            <param name="recurrenceDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object that will be saved closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCloseCommand">
            <summary>
            A command that closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreCloseCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore)">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object.
            </summary>
            <param name="recurrenceDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object that will be closed.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreRemoveRecurrenceCommand">
            <summary>
            A command that removes the recurrence definition from the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> being edited and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreRemoveRecurrenceCommand.CanExecute(System.Object)">
            <summary>
            Returns true if the command can be executed on the object.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.RecurrenceDialogCoreRemoveRecurrenceCommand.ExecuteCommand(Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore)">
            <summary>
            Removes the recurrence definition from the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> being edited and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>.
            </summary>
            <param name="recurrenceDialogCore">The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object that will be closed.</param>
        </member>
        <member name="T:Infragistics.ItemFactory">
            <summary>
            Used for creating objects of a specific type.
            </summary>
        </member>
        <member name="M:Infragistics.ItemFactory.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.ItemFactory.CreateNew">
            <summary>
            Creates new object.
            </summary>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:Infragistics.ItemFactory`1">
            <summary>
            Used for creating objects of type specified by the generic template type parameter <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Objects of this type will be created.</typeparam>
        </member>
        <member name="M:Infragistics.ItemFactory`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.ItemFactory`1.CreateNew">
            <summary>
            Creates new object.
            </summary>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:Infragistics.GenericListProxy.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.GenericListPropxy`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleItemCollectionListManager`2.#ctor(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.StoragePropsInfo,System.Converter{`0,System.Object})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleItemCollectionListManager`2.RecreateAllViewItems">
            <summary>
            Discards all the existing view items and dirties all the query results so the view items get re-created.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceListManager.#ctor(Infragistics.Controls.Schedules.IScheduleDataConnector)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceListManager.RecreateAllViewItems">
            <summary>
            Discards all the existing view items and dirties all the query results so the view items get re-created.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendarListManager.#ctor(Infragistics.Controls.Schedules.IScheduleDataConnector)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityListManager`2._mappedKeys">
            <summary>
            Mapping of ActivityProperty enum values to their corresponding MappingKey enum values.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityListManager`2._complementaryListManager">
            <summary>
            This is set to the recurring list manager on a non-recurring list manager and the other way around as well.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.CreateLinqStatement(Infragistics.Controls.Schedules.ListQueryResult,Infragistics.DataErrorInfo@)">
            <summary>
            This method is called to create linq condition from a list specific query result, like ActivityQuery for the
            activity list manager.
            </summary>
            <param name="result">Linq statement for the query associated with the specified result object will be returned.</param>
            <param name="error">This out param will be set if an error occurs.</param>
            <returns>Returns linq condition derived from the specified listSpecificQueryInfo object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.RecreateAllViewItems">
            <summary>
            Discards all the existing view items and dirties all the query results so the view items get re-created.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.CreateRemindersOccurrenceIdCollection(Infragistics.Controls.Schedules.ActivityQueryComponent,System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase},Infragistics.Controls.Schedules.OccurrenceManager{`0})">
            <summary>
            Creates occurrence id collection for recurring activities for reminders activities result.
            </summary>
            <param name="qc">Query component that has information regarding the reminders query.</param>
            <param name="sourceActivities">This is a collection of recurring and variance activities. Recurring activities
            in this collection will be resolved into occurrences with the variances in the collection taken into account.
            The variances will also be included in the resultant occurrence id collection.</param>
            <param name="occurrencesManager">Occurrence manager.</param>
            <returns>Collection of occurrence id's that define the occurrences and variances.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.GetActualActivityQueryField(Infragistics.Controls.Schedules.ActivityProperty)">
            <summary>
            Returns the actualy field to be used when constructing queries for activities. This takes into account
            if 'End' mapping is not provided in which case it maps 'End', 'EndTimeZoneId' and 'OriginalOccurrenceEnd'
            properties to 'Start', 'StartTimeZoneId' and 'OriginalOccurrenceStart' respectively.
            </summary>
            <param name="propertyParam"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.HookIntoPropertyStores">
            <summary>
            Hooks into property stores for properties that require certain actions, like re-evaluating to see if they
            should be added to or removed from query results.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.InitHasRecurringAppointmentsFlag">
            <summary>
            If recurring appointment data source is specified then the appointment data source doesn't contain
            recurring appointments. If it's not specified then the appointment data source should be considered
            to contain the recurring appointments. Sets _hasRecurringActivities appropriately on both list managers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.GetDataItemPropertyType(Infragistics.Controls.Schedules.ActivityProperty)">
            <summary>
            Gets the type of the underlying property in the data source.
            </summary>
            <param name="property">Mapped property.</param>
            <returns>Type of the associated property in the data source. Null if the property is not mapped.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.GetReminderIntervalLinqComparisonValue(System.TimeSpan)">
            <summary>
            Gets the specified reminder interval value converted to long if the underlying data source object's
            reminder interval is of long type. Otherwise it returns the span value itself.
            </summary>
            <param name="span">Reminder interval value.</param>
            <returns>Value used for comparing in linq query conditions.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityListManager`2.OnActivity_RequeryPropChanged(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            This is called when a property on an activity changes that may require us to remove the activity
            from one or more query results and furthermore add it to one or more query results.
            </summary>
            <param name="activity">Activity whose property changed.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityListManager`2.IsEndTimeRequired">
            <summary>
            Gets a value indicating whether the end time is required for the activities that this activity list manager manages.
            Default implementation returns true.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.JournalListManager.IsEndTimeRequired">
            <summary>
            Overridden. Returns false since the journals do not require end time.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1">
            <summary>
            Used to manage one or more items which are processed asynchronously. When an item is added, an async
            operation can be started. Any further items added in the meantime are collected into a list. When the
            async handler is executed, all the items are processed via the the 'verifyCallback' delegate
            specified in the constructor.
            </summary>
            <typeparam name="T">Type of items that are to be processed asynchronously.</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.#ctor(System.Action{System.Collections.Generic.IEnumerable{`0}},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="verifyCallback">This will be called to process the items.</param>
            <param name="manageItemsAsWeakReferences">Whether to manage items as weak references.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.Enque(`0,System.Boolean)">
            <summary>
            Adds an item to be processed asynchronously.
            </summary>
            <param name="dataItem">Item object.</param>
            <param name="startAsyncOperation">Whether to start an async operation if it already hasn't been started previously.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.RemoveItem(`0)">
            <summary>
            Removes the specified item from the items queue.
            </summary>
            <param name="dataItem">Item to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.RemoveItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the specified items.
            </summary>
            <param name="dataItems">Items to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.RemoveAllItems">
            <summary>
            Removes all items and stops any pending async callback.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.StartAsyncVerification">
            <summary>
            Starts the async verification process.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.VerifyAsyncItemsQueue`1.DataItems">
            <summary>
            The set used to manage the items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DataListChangeInfo.FirstAndOnlyNewItem">
            <summary>
            If the NewItems has only single item, then returns it. If it has no items or has more
            than 1 items, it returns null.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DataListEventListener.#ctor(System.Object,System.Action{System.Object,Infragistics.Controls.Schedules.DataListEventListener,Infragistics.Controls.Schedules.DataListChangeInfo},System.Action{System.Object,System.Object,System.String},System.Nullable{System.Boolean})">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Owner object which is passed in as the first argument when the handler is invoked.
            The handler is typically a reference to a static method and therefore it needs to know which owner
            to delegate the processing to.</param>
            <param name="listChangedHandler">Called when list changes.</param>
            <param name="itemPropChangedHandler">Called when a list item changes.</param>
            <param name="hookIntoItemsNotifyPropChanged">Hook into prop changed.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DataListEventListener.SupportsItemPropChangeNotifications">
            <summary>
            Indicates if the data items' property change notifications are going to be raised.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._externalQueryInfo">
            <summary>
            This object contains information from which the query criteria of this result are
            derived. This is used when query conditions need to be re-derived, for example when 
            property mappings are changed. In the case of ActivityListManager, this is an instance
            of ActivityQueryComponent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._isResultFilteredDataItems">
            <summary>
            True if the result is simply a filtered list of data items. If it's something else,
            like summary of data or some other value derived from data then this will be false.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._shouldCreateViewList">
            <summary>
            If true then ViewList will be created by the list manager for this result. If false,
            only dataList will be assigned but the view list won't be created.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._reevaluateCallback">
            <summary>
            This callback is used to verify the result after it's marked dirty.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._isDirty_discardViewItems">
            <summary>
            If true then the items in the view list can be reused when the result is verified. If false
            the items in the view list will be discarded and new ones will be created. This is set to true
            when property mappings or the list itself etc... changes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ListQueryResult._processChangeEventAction">
            <summary>
            List manager calls ProcessChangeEvent method to give the result itself a chance to process
            the change notification from the underlying data source. ProcessChangeEvent delegates the call
            to this callback if it's provided in the constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ListQueryResult.#ctor(System.Object,System.Boolean,System.Boolean,System.Func{Infragistics.Controls.Schedules.ListQueryResult,Infragistics.Controls.Schedules.DataListChangeInfo,System.Boolean})">
            <summary>
            Constructor.
            </summary>
            <param name="externalQueryInfo">This object contains information from which the the list manager derives
            the query condition of this result. This is used when query conditions need to be re-derived, for example 
            when property mappings are changed. In the case of ActivityListManager, this is an instance of ActivityQuery.
            </param>
            <param name="isResultFilteredDataItems">True indicates that this query result contains a subset of the items
            from the data source. False indicates that the query result is not a simple filtered subset of items
            in the data source but rather other calculated information, like navigation related piece of data or a calculated
            summary of a field.</param>
            <param name="shouldCreateViewList">Specifies whether the list manager should create view list around the
            resultant data list. It's false for HasNext/PreviousActivity type queries where the resulting data is not
            a list of data items.</param>
            <param name="processChangeEventAction">
            Called to process list change event.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListQueryResult.DataList">
            <summary>
            The result list that contains the data source objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListQueryResult.Error">
            <summary>
            Error if any.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ListQueryResult.ExternalQueryInfo">
            <summary>
            This object contains information from which the query condition of this result are
            derived. This is used when query conditions need to be re-derived, for example when 
            property mappings are changed. In the case of ActivityListManager, this is an instance
            of ActivityQuery.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityQueryResult">
            <summary>
            Represents results of an activity query.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityQueryResult</b> is returned by the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/> method.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="T:Infragistics.OperationResult">
            <summary>
            Used as a return value by methods that perform operations asynchronously.
            </summary>
            <remarks>
            <para class="body">
            An operation that needs to be performed asynchronously may not have the results available until a later
            time. A method performing such an operation can return an instance of OperationResult or a derived class.
            When the operation is complete, the result instance can be initialized with the available result.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.OperationResult.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.OperationResult"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.OperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Initializes the <see cref="P:Infragistics.OperationResult.Error"/> and <see cref="P:Infragistics.OperationResult.IsComplete"/> properties based on the specified values.
            </summary>
            <param name="error"><see cref="T:Infragistics.DataErrorInfo"/> object if an error occurred, null otherwise.</param>
            <param name="isComplete">Indicates whether the results are complete. Specify false if further results are
            going to be available.</param>
            <remarks>
            <para class="body">
            An operation may be performed asynchronously. When a method that performs an operation is required 
            to return an instance of <i>OperationResult</i> derived class, you can return a new instance 
            and specify the result of the operation later via this method when it's available. While the asynchronous 
            operation is still pending, the <see cref="P:Infragistics.OperationResult.IsComplete"/> property will return <i>False</i>. When the 
            result is available, you can call this method and specify 'isComplete' parameter as true to indicate 
            that the operation is complete and that the <see cref="P:Infragistics.OperationResult.IsComplete"/> property should be set to true.
            </para>
            <para class="body">
            If an error occurs during the operation, you can call this method with the <see cref="T:Infragistics.DataErrorInfo"/> 
            object containing the error information. Also specifiy true for 'isComplete' since no further action
            will be taken and operation is considered to be complete with an error.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.OperationResult.IsComplete"/>
            <seealso cref="P:Infragistics.OperationResult.Error"/>
        </member>
        <member name="M:Infragistics.OperationResult.OnCanceled">
            <summary>
            Called when the operation is canceled.
            </summary>
        </member>
        <member name="P:Infragistics.OperationResult.Error">
            <summary>
            If an error occurred during the process of getting activity query results, this property returns the error information.
            </summary>
        </member>
        <member name="P:Infragistics.OperationResult.IsCanceled">
            <summary>
            Indicates if the operation was canceled.
            </summary>
        </member>
        <member name="P:Infragistics.OperationResult.IsComplete">
            <summary>
            Indicates if the query operation has been completed.
            </summary>
            <remarks>
            <para class="body">
            When a query is performed asynchronously <b>IsComplete</b> will return false until the operation 
            has been completed. Also <i>Activities</i> property will return an empty collection until the query
            is complete after which it will raise its <i>INotifyCollectionChanged.CollectionChanged</i> event
            in accordance with the query results.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQueryResult.#ctor(Infragistics.Controls.Schedules.ActivityQuery)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQueryResult.InitializeResult(Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags,System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Initializes the the <see cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.Activities"/> and sets <see cref="P:Infragistics.OperationResult.IsComplete"/> property based on the the 'markCompleted' parameter.
            </summary>
            <param name="informationBeingProvided">Which information is being provided with this call.</param>
            <param name="activities">The activities. Can be null if an error occurred in which case 'error' parameter must be specified.</param>
            <param name="hasPreviousActivity">Whether there's an activity prior to the earliest of the dates in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/>.</param>
            <param name="hasNextActivity">Whether there's an activity after to the latest of the dates in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/>.</param>
            <param name="previousActivity">The latest activity prior to the earliest of the dates in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/>.</param>
            <param name="nextActivity">The earliest activity after to the latest of the dates in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/>.</param>
            <param name="error"><see cref="T:Infragistics.DataErrorInfo"/> object if an error occurred, null otherwise.</param>
            <param name="isComplete">Indicates whether the results are complete. Specify fals if further results are
            going to be available.</param>
            <remarks>
            <para class="body">
            Activity queries can be executed asynchronously. When a query method is required to return an instance of 
            <i>ActivityQueryResult</i>, you can return a new instance and specify the results of the query later via
            this method. While the asynchronous query operation is still pending, the <see cref="P:Infragistics.OperationResult.IsComplete"/> property
            will return <i>False</i>. When the results are available, you can call this method with the results and 
            specify 'isComplete' parameter as true to indicate that the query operation is complete and that the
            <see cref="P:Infragistics.OperationResult.IsComplete"/> property should be set to true. If only a partial set of results are available and
            the query operation is still being executed, you can still call this method to provide with the partial
            results however with 'markCompleted' parameter as false to indicate that the results are partial. Once
            the results are fully available, you can call this method again (you can pass the same or a different activities 
            list instance that you passed in previously) and specify 'markCompleted' parameter accordingly.
            The UI objects utilizing the <i>ActivityQueryResult</i> may use IsComplete property to indicate to the end user
            that the results are being loaded.
            </para>
            <para class="body">
            If an error occurs during query operation, you can call this method with the <see cref="T:Infragistics.DataErrorInfo"/> 
            object containing the error information. You may specify 'null' for the activities parameter.
            Also specifiy true for 'isComplete' since no further action will be taken and operation is 
            considered to be complete with an error.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.Activities"/>
            <seealso cref="P:Infragistics.OperationResult.IsComplete"/>
            <seealso cref="P:Infragistics.OperationResult.Error"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.Activities">
            <summary>
            Returns the collection of activities.
            </summary>
            <remarks>
            <para class="body">
            Returns a read-only collection of activities that are the result of an activity query. 
            The returned collection will be kept upto-date with any changes that occur to the activities. For example,
            when an activity belonging to this collection is removed by the user via the UI or through the data 
            source, the returned collection will be updated and it will raise the necessary change notification.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasNextActivity">
            <summary>
            Indicates whether there's an activity after the latest date in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the query.
            Property's value is valid only if this information was requested by the associated activity query and the 
            information is available.
            </summary>
            <remarks>
            <para class="body">
            <b>HasNextActivity</b> property returns <i>true</i> to indicate that an activity exists after the latest date in 
            the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the associated <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/> object. Likewise
            it returns <i>false</i> to indicate that no such activity exists. It returns <i>null</i> if the information is
            not available, which could be because ActivityQuery's <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation"/> flags didn't
            contain the <see cref="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.HasNextActivity"/> flag, or the underlying data connector
            doesn't support being able to query for this information.
            </para>
            <para class="body">
            This information is used by schedule controls to provide navigation user interface for navigating to the next
            activity that occurs after the currently displayed activities.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.NextActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasPreviousActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasPreviousActivity">
            <summary>
            Indicates whether there's an activity before the earliest date in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the query.
            Property's value is valid only if this information was requested by the associated activity query and the 
            information is available.
            </summary>
            <remarks>
            <para class="body">
            <b>HasPreviousActivity</b> property returns <i>true</i> to indicate that an activity exists before the earliest date in 
            the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the associated <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/> object. Likewise
            it returns <i>false</i> to indicate that no such activity exists. It returns <i>null</i> if the information is
            not available, which could be because ActivityQuery's <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation"/> flags didn't
            contain the <see cref="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.HasPreviousActivity"/> flag, or the underlying data connector
            doesn't support being able to query for this information.
            </para>
            <para class="body">
            This information is used by schedule controls to provide navigation user interface for navigating to the previous
            activity that occurs before the currently displayed activities.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.NextActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasPreviousActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.NextActivity">
            <summary>
            Returns the activity that occurs after the latest date in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the query.
            Property's value is valid only if this information was requested by the associated activity query and the 
            information is available.
            </summary>
            <remarks>
            <para class="body">
            <b>NextActivity</b> property returns the next activity that exists after the latest date in 
            the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the associated <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/> object. 
            It returns <i>null</i> if no such activity exists or that the information is not available, 
            which could be because ActivityQuery's 
            <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation"/> flags didn't contain the 
            <see cref="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.NextActivity"/> flag, or the underlying data connector
            doesn't support being able to query for this information. You can check to see if the <see cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasNextActivity"/>
            property returns false to ascertain that such an activity doesn't exist.
            </para>
            <para class="body">
            This information is used by schedule controls to provide navigation user interface for navigating to the next
            activity that occurs after the currently displayed activities.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasNextActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.PreviousActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.PreviousActivity">
            <summary>
            Returns the activity that occurs before the earliest date in the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the query.
            Property's value is valid only if this information was requested by the associated activity query and the 
            information is available.
            </summary>
            <remarks>
            <para class="body">
            <b>PreviousActivity</b> property returns the previous activity that occurs before the earliest date in 
            the <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> of the associated <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/> object. 
            It returns <i>null</i> if no such activity exists or that the information is not available, 
            which could be because ActivityQuery's 
            <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation"/> flags didn't contain the 
            <see cref="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.PreviousActivity"/> flag, or the underlying data connector
            doesn't support being able to query for this information. You can check to see if the <see cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasPreviousActivity"/>
            property returns false to ascertain that such an activity doesn't exist.
            </para>
            <para class="body">
            This information is used by schedule controls to provide navigation user interface for navigating to the previous
            activity that occurs before the currently displayed activities.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.HasNextActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityQueryResult.PreviousActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQueryResult.Query">
            <summary>
            Gets the query that resulted in this ActivityQueryResult object.
            </summary>
            <remarks>
            <para class="body">
            <b>Query</b> property returns the instance of the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/> object
            that was used to obtain this <i>ActivityQueryResult</i> instance. <b>Note</b> however
            that modifying this query object will not change the <i>ActivityQueryResult</i> to
            reflect those modifications. It's only for information reference purposes.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceBase">
            <summary>
            Abstract base class for a class that specifies rules that define recurring date-time.
            </summary>
            <remarks>
            <para class="body">
            <see cref="T:Infragistics.Controls.Schedules.DateRecurrence"/> class derives from this class which is used to specify rules that define recurring date-time.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.RecurrenceBase.Clone">
            <summary>
            Clones the recurrence object.
            </summary>
            <returns>Cloned copy.</returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceInfo">
            <summary>
            Used to pass along recurrence information to the <see cref="M:Infragistics.Controls.Schedules.RecurrenceCalculatorFactoryBase.GetCalculator(Infragistics.Controls.Schedules.RecurrenceInfo)"/> method.
            </summary>
            <remarks>
            <para class="body">
            <b>RecurrenceInfo</b> class is used to pass information to the <see cref="M:Infragistics.Controls.Schedules.RecurrenceCalculatorFactoryBase.GetCalculator(Infragistics.Controls.Schedules.RecurrenceInfo)"/> method.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.RecurrenceInfo.#ctor(Infragistics.Controls.Schedules.RecurrenceBase,System.DateTime,System.TimeSpan,Infragistics.Controls.Schedules.TimeZoneToken,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="recurrence">Recurrence object.</param>
            <param name="startDateTime">Start of the recurrence. This date-time value is in local time relative to the specified time zone.</param>
            <param name="occurrenceDuration">Each occurrence duration.</param>
            <param name="timeZone">Identifies the time-zone. 'StartDateTime' parameter's value is relative to this time zone.</param>
            <param name="context">Optional context object.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.RecurrenceInfo.Context">
            <summary>
            Optional context object. Can be an <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instance for example.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.RecurrenceInfo.OccurrenceDuration">
            <summary>
            Duration of each occurrence.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.RecurrenceInfo.Recurrence">
            <summary>
            Gets the recurrence object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.RecurrenceInfo.StartDateTime">
            <summary>
            Gets the start date-time of the recurrence. All the recurrence instances must occur on
            or after this start date-time. The value is relative to the time zone specified by the
            <see cref="P:Infragistics.Controls.Schedules.RecurrenceInfo.TimeZone"/> property.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.RecurrenceInfo.TimeZone"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.RecurrenceInfo.TimeZone">
            <summary>
            Time zone associated with the <see cref="P:Infragistics.Controls.Schedules.RecurrenceInfo.StartDateTime"/> value.
            </summary>
            <remarks>
            <para class="body">
            Recurrences need to be generated using this time-zone.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DateRecurrence">
            <summary>
            Contains information that defines a recurring date-time.
            </summary>
            <remarks>
            <para class="body">
            <b>DateRecurrence</b> is used to specify rules that define a recurring date-time. It's used by the
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/> property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrence.Equals(System.Object)">
            <summary>
            Overridden. Returns true if the specified object equals this object.
            </summary>
            <param name="obj">Object to compare to.</param>
            <returns>True if the specified object equals this object. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrence.GetHashCode">
            <summary>
            Overridden. Returns the hash code of this object.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrence.ToString">
            <summary>
            Overridden. Returns string representation of the recurrence.
            </summary>
            <returns>Text that describes the recurrence.</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.Count">
            <summary>
            Specifies the number of times the recurrence will re-occur. If 0 then there's no limit.
            </summary>
            <remarks>
            You can limit the number of times a recurrence re-occurs by either specifying the <b>Count</b> 
            property or the <see cref="P:Infragistics.Controls.Schedules.DateRecurrence.Until"/> property.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.DateRecurrence.Until"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.Frequency">
            <summary>
            Specifies the frequency of the recurrence.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrenceFrequency"/>
            <seealso cref="P:Infragistics.Controls.Schedules.DateRecurrence.Interval"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.Interval">
            <summary>
            Specifies how often to recur.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.Rules">
            <summary>
            Specifies recurrence rules.
            </summary>
            <remarks>
            <para class="body">
            Recurrence rules can be used to specify further criteria regarding when the recurrences recur. For example, 
            you can specify one or more rules to indicate that the recurrence should recur in a specific month, in a 
            specific week of the year, on a specific week day etc... Rules can limit or in some cases expand the number 
            of recurrences that would have occurred based on the Frequency and Interval settings alone.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrenceRuleBase"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.Until">
            <summary>
            Specifies when to stop to recur.
            </summary>
            <remarks>
            <para class="body">
            You can limit the recurrence to a date-time. Recurrence will stop recurring after that date-time.
            However note that the last recurrence can start on this date-time.
            </para>
            </remarks>
            <see cref="P:Infragistics.Controls.Schedules.DateRecurrence.Count"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrence.WeekStart">
            <summary>
            Specifies the start of the week. Default value is <b>Monday</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>WeekStart</b> has implications when applying certain rules, like <see cref="T:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule"/>, 
            regarding when the first week of the year starts. First week of the year is considered to be the first
            week that has at least 4 days in the year.
            </para>
            <para class="body">
            <b>Note</b> that the default value of this property is <i>Monday</i>.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DateRecurrenceFrequency">
            <summary>
            Enum used to specifiy <see cref="P:Infragistics.Controls.Schedules.DateRecurrence.Frequency"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Yearly">
            <summary>
            Occurs every year.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Monthly">
            <summary>
            Occurs every month.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Weekly">
            <summary>
            Occurs every week.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Daily">
            <summary>
            Occurs every day.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Hourly">
            <summary>
            Occurs every hour.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Minutely">
            <summary>
            Occurs every minute.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceFrequency.Secondly">
            <summary>
            Occurs every second.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceCache._maxMatchCount">
            <summary>
            If 0 then no count limit.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DateRecurrenceCache._fixedMatchCountPerInterval">
            <summary>
            If rules are as such that there's same fixed number of matches per interval period then
            this will be set to that number. Otherwise it will be 0 to indicate that there's no
            fixed match per interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCache.#ctor(Infragistics.Controls.Schedules.RecurrenceInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Contains information for recurrence generation.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCache.Enumerable.#ctor(Infragistics.Controls.Schedules.DateRecurrenceCache,Infragistics.DateRange,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="cache">Cache.</param>
            <param name="dateRange">Occurrences within this date range will be enumerated.</param>
            <param name="maxOccurrencesToGenerate">Maximum number of occurrences to enumerate. 0 specifies no limit.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCache.State.ReachFrequencyDate(System.DateTime,System.DateTime)">
            <summary>
            Increments the specified frequency date to reach a frequency interval that contains
            the target date. The returned date will be smaller than the target date.
            </summary>
            <param name="date"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DateRecurrenceParser">
            <summary>
            A class used for serializing and deserializing date recurrence into a string that's conformant to iCalendar RRULE format.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceParser.#ctor(Infragistics.Controls.Schedules.DateRecurrence)">
            <summary>
            Constructor.
            </summary>
            <param name="recurrence"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceParser.SpaceHelper(System.Text.StringBuilder)">
            <summary>
            Appends space if the sb doesn't already end with a space.
            </summary>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceCalculatorFactoryBase">
            <summary>
            Provides logic for generating recurrences.
            </summary>
            <remarks>
            <para class="body">
            You can set the <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/> property to
            provide custom recurrence generation logic.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.RecurrenceCalculatorFactoryBase.GetCalculator(Infragistics.Controls.Schedules.RecurrenceInfo)">
            <summary>
            Gets the recurrence calculator for calculating recurring date-time values based on the specified
            recurrence information.
            </summary>
            <param name="info">Contains recurrence information.</param>
            <returns>Calculator that will be used to calculate recurring date-time values.</returns>
            <remarks>
            <para class="body">
            <b>Note</b> that when the recurrence associated with the specified 'info' changes, this method
            will be called again to re-get the calculator.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase">
            <summary>
            Evaluates date recurrence rules contained in <see cref="T:Infragistics.Controls.Schedules.DateRecurrence"/> object and
            generates recurrences.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.GetOccurrences(Infragistics.DateRange)">
            <summary>
            Gets the occurrences within the specified date range. The date-time values of the range are in UTC.
            </summary>
            <param name="dateRange">Date range with date-time values in UTC.</param>
            <returns>Date-time values of occurrences that occur in the specified date range.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.GetOccurrences(System.Collections.Generic.IEnumerable{Infragistics.DateRange})">
            <summary>
            Gets the occurrences in the specified date ranges. The date-time values of the ranges are in UTC.
            </summary>
            <param name="dateRanges">Collection of date ranges with date-time values are in UTC.</param>
            <returns>Returns the times of occurrences that occurr in the specified date ranges.
            Each DateRange instance specifies the start and the end time of an occurrence.
            Note that the date-time values are in UTC.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.DoesRecurOnDate(System.DateTime)">
            <summary>
            Specifies whether an occurrence occurs on the same day as the specified date.
            </summary>
            <param name="date">Date value in UTC.</param>
            <returns>True if an occurrence occurs on the specified date. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.DoesRecurOnDateAndTime(System.DateTime)">
            <summary>
            Specifies whether an occurrence occurs on the specified date-time value, within second.
            </summary>
            <param name="dateTime">Date-time value in UTC.</param>
            <returns>True if an occurrence occurs on the specified date-time. False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.FirstOccurrenceDate">
            <summary>
            Gets the date-time in UTC of the first occurrence.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase.LastOccurrenceDate">
            <summary>
            Gets the date-time in UTC of the last occurrence.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DefaultDateRecurrenceCalculator.#ctor(Infragistics.Controls.Schedules.RecurrenceInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DateRecurrenceRuleBase">
            <summary>
            Base class for date recurrence rule.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceRuleBase.Equals(System.Object)">
            <summary>
            Overridden. Returns true if the specified object equals this object.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>True if the object equals this object. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DateRecurrenceRuleBase.GetHashCode">
            <summary>
            Overridden. Returns the hash code of this object.
            </summary>
            <returns>Integer hash code value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule">
            <summary>
            Rule that matches a month.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule"/> object.
            </summary>
            <param name="month">Identifies the month. Valid values are 1 to 12.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule.Month">
            <summary>
            Gets/sets the month number.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule">
            <summary>
            Rule that matches week number of a year.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule"/> object.
            </summary>
            <param name="weekNumber">Identifies the week in the year. Valid values are 1 to 53 and -53 to -1.
            <see cref="P:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule.WeekNumber"/> for more information.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WeekOfYearRecurrenceRule.WeekNumber">
            <summary>
            Gets/sets the number that identifies the week of the year. Valid range of values is 1 to 53 and -53 to -1.
            </summary>
            <remarks>
            <para class="body">
            <b>WeekNumber</b> identifies the week in the year. Valid values are 1 to 53 and -53 to -1. A negative value
            indicates the n'th week to the end of the year where 'n' is the absolute value of the negative value. For example,
            -1 specifies the last week of the year. Likewise -10 specifies the 10th to the last week of the year.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule">
            <summary>
            Rule that matches day of year.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule"/> object.
            </summary>
            <param name="dayOfYear">Identifies the day of the year. Valid values are from 1 to 366 and -366 to -1.
            <see cref="P:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule.DayOfYear"/> for more information.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DayOfYearRecurrenceRule.DayOfYear">
            <summary>
            Gets/sets the day of the year. Valid range of values are 1 to 366 and -366 to -1.
            </summary>
            <remarks>
            <para class="body">
            <b>DayOfYear</b> identifies the day of the year. Valid values are 1 to 366 and -366 to -1. A negative value
            indicates the n'th day to the end of the year where 'n' is the absolute value of the negative value. For example,
            -1 specifies the last day of the year. Likewise -10 specifies the 10th day to the last day the year.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule">
            <summary>
            Rule that matches day of month.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule"/> object.
            </summary>
            <param name="dayOfMonth">
            Identifies the day of the year. Valid values are from 1 to 31 and -31 to -1.
            <see cref="P:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule.DayOfMonth"/> for more information.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DayOfMonthRecurrenceRule.DayOfMonth">
            <summary>
            Gets/sets the day of the month. Valid range of values are 1 to 31 and -31 to -1.
            </summary>
            <remarks>
            <para class="body">
            <b>DayOfMonth</b> identifies the day of the month. Valid values are 1 to 31 and -31 to -1. A negative value
            indicates the n'th day to the end of the month where 'n' is the absolute value of the negative value. For example,
            -1 specifies the last day of the month. Likewise -10 specifies the 10th day to the last day the month.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule">
            <summary>
            Rule that matches day of week or a relative day of week within month or year.
            </summary>
            <remarks>
            <para class="body">
            <b>DayOfWeekRecurrenceRule</b> can be used to specify a day of week or a relative
            day of week within month or year. If the frequency is monthly or if a 
            <see cref="T:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule"/> is present then the 
            <see cref="P:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.RelativePosition"/> 
            indentifies the relative position within a month. Otherwise if the 
            frequency of the recurrence is yearly
            then it identifies the relative position within the year. In case of
            monthly, valid values are -5 to -1 and 1 to 5. In case of yearly,
            valid values are -53 to -1 and 1 to 53.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.#ctor(System.DayOfWeek,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule"/> object.
            </summary>
            <param name="day">Identifies the week day.</param>
            <param name="relativePosition">Optional value that specifies the relative
            position of the day within month or year. If the frequency is monthly or if a 
            <see cref="T:Infragistics.Controls.Schedules.MonthOfYearRecurrenceRule"/> is present then the relative position 
            indentifies the relative position within a month. If frequency is yearly
            then it identifies the relative position within the year. In case of
            monthly, valid values are -5 to -1 and 1 to 5. In case of yearly,
            valid values are -53 to -1 and 1 to 53.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.Day">
            <summary>
            Gets/sets the week day.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.RelativePosition">
            <summary>
            Relative position of the occurrence of the week-day within a month or a year. 
            Valid values are 1 to 5 and -5 to -1 for monthly frequency and 1 to 53 and -53 to -1 
            for yearly frequency.
            </summary>
            <remarks>
            <para class="body">
            <b>RelativePosition</b> specifies the relative position of the occurrence of the week-day within a 
            month or a year. Valid values are 1 to 5 and -5 to -1 for monthly rule and 1 to 53 and -53 to -1 for yearly rule. 
            For example, if <see cref="P:Infragistics.Controls.Schedules.DayOfWeekRecurrenceRule.Day"/> is Monday and the <i>RelativePosition</i> is -1, 
            then it specifies the last Monday in the month.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.HourRecurrenceRule">
            <summary>
            Rule that matches hour of day.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.HourRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.HourRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.HourRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.HourRecurrenceRule"/> object.
            </summary>
            <param name="hour">Specifes the hour. Valid values are 0 to 23.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.HourRecurrenceRule.Hour">
            <summary>
            Gets/sets the hour value. Valid values are 0 to 23.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.MinuteRecurrenceRule">
            <summary>
            Rule that matches minute of hour.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MinuteRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.MinuteRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MinuteRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.MinuteRecurrenceRule"/> object.
            </summary>
            <param name="minute">Specifes the minute value. Valid values are 0 to 59.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.MinuteRecurrenceRule.Minute">
            <summary>
            Gets/sets the minute value. Valid values are 0 to 59.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SecondRecurrenceRule">
            <summary>
            Rule that matches second of a minute.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SecondRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.SecondRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SecondRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.SecondRecurrenceRule"/> object.
            </summary>
            <param name="second">Specifes the second value. Valid values are 0 to 59.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.SecondRecurrenceRule.Second">
            <summary>
            Gets/sets the second value. Valid values are 0 to 59.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SubsetRecurrenceRule">
            <summary>
            Rule that matches a subset of matches within an interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SubsetRecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.SubsetRecurrenceRule"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SubsetRecurrenceRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.SubsetRecurrenceRule"/> object.
            </summary>
            <param name="occurrenceInstance">
            Specifies the instance of the occurrence within the set of occurrences.
            <see cref="P:Infragistics.Controls.Schedules.SubsetRecurrenceRule.OccurrenceInstance"/> for more information. Valid values are 1 to 366 
            and -366 to -1 where negative values indicate nth to the last.
            </param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.SubsetRecurrenceRule.OccurrenceInstance">
            <summary>
            Identifies the instance of the occurrence within the set of occurrences within the period specified by the 
            <see cref="P:Infragistics.Controls.Schedules.DateRecurrence.Frequency"/> and and <see cref="P:Infragistics.Controls.Schedules.DateRecurrence.Interval"/> 
            properties that are generated by all the recurrence rules of the <see cref="T:Infragistics.Controls.Schedules.DateRecurrence"/> that are 
            not SubsetRecurrenceRule's. Valid values are 1 to 366 and -366 to -1 where negative values 
            indicate nth to the last.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AppointmentSettings">
            <summary>
            Contains settings information regarding the operations that the user can perform on appointment.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettings"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivitySettings"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivitySettings">
            <summary>
            Contains settings information regarding the operations that the user can perform on activities.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowAddProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowAdd"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowEditProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowEdit"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowDraggingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowDragging"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowRecurringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowRecurring"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowRemoveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowRemove"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowResizingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowResizing"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivitySettings.AllowTimeZoneNeutralProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowTimeZoneNeutral"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivitySettings.OnPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for settings properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowAdd">
            <summary>
            Specifies whether the user is allowed to add new activities.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowAddProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowEdit">
            <summary>
            Specifies whether the user is allowed to modify existing activities.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowEditProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowDragging">
            <summary>
            Specifies whether the user is allowed to drag activities.
            </summary>
            <remarks>
            <para class="body">
            The user can drag and drop an activity to change its time or make a copy of the activity, depending
            upon whether the Ctrl key is held down when the activity is dropped. Holding the Ctrl key down makes
            the copy of the activity being dragged. Otherwise the activity's time is changed to occupy the target
            time slot.
            </para>
            <para class="body">
            Activity can also be dragged to a different calendar of the same resource or a calendar of a 
            different resource. Doing so not only changes time, but also changes the OwningCalendarId and/or
            OwningResourceId of the activity. Whether the user is allowed to drag accross calendars or resources
            is controlled by the <see cref="T:Infragistics.Controls.Schedules.AllowActivityDragging"/> 
            enum value that's set on the property. However <b>note</b> that the underlying schedule data connector
            may impose limitations on whether an activity's resource calendar or resource can be changed or not, in
            which case regardless of what this property is set to, the underlying schedule data connector restriction 
            will be effective.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.AllowActivityDragging"/>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowDraggingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowRecurring">
            <summary>
            Specifies whether the user is allowed to add recurring activities.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this property doesn't prevent existing recurring activities from being displayed. 
            It simply disallows the user from creating recurring activities through the UI.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowRecurringProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowRemove">
            <summary>
            Specifies whether the user is allowed to remove activities.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowRemoveProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowResizing">
            <summary>
            Specifies whether the user is allowed to resize activities.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ActivitySettings.AllowResizingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitySettings.AllowTimeZoneNeutral">
            <summary>
            Specifies whether the user is allowed to create time-zone neutral activities.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this property doesn't prevent display of time-zone neutral activities. It simply disallows the
            user from creating time-zone neutral activities (appointments, tasks etc...) through the UI.
            </para>
            <para class="body">
            A time-zone neutral activity is an activity that occurs at the same numerical time value across all time zones.
            That is, let's say a time-zone neutral activity starts at 9:00 AM. It starts at 9:00 AM local time in every time-zone.
            Holidays are a good example of time-zone neutral activities where they start at, let's say 12:00 AM, regardless of 
            the time-zone.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.JournalSettings">
            <summary>
            Contains settings information regarding the operations that the user can perform on journals.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.JournalSettings"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivitySettings"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TaskSettings">
            <summary>
            Contains settings information regarding the operations that the user can perform on tasks.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivitySettings"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityBase">
            <summary>
            Base class for activity classes, like <see cref="T:Infragistics.Controls.Schedules.Appointment"/>, <see cref="T:Infragistics.Controls.Schedules.Journal"/> or <see cref="T:Infragistics.Controls.Schedules.Task"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.GetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> relative to the specified <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/>
            </summary>
            <param name="token">The timezone token that identifies the timezone for which the relative date is being requested.</param>
            <returns>Returns the local time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> relative to the timezone specified by the <paramref name="token"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.GetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> relative to the specified <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/>
            </summary>
            <param name="token">The timezone token that identifies the timezone for which the relative date is being requested.</param>
            <returns>Returns the local time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> relative to the timezone specified by the <paramref name="token"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.SetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> relative to the specified <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/>
            </summary>
            <param name="token">The timezone token that identifies the timezone for which the relative date is being requested.</param>
            <param name="dateTime">The time relative to the timezone specified by the <paramref name="token"/> that will be used to calculate the UTC value for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/></param>
            <returns>Returns the local time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> relative to the timezone specified by the <paramref name="token"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.SetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> relative to the specified <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/>
            </summary>
            <param name="token">The timezone token that identifies the timezone for which the relative date is being requested.</param>
            <param name="dateTime">The time relative to the timezone specified by the <paramref name="token"/> that will be used to calculate the UTC value for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/></param>
            <returns>Returns the local time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> relative to the timezone specified by the <paramref name="token"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.GetEditCopy(System.Boolean,System.Boolean)">
            <summary>
            Gets the clone of this activity for an editing purposes.
            </summary>
            <param name="allocateIfNecessary"></param>
            <param name="synchronizeChangesFromOriginalActivity"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.GetEndUtc(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> in UTC.
            </summary>
            <param name="token">Identifies the local time zone.</param>
            <returns>Returns the UTC time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.GetStartUtc(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> in UTC.
            </summary>
            <param name="token">Identifies the local time zone.</param>
            <returns>Returns the UTC time for the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/>.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.HasVariantDataFromBeginEditData">
            <summary>
            Returns true if the the data of this activity is different from begin edit data for properties that are
            subject to making an occurrence a variance.
            </summary>
            <returns>True if any property's value is different from the original value when BeginEdit was called, for
            all properties that are taken into account when determining whether an activity should be made a variance
            of an occurrence.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.IsDataDifferentFromBeginEditData(System.Boolean)">
            <summary>
            Returns true if the the data of this activity is different from begin edit data.
            </summary>
            <param name="skipStateProps">If true skip state related properties like Error, PendingOperation etc... and only compare actual data properties.</param>
            <returns>True if data is different. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.InitializeRootActivity(Infragistics.Controls.Schedules.ActivityBase,System.DateTime)">
            <summary>
            Initializes the root activity of an occurrence instance.
            </summary>
            <param name="rootActivity">Root recurring activity.</param>
            <param name="occurrenceStart">Original date-time of the occurrence.</param>
            <remarks>
            <para class="body">
            <b>InitializeRootActivity</b> method is called by the data connector to initialize
            the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/> reference on an occurrence of a recurring activity.
            This method also sets the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivityId"/> to the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Id"/>
            of the specified root activity. It also sets the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceStart"/>
            property to the specified 'occurrenceStart' value. <b>Note</b> that 
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.UpdateLastModifiedTime">
            <summary>
            Sets the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.LastModifiedTime"/> to current time in UTC.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityBase.CopyToHelper(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copies activity data from this activity to the specified 'dest' activity.
            </summary>
            <param name="dest">Destination activity to which to copy data.</param>
            <param name="copyId">Specifies whether to copy the id.</param>
            <param name="retainNonEmptyValuesInDest">True to keep non-empty values in the 'dest'. False to
            overwrite them with the values from the source.</param>
            <param name="makingCopyThroughUI">Specifiy true to indicate that the activity's data is being copied to a new activity
            that will be committed to the backend. For example, when the user copys an existing activity to make a new activity.
            This will except certain properties from being copied, like Id, RootActivityId among others.
            Specifiy false to indicate that the copying is being done for the purposes of storing activity data for
            later reference.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.ActivityType">
            <summary>
            Gets the ActivityType of this activity.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.DataItem">
            <summary>
            Gets the underlying data item if any.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Description">
            <summary>
            Gets or sets the text associated with this activity.
            </summary>
            <remarks>
            <para class="body">
            While the <b>Subject</b> property is a short summary or title of the activity, the <b>Description</b> property 
            is the full text of the activity.
            </para>
            </remarks>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Duration">
            <summary>
            Gets the duration of the activity.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.End">
            <summary>
            Specifies the time in <b>UTC</b> when the activity ends.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> and <b>End</b> properties specify the time of the activity in <b>UTC</b>.
            You can use the <see cref="M:Infragistics.Controls.Schedules.ActivityBase.GetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/> and <see cref="M:Infragistics.Controls.Schedules.ActivityBase.GetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/> methods to get
            the time relative to a specific time-zone. Also there are <see cref="M:Infragistics.Controls.Schedules.ActivityBase.SetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/> and
            <see cref="M:Infragistics.Controls.Schedules.ActivityBase.SetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/> methods that can be used to specify activity times that are relative
            to a specific time-zone.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.GetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.GetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.SetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.SetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.EndTimeZoneId">
            <summary>
            The time-zone id associated with the activity. The <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> times are always in UTC.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Error">
            <summary>
            Gets or sets the error if any associated with the activity.
            </summary>
            <remarks>
            <para class="body">
            When there's an activity specific error, for example an attempt to update an activity
            with invalid data results in an error, <b>Error</b> property will be set to a 
            <see cref="T:Infragistics.DataErrorInfo"/> object containing the error information.
            </para>
            <para class="body">
            You can set the <i>Error</i> to a new <i>DataErrorInfo</i> object or set it to 
            <i>null</i> to clear an existing error. The <i>Error</i> is cleared automatically by
            when the user performs another operation on the activity that succeeds.
            </para>
            <para class="body">
            <b>Note</b> that the <i>XamScheduleDataManager</i>'s <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/>
            event is raised whenever there's an error, including activity errors. You can hook into
            that event if you want to get notified of when an error occurs.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.DataErrorInfo"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Id">
            <summary>
            Gets or sets the appointment Id.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsLocked">
            <summary>
            Specifies whether the activity can be modified in the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrence">
            <summary>
            Returns true if the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> is an occurrence of a recurring <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> (read only).
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsRecurrenceRoot"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVariance"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrenceDeleted">
            <summary>
            Gets or sets a value indicating whether the occurrence has been deleted.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that simply setting this property to true will not delete the occurrence.
            Use the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.Remove(Infragistics.Controls.Schedules.ActivityBase)"/> method to remove an occurrence.
            Also note that the underlying occurrence will be made into a variance which will
            be stored in the data source. This is so the the recurring activity knows not to
            generate the occurrence the next time the application is run.
            </para>
            <para class="body">
            <b>IsOccurrenceDeleted</b> property's setter is meant to be called by a schedule data
            connector implementation to specifiy that this occurrence has been deleted when the 
            activity is retrieved from the data source.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsRecurrenceRoot">
            <summary>
            Returns true if the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> is a recurring <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> with a define set of <see cref="T:Infragistics.Controls.Schedules.RecurrenceBase"/> rules (read only).
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral">
            <summary>
            Specifies whether the activitiy's times are time-zone neutral or "floating".
            </summary>
            <remarks>
            <para class="body">
            Certain activities have start and end times that are time-zone neutral. Holidays are an example of that
            where a holiday starts at a certain time, let's say 12:00 AM, in every time-zone. Likewise you can have 
            activities that are time-zone neutral as well. Such activities start at the same numerical time value
            in any time-zone, and thus the actual UTC times when the activity starts will vary across time-zones.
            </para>
            <para class="body">
            When an activity is time-zone neutral, the values of <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> properties
            are time-zone neutral times that are interpreted as local times.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowTimeZoneNeutral"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsVariance">
            <summary>
            Gets or sets a value indicating if the activity is a variance of an occurrence.
            </summary>
            <remarks>
            <para class="body">
            When an occurrence of a recurring activity is modified, it becomes a 'variance'. Essentially it's
            a modified occurrence. Any modifications, including modifications to Start, End, Subject etc...
            cause the occurrence to be a variance.
            </para>
            <para class="body">
            <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/> stores variances in the underlying data source list where
            recurring activities are stored. Note that to programatically modify an occurrence and make it into
            a variance and store it into the data source, you must call <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> 
            and <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> methods.
            </para>
            <para class="body">
            <b>Note</b> that <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrence"/> property will return true for variances as well.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible">
            <summary>
            Gets or sets whether the activity is visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsVisibleResolved">
            <summary>
            Gets the resolved value indicating whether the activity is visible.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this property doesn't indicate whether the activity is presently visible in the UI.
            It indicates whether the activity will be displayed in the UI when the containing date range is displayed
            in a schedule control.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.LastModifiedTime">
            <summary>
            Gets or sets the time in UTC when the activity was last modified.
            </summary>
            <remarks>
            <para class="body">
            <b>LastModifiedTime</b> property indicates the last time the activity was modified.
            This property is updated when the activity changes are committed via 
            <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method. The property's value is not 
            updated as you set other properties on the activity.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.MaxOccurrenceDateTime">
            <summary>
            A date-time value that's equal or greater than the date-time of the last occurrence of 
            the recurring activity.
            </summary>
            <remarks>
            <para class="body">
            <b>MaxOccurrenceDateTime</b> field is used to optimize retrieval of recurring activities by
            excluding recurring activities whose date ranges as defined by the <i>Start</i> and 
            <i>MaxOccurrenceDateTime</i> field values do not intersect with the date range for which 
            activities are being retrieved.
            </para>
            <para class="body">
            In the absense of <b>MaxOccurrenceDateTime</b> value, recurring activities are assumed to
            potentially recur forever and thus subject to evaluation when retrieving activities for
            a date range.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Metadata">
            <summary>
            Returns a MetadataPropertyValueStore object that's used for storing and retrieving metadata information.
            </summary>
            <remarks>
            <para class="body">
            You can use the <b>Metadata</b> to store and later retrieve information. The information is stored in
            properties of your data items as specified in the <see cref="T:Infragistics.MetadataPropertyMappingCollection"/>.
            For example, the metadata property mappings is specified using the <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>'s
            <see cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            property. Each property defined in the mapping collection has a corresponding entry in the returned MetadataPropertyValueStore.
            It's indexer is used to retrieve or set the the property's value. Furthermore, you can use bindings to
            bind to a specific value in the returned object.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.MetadataPropertyMappingCollection"/>
            <seealso cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceEnd">
            <summary>
            Only applies to occurrences of a recurring activity. Specifies the original date-time as it was generated
            by the recurrence.
            </summary>
            <remarks>
            <para class="body">
            On a non-variance occurrence, this property returns the same value as <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> 
            property. On a variance of an occurrence, this property returns the original date-time as it was generated
            by the recurrence and the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property returns the actual date-time of the activity.
            <b>Note:</b> On an activity that's not an occurrence of a recurring activity, this property returns null.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceStart">
            <summary>
            Only applies to occurrences of a recurring activity. Specifies the original date-time as it was generated
            by the recurrence.
            </summary>
            <remarks>
            <para class="body">
            On a non-variance occurrence, this property returns the same value as <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> 
            property. On a variance of an occurrence, this property returns the original date-time as it was generated
            by the recurrence and the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property returns the actual date-time of the activity.
            <b>Note:</b> On an activity that's not an occurrence of a recurring activity, this property returns null.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendar">
            <summary>
            Gets or sets the calendar to which this activity belongs.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendarId">
            <summary>
            Gets or sets the id of the calendar to which this activity belongs.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OwningResource">
            <summary>
            Gets or sets the owning resource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.OwningResourceId">
            <summary>
            Gets or sets the owning resource id.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence">
            <summary>
            Specifies recurrence rules.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.RecurrenceVersion">
            <summary>
            Specifies the recurrence version.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled">
            <summary>
            Specifies whether the activitiy's reminder is enabled. Default value is <b>false</b>.
            </summary>
            <remarks>
            <para class="body">
            If the reminder is enabled, and when it's displayed, if the user acknowledges the 
            reminder, this property is set to <b>false</b>. This effectively prevents the reminder 
            from being displayed again.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval">
            <summary>
            Specifies the reminder interval.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that you need to set the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/> to <b>true</b> to enable the reminder.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Reminder"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Reminder">
            <summary>
            Specifies the reminder information. Default value is null.
            </summary>
            <remarks>
            <b>Reminder</b> property is used to specifiy reminder information. If it's not specified
            then the property returns null, in which case default reminder text will be used in the
            reminder dialog.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity">
            <summary>
            Gets the root activity. Only valid if this activity is an occurrence or a variance of a recurring activity.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.RootActivityId">
            <summary>
            If this activity is an occurrence or a variance of a recurring activity, gets the id of the recurring activity.
            </summary>
            <remarks>
            <para class="body">
            <b>RootActivityId</b> property returns the id of the root recurring activity. This property is only applicable
            to occurrence or a variance of a recurring activity. It returns null for other activities.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Start">
            <summary>
            Specifies the time in <b>UTC</b> when the activity starts.
            </summary>
            <remarks>
            <para class="body">
            <b>Start</b> and <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> properties specify the time of the activity in <b>UTC</b>.
            You can use the <see cref="M:Infragistics.Controls.Schedules.ActivityBase.GetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/> and <see cref="M:Infragistics.Controls.Schedules.ActivityBase.GetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/> methods to get
            the time relative to a specific time-zone. Also there are <see cref="M:Infragistics.Controls.Schedules.ActivityBase.SetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/> and
            <see cref="M:Infragistics.Controls.Schedules.ActivityBase.SetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/> methods that can be used to specify activity times that are relative
            to a specific time-zone.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.GetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.GetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.SetStartLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ActivityBase.SetEndLocal(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.StartTimeZoneId">
            <summary>
            The time-zone id associated with the activity. The <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> field values are 
            always in UTC.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> field values are always in UTC. <i>StartTimeZoneId</i>
            and <i>EndTimeZoneId</i> values simply give the activity the context of the time-zone to the activity.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.Subject">
            <summary>
            Gets or sets the subject associated with this activity.
            </summary>
            <remarks>
            <para class="body">
            The <b>Subject</b> property specifies a short summary or title of the activity. The <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/> 
            property specifies the full text of the activity.
            </para>
            </remarks>
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.VariantProperties">
            <summary>
            Properties of a variance that have been modified and thus will not be synchronized with the root activity.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.BeginEditData">
            <summary>
            Returns the data that was stored when BeginEdit was called.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsEditCopy">
            <summary>
            Returns true if this is a clone of an activity for edit purposes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.IsInitializing">
            <summary>
            Returns true if this is activity is being initialized via <see cref="M:Infragistics.Controls.Schedules.ActivityBase.Initialize(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.IPropertyStorage{Infragistics.Controls.Schedules.ActivityBase,System.Int32})"/> call.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityBase.PendingOperation">
            <summary>
            Returns any pending operation on the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Recurrence">
            <summary>
            Applies to recurring activities, but not occurrences and variances of a 
            recurring activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.RootActivityId">
            <summary>
            Applies to occurrences and variances - indicates the root template id.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.OriginalOccurrenceStart">
            <summary>
            Applies to occurrences and variances - indicates the date-time value 
            as generated by the recurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.StoragePropsInfo._props">
            <summary>
            Listing of all the properties.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.StoragePropsInfo._unmappedPropertiesStoreCandidates">
            <summary>
            These properties are candidates for serializing out in unmapped properties field if explicit mappings
            are not provided. Certain properties such as Id, Start, End etc... are not suitable for serializing
            in unmapped properties field since we perform LINQ queries on them. Further more, certain properties
            that are states, like Error, also should not be saved in unmapped properties field.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.GetDefaultValueFactories">
            <summary>
            Gets default value factories for properties that have them.
            </summary>
            <returns>Map where the key is the property and value is the default value factory.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.PropInfo.#ctor(System.Int32,System.String,System.Type,System.Object,System.Boolean,System.Windows.Data.IValueConverter,Infragistics.Controls.Schedules.StoragePropsInfo.CopyMethod,Infragistics.Controls.Schedules.IDefaultValueFactory,System.Collections.IEqualityComparer)">
            <summary>
            Constructor.
            </summary>
            <param name="key">Property key.</param>
            <param name="name">Property name.</param>
            <param name="type">Property type.</param>
            <param name="mappedFields">Either a single field or IEnumerable of fields to which this property is mapped.
            For example, it can be a AppointmentProperty instance or IEnumerable&lt;AppointmentProperty&gt;.</param>
            <param name="isReadOnly">Whether the property is read-only.</param>
            <param name="converter">Converter that should be used to convert data source value to the value of the property
            and other way around as well.</param>
            <param name="copyMethod">Specifies if and how the value of the property will be copied when item is cloned.</param>
            <param name="defaultValueFactory">If specified, it's used to initialize the default value of the property.</param>
            <param name="equalityComparer">Used for comparing values.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.PropInfo.AreValuesEqual``1(``0,Infragistics.IPropertyStorage{``0,System.Int32},``0,Infragistics.IPropertyStorage{``0,System.Int32})">
            <summary>
            Checks to see if the values in the property stores are different for this property.
            </summary>
            <typeparam name="T">Item type.</typeparam>
            <param name="x">This object's value for the property will be compared against the 'y' object's value for the property.</param>
            <param name="xStorage">Property storage for 'x' item.</param>
            <param name="y">This object's value for the property will be compared against the 'X' object's value for the property.</param>
            <param name="yStorage">Property storage for 'y' item.</param>
            <returns>True if the property values are equal, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.PropInfo.GetMappedField``1(``0@)">
            <summary>
            Gets the field to which this property is mapped to. The &lt;T&gt; template parameter specifies
            the type of the mapped field value (like AppointmentProperty enum, or TaskProperty enum).
            </summary>
            <typeparam name="T">The type of the mapped field value, like AppointmentProperty enum or TaskProperty enum.</typeparam>
            <param name="mappedField">This will be set to the any matching mapped field.</param>
            <returns>True if a match is found, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.PropInfo.GetValue``1(``0,Infragistics.IPropertyStorage{``0,System.Int32})">
            <summary>
            Gets the value of the property for the specified 'x' object.
            </summary>
            <typeparam name="T">Item type.</typeparam>
            <param name="x">The item whose property value to get.</param>
            <param name="xStorage">Property storage.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.TypedPropInfo`2.#ctor(System.Int32,System.String,System.Func{`0,Infragistics.IPropertyStorage{`0,System.Int32}},System.Object,System.Boolean,System.Windows.Data.IValueConverter,Infragistics.Controls.Schedules.StoragePropsInfo.CopyMethod,System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Constructor.
            </summary>
            <param name="key">Property key.</param>
            <param name="name">Property name.</param>
            <param name="storageRetriever">Used to get the storage for an item that will be used by the 
            IFieldValueAccessor&lt;TValue&gt; implementation to retrieve property values.</param>
            <param name="mappedFields">>Either a single field or IEnumerable of fields to which this property is mapped.
            For example, it can be a AppointmentProperty instance or IEnumerable&lt;AppointmentProperty&gt;.</param>
            <param name="isReadOnly">Whether the property is read-only.</param>
            <param name="converter">Converter that should be used to convert data source value to the value of the property
            and other way around as well.</param>
            <param name="copyMethod">Specifies if and how the value of the property will be copied when item is cloned.</param>
            <param name="defaultValueFactoryFunc">If specified, it's used to initialize the default value of the property.</param>
            <param name="equalityComparer">Used for comparing values.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.TypedPropInfo`2.AreValuesEqual``1(``0,Infragistics.IPropertyStorage{``0,System.Int32},``0,Infragistics.IPropertyStorage{``0,System.Int32})">
            <summary>
            Checks to see if the values in the property stores are different for this property.
            </summary>
            <typeparam name="T">Item type.</typeparam>
            <param name="x">This object's value for the property will be compared against the 'y' object's value for the property.</param>
            <param name="xStorage">Property storage for 'x' item.</param>
            <param name="y">This object's value for the property will be compared against the 'X' object's value for the property.</param>
            <param name="yStorage">Property storage for 'y' item.</param>
            <returns>True if the property values are equal, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.StoragePropsInfo.TypedPropInfo`2.GetValue``1(``0,Infragistics.IPropertyStorage{``0,System.Int32})">
            <summary>
            Gets the value of the property for the specified 'x' object.
            </summary>
            <typeparam name="T">Item type.</typeparam>
            <param name="x">The item whose property value to get.</param>
            <param name="xStorage">Property storage.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info._varianceDataProps">
            <summary>
            Change in the value of one or more of these properties will make an occurrence a variance.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info._rootSynchronizedVarianceDataProps">
            <summary>
            These properties are synchornized with the root activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info._uiCopyActivityExcptionProps">
            <summary>
            These properties are not copied when an activity is copied in the UI (fro example via drag 
            and drop). Copying has to go through CreateNew, EndEdit calls however when the data from
            the original is copied, the following properties are not copied over.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info._variantPropertyFlags">
            <summary>
            This map's key is the prop key and value is the flag used in the VariantProperties value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info._sr">
            <summary>
            Delegate used to get the storage instance from an activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Appointment">
            <summary>
            Represents an appointment in a schedule.
            </summary>
            <remarks>
            <para class="body">
            An <b>Appointment</b> object represents an appointment in the schedule object model. It derives from <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            which is also a base class for <see cref="T:Infragistics.Controls.Schedules.Journal"/> and <see cref="T:Infragistics.Controls.Schedules.Task"/>.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Appointment.ActivityType">
            <summary>
            Gets the ActivityType of this activity.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Appointment.Location">
            <summary>
            Gets or sets the location of the appointment.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Journal">
            <summary>
            Represents a journal or a note in a schedule.
            </summary>
            <remarks>
            <para class="body">
            A <b>Journal</b> object represents a journal or a note in the schedule object model. It derives from <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            which is also a base class for <see cref="T:Infragistics.Controls.Schedules.Appointment"/> and <see cref="T:Infragistics.Controls.Schedules.Task"/>.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Journal.ActivityType">
            <summary>
            Gets the ActivityType of this activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Resource">
            <summary>
            Represents a resource (owner) in a schedule.
            </summary>
            <remarks>
            <para class="body">
            A <b>Resource</b> object represents a resource or am owner in the schedule object model. A resource can be a person
            or a resource like conference room.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItems"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resource.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Resource"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resource.OnPropertyChanged(System.String)">
            <summary>
            Overridden. Called when property changed event is raised.
            </summary>
            <param name="propName">Name of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.Calendars">
            <summary>
            Gets the calendars associated with this user.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that there's always at least one calendar in the returned collection.
            Moreover, the first instance in the calendar is always the primary calendar of the resource.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.DataItem">
            <summary>
            Gets the underlying data item from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides">
            <summary>
            Gets a collection of DaySettingsOverride objects for this resource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek">
            <summary>
            Keyed collection of DaySettings objects where the key is DayOfWeek enum and the value is the associated DaySettings object. This is for providing per resource day of week settings. For example, let?s say the office hours are 9 AM-5 PM for everybody but the sales team?s office hour are 7 AM - 3 PM then each sales team member will have DayOfWeek entry for each work day in this collection with 7 AM - 3 PM WorkingHours specified.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.Description">
            <summary>
            Any extra information about the resource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.EmailAddress">
            <summary>
            Email address.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.FirstDayOfWeek">
            <summary>
            Specifies the first day of the week for the resource.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.FirstDayOfWeek"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.Id">
            <summary>
            Resource Id.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.IsVisibleResolved">
            <summary>
            Gets the resolve value indicating whether this resource is visible in the UI.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this property doesn't indicate whether the resource is presently visible in the UI.
            It indicates whether the resource can be displayed in the UI.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.IsVisible"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.IsLocked">
            <summary>
            Specifies whether the activities of this resource can be modified in the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.Metadata">
            <summary>
            Returns a MetadataPropertyValueStore object that's used for storing and retrieving metadata information.
            </summary>
            <remarks>
            <para class="body">
            You can use the <b>Metadata</b> to store and later retrieve information. The information is stored in
            properties of your data items as specified in the <see cref="T:Infragistics.MetadataPropertyMappingCollection"/>.
            For example, the metadata property mappings is specified using the <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>'s
            <see cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            property. Each property defined in the mapping collection has a corresponding entry in the returned MetadataPropertyValueStore.
            It's indexer is used to retrieve or set the the property's value. Furthermore, you can use bindings to
            bind to a specific value in the returned object.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.MetadataPropertyMappingCollection"/>
            <seealso cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.Name">
            <summary>
            Gets or sets the resource name.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendar">
            <summary>
            Primary calendar of the resource.
            </summary>
            <remarks>
            <para class="body">
            A resource can have multiple calendars. A calendar can be designated as a primary calendar.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendarId">
            <summary>
            Primary calendar of the resource.
            </summary>
            <remarks>
            <para class="body">
            A resource can have multiple calendars. A calendar can be designated as a primary calendar.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.PrimaryTimeZoneId">
            <summary>
            Primary time-zone of the resource.
            </summary>
            <remarks>
            <para class="body">
            You can designate a time-zone to a resource.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.IsVisible">
            <summary>
            Specifies whether this resource is visible in the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resource.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCalendar">
            <summary>
            Represents a calendar.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendar.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendar.#ctor(Infragistics.Controls.Schedules.Resource)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendar.OnPropertyChanged(System.String)">
            <summary>
            Overridden. Called when property changed event is raised.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.BaseColor">
            <summary>
            Gets or sets the base color used to display this calendar resource.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if this property is null (the default) then an appropitae <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.BrushProvider"/> will be assigned when this ResourceCalendar is visible in any <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> derived control</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ResourceCalendar.BrushProvider"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.BrushProvider">
            <summary>
            Returns the assigned CalendarBrushProvider
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ResourceCalendar.BaseColor"/>
            <remarks>
            <para class="note"><b>Note</b>: this property will return null unless this ResourceCalendar is visible in one or more <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> derived controls</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.BrushVersion">
            <summary>
            Returns the version of the brush cache. 
            </summary>
            <remarks>
            <para class="body">When something changes that invalidates the cache, e.g. the <see cref="T:Infragistics.Controls.Schedules.OfficeColorScheme"/> is changed or a new <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.BrushProvider"/> is asigned then this number is incremented.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BrushVersion"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.DataItem">
            <summary>
            Gets the underlying data item from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.Id">
            <summary>
            Gets or sets the calendar id.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResourceId">
            <summary>
            Gets the id of the resource to which this calendar belongs.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.IsVisibleResolved">
            <summary>
            Gets the resolve value indicating whether this resource is visible in the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.Metadata">
            <summary>
            Returns a MetadataPropertyValueStore object that's used for storing and retrieving metadata information.
            </summary>
            <remarks>
            <para class="body">
            You can use the <b>Metadata</b> to store and later retrieve information. The information is stored in
            properties of your data items as specified in the <see cref="T:Infragistics.MetadataPropertyMappingCollection"/>.
            For example, the metadata property mappings is specified using the <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>'s
            <see cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            property. Each property defined in the mapping collection has a corresponding entry in the returned MetadataPropertyValueStore.
            It's indexer is used to retrieve or set the the property's value. Furthermore, you can use bindings to
            bind to a specific value in the returned object.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.MetadataPropertyMappingCollection"/>
            <seealso cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.Name">
            <summary>
            Gets or sets the name of the calendar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResource">
            <summary>
            Returns the associated Resource.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Resource"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendar.IsVisible">
            <summary>
            Specifies whether this calendar is visible in the UI.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Task">
            <summary>
            Represents a task (to-do) in a schedule.
            </summary>
            <remarks>
            <para class="body">
            A <b>Task</b> object represents a task or a to-do in the schedule object model. It derives from <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            which is also a base class for <see cref="T:Infragistics.Controls.Schedules.Appointment"/> and <see cref="T:Infragistics.Controls.Schedules.Journal"/>.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Task.ActivityType">
            <summary>
            Gets the ActivityType of this activity.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Task.PercentComplete">
            <summary>
            Gets or sets the percentage complete value of the task.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AdapterActivitiesProvider.OnActivityRemoved(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Invoked when an activity has been removed from the exposed list of activities.
            </summary>
            <param name="activity">Activity being removed</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AdapterActivitiesProvider.ProcessCollectionChange(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)">
            <summary>
            Processes a collection change and indicates if the caller should send a reset notification.
            </summary>
            <param name="args">Collection change information</param>
            <param name="isExtraItem">A collection change for the extra items</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderAreaAdapter">
            <summary>
            Represents the header for a specific <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> in a specific <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            </summary>
        </member>
        <member name="E:Infragistics.Collections.AggregateCollection`1.CollectionChanged">
            <summary>
            Raised when the collection's contents change.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.AggregateCollection`1.Collections">
            <summary>
            Gets or sets the list of collections that constitue this aggregate collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.AggregateCollection`1.Count">
            <summary>
            Returns the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.AggregateCollection`1.IsReadOnly">
            <summary>
            Indicates whether the collection is read-only.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider">
            <summary>
            A class used to provide time zone information for date time conversions to and from utc date times from the information provided by the Windows OS.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: this class is only available in WPF. In Silverlight a custom class should be derived from <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider"/> or an instance of the <see cref="T:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider"/> should be used.</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider">
            <summary>
            Abstract base class used to provide time zone information for dateTime time conversions to and from utc dateTime times.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.#ctor">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider"/> derived class
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneIdProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneId"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TimeZoneInfoProvider.VersionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ClearCachedValues">
            <summary>
            Clears any values that have been cached so they can be re-created when needed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ConvertLocalToUtc(System.DateTime)">
            <summary>
            Converts the specified local time to universal time.
            </summary>
            <param name="dateTime">The local datetime to convert</param>
            <returns>The universal datetime</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in dateTime time.</param>
            <param name="destination">The time zone to convert the dateTime time to.</param>
            <param name="dateTime">The dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in dateTime time.</param>
            <param name="destination">The time zone to convert the dateTime time to.</param>
            <param name="dateTimeOffset">The dateTime time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ConvertUtcToLocal(System.DateTime)">
            <summary>
            Converts the specified universal time to local time.
            </summary>
            <param name="dateTime">The universal datetime to convert</param>
            <returns>The local datetime</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetAdjustmentRules(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns an array of adjustment rules for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The dateTime time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetBaseUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the base offset to utc time (when not in daylight saving time)
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>A TimeSpan with the UTC offset.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetDaylightName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetDisplayName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetExportId(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the export id for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>The export id or null.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetStandardName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/> for the time zone
            </summary>
            <param name="id">A string that identifies a specific time zone</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Returns the offset to convert a dateTime time to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The specific dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Returns the offset to convert a dateTime time offset to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The specific dateTime time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The dateTime time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The dateTime time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsInvalidTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is invalid
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The dateTime time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsValidTimeZoneId(System.String)">
            <summary>
            Determines if a string is a valid time zone id
            </summary>
            <param name="id">The id to verify.</param>
            <returns>True if the id is valid, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.SaveToXml">
            <summary>
            Saves all the time zone definition information as xml
            </summary>
            <returns>A string containing the saved xml</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.SaveToXml(System.Boolean)">
            <summary>
            Saves all the time zone definition information as xml
            </summary>
            <param name="includeDisplayNames">Determines if time zone display names will be included in the xml.</param>
            <returns>A string containing the saved xml</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.SupportsDayLightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns true if the time zone supports daylight savings time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>True if the time zone supports daylight savings time, otherwise false.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TryGetTimeZoneToken(System.String,Infragistics.Controls.Schedules.TimeZoneToken@)">
            <summary>
            Tries to get the <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/> for the time zone safely
            </summary>
            <param name="id">A string that identifies a specific time zone</param>
            <param name="token">An out parameter which will be set to the associated token.</param>
            <returns>True if the id was valid and the token was set, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.BumpVersion">
            <summary>
            Should be called whenever any time zone information has changed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.ConvertTime(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="dateTime">The source date time</param>
            <param name="sourceTimeZone">The source time zone</param>
            <param name="destinationTimeZone">The destination time zone.</param>
            <returns>The DateTime in the destination time zone.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.CreateTimeZoneDefinition(Infragistics.Controls.Schedules.TimeZoneToken,System.String,System.TimeSpan,System.String,System.String,System.String,System.Boolean,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule[])">
            <summary>
            Creates and returns an instance of a <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition"/> 
            </summary>
            <param name="token">The token that represents the time zone.</param>
            <param name="exportId">The export id</param>
            <param name="baseUtcOffset">The offset from UTC to use when not in daylight savings time.</param>
            <param name="dayLightName">The name of the time zone in daylight savings time</param>
            <param name="displayName">The display name of the time zone</param>
            <param name="standardName">The name of the time zone in standard time</param>
            <param name="supportsDaylightSavingsTime">Whether this time zone supports daylight savings.</param>
            <param name="adjustmentRules">The adjustment rules for daylight savings</param>
            <returns>The new instance of a <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition"/> </returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.CreateToken(System.String)">
            <summary>
            Creates an returns a <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/>
            </summary>
            <param name="id">The id of the time zone.</param>
            <returns>A token representing the specified id</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetAmbiguousTimeOffsets(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="dateTime">The date time and offset</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetAmbiguousTimeOffsets(System.DateTimeOffset,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="dateTimeOffset">The date time and offset</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneDefinitions">
            <summary>
            Returns a read-only collection of <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition"/> objects
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String,System.Boolean)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.TimeZoneToken"/> for the time zone
            </summary>
            <param name="id">A string that identifies a specific time zone</param>
            <param name="verifyIdIsValid">True to make sure the id is already defined.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetUtcOffset(System.DateTimeOffset,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Gets the Utc offset for a specific date time 
            </summary>
            <param name="dateTimeOffset">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
            <returns>The offset from Utc time that applies to this date time</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetUtcOffsetForDateTime(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Gets the Utc offset for a specific date time 
            </summary>
            <param name="dateTime">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
            <returns>The offset from Utc time that applies to this date time</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguous(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Returns whether a time is ambiguous, i.e. it it at a daylight savings transition
            </summary>
            <param name="dateTime">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsAmbiguous(System.DateTimeOffset,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Returns whether a time is ambiguous, i.e. it it at a daylight savings transition
            </summary>
            <param name="dateTimeOffset">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsDaylightSavingsTime(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="dateTime">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsDaylightSavingsTime(System.DateTimeOffset,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="dateTimeOffset">The specific date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.IsInvalidTime(System.DateTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition)">
            <summary>
            Determines if a DateTime is invalid
            </summary>
            <param name="dateTime">The date time</param>
            <param name="timeZoneDef">The time zone the date time is relative to</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.DefaultProvider">
            <summary>
            Returns a static instance of a TimeZoneInfoProvider pre-loaded with default time zone information 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneId">
            <summary>
            Returns or sets the Id for the local time zone
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneIdProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneIdResolved">
            <summary>
            Returns the id for the local time zone (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneId"/> is set its value will be returned. If it is not set an attempt will be made to deduce it.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalToken">
            <summary>
            Returns the token that represents the local time zone
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneTokens">
            <summary>
            Returns a read-only collection of time zone tokens
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.UtcToken">
            <summary>
            Returns the token that represents the UTC time zone
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version">
            <summary>
            Returns a version number that gets bumped when any change is made that affects time zone information
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.TimeZoneInfoProvider.VersionProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Tokens">
            <summary>
            Returns a collection of tokens.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: it is the repsonsibility of the derived classes to maintain this collection</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneInformationSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a TimeZoneInformation.
            </summary>
        </member>
        <member name="T:Infragistics.ObjectSerializationInfo">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Infragistics.ObjectSerializationInfo.COLLECTION_ELEMENT_DESIGNATOR_KEY">
            <summary>
            Used for designating collection elements in the dictionary returned
            by Serialize and in the dictionary passed into the Deserialize.
            </summary>
        </member>
        <member name="M:Infragistics.ObjectSerializationInfo.Deserialize(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified information into an instance of the object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.ObjectSerializationInfo.GetSerializedProperties">
            <summary>
            Returns a list of properties that are to be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.ObjectSerializationInfo.Serialize(System.Object)">
            <summary>
            Serializes the specified object. Returns a map of properties to their values.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.ObjectSerializationInfo.SerializedProperties">
            <summary>
            Returns a list of properties that are to be serialized.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition">
            <summary>
            A class that represents a specific time zone
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.AdjustmentRules">
            <summary>
            Returns a read-only collection of adjustmentRules that determine when daylight savings offsets are active.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.BaseUtcOffset">
            <summary>
            Returns the base offset from UTC time (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.DaylightName">
            <summary>
            Returns the name of this time zone when in daylight savings time (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.DisplayName">
            <summary>
            Returns the string to use when displaying this time zone (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.ExportId">
            <summary>
            Returns the identifier to use this time zone when exporting from the ICalendar format. (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.Id">
            <summary>
            Returns the identifier for the time zone (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.StandardName">
            <summary>
            Returns the name of this time zone when not in daylight savings time (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition.SupportsDaylightSavingsTime">
            <summary>
            Returns true is this time zone supports daylight savings time (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinitionSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a TimeZoneDefinition.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule">
            <summary>
            A class that describes the rule for when to transition into and out of daylight savings time
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.Create(System.DateTime,System.DateTime,System.TimeSpan,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime)">
            <summary>
            Creates and returns an instance of a TimeAdjustmentRule
            </summary>
            <param name="start">The start of the dateTime range where this tt is in force.</param>
            <param name="end">The end of the dateTime range where this tt is in force.</param>
            <param name="delta">The time adjustment to apply between the transition start and end while this tt is in force.</param>
            <param name="transitionStart">The start dateTime tt that idenifies when to transition to the adjusted time.</param>
            <param name="transitionEnd">The end dateTime tt that idenifies when to transition back to standard time.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.Equals(System.Object)">
            <summary>
            Returns true if the object is equilavent to this
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.GetHashCode">
            <summary>
            Returns a code to use for hashing
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.op_Equality(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule"/> structures for equality
            </summary>
            <param name="rule1">The first structure</param>
            <param name="rule2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.op_Inequality(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule"/> structures for inequality
            </summary>
            <param name="rule1">The first structure</param>
            <param name="rule2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.Equals(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule)">
            <summary>
            Returns true if both objects are equal
            </summary>
            <param name="other">The other object</param>
            <returns>Ture if equal, otherwise false</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.Delta">
            <summary>
            Returns the time adjustment to apply between the transition start and end while this tt is in force. (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.End">
            <summary>
            Returns the end of the dateTime range where this tt is in force (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.Start">
            <summary>
            Returns the start of the dateTime range where this tt is in force (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.TransitionEnd">
            <summary>
            Returns the end dateTime tt that idenifies when to transition back to standard time. (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule.TransitionStart">
            <summary>
            Returns the start dateTime tt that idenifies when to transition to the adjusted time. (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRuleSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a TimeAdjustmentRule.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime">
            <summary>
            Represents a tt for transitioning to or from daylight savings times
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.CreateFixedDateTransitionTime(System.Byte,System.Byte,System.DateTime)">
            <summary>
            A static menthod that creates and returns a transition time that occurs on the same dateTime every year.
            </summary>
            <param name="day">A number between 1 and 31</param>
            <param name="month">A number between 1 and 12</param>
            <param name="timeOfDay">The time that the transition takes place.</param>
            <returns>The newly created instance of a <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.CreateFloatingDateTransitionTime(System.Byte,System.Byte,System.DayOfWeek,System.DateTime)">
            <summary>
            A static menthod that creates and returns a transition time that occurs on a different dateTime every year based on day of week and a relative week number.
            </summary>
            <param name="week">A number between 1 and 5</param>
            <param name="month">A number between 1 and 12</param>
            <param name="dayOfWeek">An enumeration that identifies a specific day from 'Sunday' thru 'Saturday'.</param>
            <param name="timeOfDay">The time that the transition takes place.</param>
            <returns>The newly created instance of a <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Equals(System.Object)">
            <summary>
            Returns true if the object is equilavent to this
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.GetHashCode">
            <summary>
            Returns a code to use for hashing
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.op_Equality(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime"/> structures for equality
            </summary>
            <param name="transition1">The first structure</param>
            <param name="transition2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.op_Inequality(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime"/> structures for inequality
            </summary>
            <param name="transition1">The first structure</param>
            <param name="transition2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Equals(Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime)">
            <summary>
            Returns true if the object is equilavent to this
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Day">
            <summary>
            Returns the day of the month (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: the day number is ignored if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.IsFixedDate"/> is false.</para>
            </remarks>
            <value>A number from 1 to 31</value>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.DayOfWeek">
            <summary>
            Returns the day of the week (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: the day of the week is ignored if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.IsFixedDate"/> is true.</para>
            </remarks>
            <value>An enumeration from 'Sunday' thru "Saturday'</value>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.IsFixedDate">
            <summary>
            Returns whether the transition occurs on a speciic day number (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if this is true then <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Day"/> is used and <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Week"/> and <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.DayOfWeek"/> are ignored. Otherwise, Day is ignored and Week and DayOfWeek are used.</para>
            </remarks>
            <value>True to use <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Day"/> or false to use <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Week"/> and <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.DayOfWeek"/>.</value>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Month">
            <summary>
            Returns the month of the year (read-only)
            </summary>
            <value>A number from 1 to 12</value>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.TimeOfDay">
            <summary>
            Returns the time of day when the transition wil take place (read-only)
            </summary>
            <value>A datetime that contains only hours, minutes and seconds</value>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.Week">
            <summary>
            Returns the week number relative to the month (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: the week number is ignored if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTime.IsFixedDate"/> is true.</para>
            </remarks>
            <value>A number from 1 to 5</value>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TransitionTimeSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a TransitionTime.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.#ctor">
            <summary>
            Creates a  new instnace of a <see cref="T:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.UseOsDisplayNamesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.UseOsDisplayNames"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.ClearCachedValues">
            <summary>
            Clears any values that have been cached so they can be re-created when needed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in date time.</param>
            <param name="destination">The time zone to convert the date time to.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in date time.</param>
            <param name="destination">The time zone to convert the date time to.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetAdjustmentRules(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns an array of adjustment rules for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetBaseUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the base offset to utc time (when not in daylight saving time)
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>A TimeSpan with the UTC offset.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetDaylightName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetDisplayName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetExportId(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the export id for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>The export id or null.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetStandardName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetTimeZoneDefinitions">
            <summary>
            Returns a read-only collection of <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition"/> objects
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Returns the offset to convert a date time to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The specific date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Returns the offset to convert a date time offset to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The specific date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsInvalidTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is invalid
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.IsValidTimeZoneId(System.String)">
            <summary>
            Determines if a string is a valid time zone id
            </summary>
            <param name="id">The id to verify.</param>
            <returns>True if the id is valid, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.SupportsDayLightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns true if the time zone supports daylight savings time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>True if the time zone supports daylight savings time, otherwise false.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.LocalTimeZoneIdResolved">
            <summary>
            Returns the id for the local time zone (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneId"/> is set its value will be returned. If it is not then the sytem local time zone id will be returned.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.UseOsDisplayNames">
            <summary>
            Returns or sets whether to use the system display names for time zones
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.UseOsDisplayNamesProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.UtcToken">
            <summary>
            Returns the token that represents the UTC time zone
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OSTimeZoneInfoProvider.ExportIdMap">
            <summary>
            Returns a dictionary that contains windows time zone ids as keys and the associated export ids as values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider">
            <summary>
            A class used to load custom time zone information for date time conversions to and from utc date times.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.#ctor">
            <summary>
            Creates a  new instnace of a <see cref="T:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.BumpVersion">
            <summary>
            Should be called whenever any time zone information has changed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.ClearCachedValues">
            <summary>
            Clears any values that have been cached so they can be re-created when needed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in date time.</param>
            <param name="destination">The time zone to convert the date time to.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.ConvertTime(Infragistics.Controls.Schedules.TimeZoneToken,Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Converts a DateTime from one time zone to another
            </summary>
            <param name="source">The time zone of the passed in date time.</param>
            <param name="destination">The time zone to convert the date time to.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetAdjustmentRules(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns an array of adjustment rules for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetAmbiguousTimeOffsets(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Gets the ambiguous time offsets for a time when a daylight time transition is occuring
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
            <exception cref="T:System.ArgumentException">If DateTime is not ambiguous.</exception>
            <seealso cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetBaseUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the base offset to utc time (when not in daylight saving time)
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>A TimeSpan with the UTC offset.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetDaylightName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetDisplayName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetExportId(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the export id for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>The export id or null.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetStandardName(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns the display name for the time zone
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetTimeZoneDefinitions">
            <summary>
            Returns a read-only collection of <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeZoneDefinition"/> objects
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Returns the offset to convert a date time to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The specific date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.GetUtcOffset(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Returns the offset to convert a date time offset to Utc time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The specific date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsAmbiguousTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is ambiguous, i.e. it is within a daylight time transition
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsDaylightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTimeOffset)">
            <summary>
            Determines if a DateTime is within a daylight savings adjustment period
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTimeOffset">The date time and offset</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsInvalidTime(Infragistics.Controls.Schedules.TimeZoneToken,System.DateTime)">
            <summary>
            Determines if a DateTime is invalid
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <param name="dateTime">The date time</param>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.IsValidTimeZoneId(System.String)">
            <summary>
            Determines if a string is a valid time zone id
            </summary>
            <param name="id">The id to verify.</param>
            <returns>True if the id is valid, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.SupportsDayLightSavingsTime(Infragistics.Controls.Schedules.TimeZoneToken)">
            <summary>
            Returns true if the time zone supports daylight savings time
            </summary>
            <param name="token">An object that represents a specific time zone.</param>
            <returns>True if the time zone supports daylight savings time, otherwise false.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.BeginUpdate">
            <summary>
            Suspends bumping the <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version"/> property until <see cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.EndUpdate"/> is called.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: every call to <b>BeginUpdate</b> must be paired with a subsequewnt call to <see cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.EndUpdate"/></para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version"/>
            <seealso cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.EndUpdate"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.EndUpdate">
            <summary>
            Restores the bumping of the <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version"/> property.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: every call to <see cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.BeginUpdate"/> must be paired with a subsequewnt call to <b>EndUpdate</b></para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.Version"/>
            <seealso cref="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.BeginUpdate"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.LoadFromXml(System.String)">
            <summary>
            Loads all the time zone definition information from an xml string
            </summary>
            <param name="xml">A string containing the xml</param>
            <returns>True is succesful, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.LoadFromXml(System.String,System.Boolean)">
            <summary>
            Loads all the time zone definition information from an xml string
            </summary>
            <param name="xml">A string containing the xml</param>
            <param name="includeDisplayNames">Determines if time zone display names will be de-serialized from the xml.</param>
            <returns>True is succesful, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.RegisterCustomTimeZone(System.String,System.String,System.TimeSpan,System.String,System.String,System.String,System.Boolean,Infragistics.Controls.Schedules.TimeZoneInfoProvider.TimeAdjustmentRule[])">
            <summary>
            Registers a custom time zone
            </summary>
            <param name="id">The id of the time zone.</param>
            <param name="exportId">The export id</param>
            <param name="baseUtcOffset">The offset from UTC to use when not in daylight savings time.</param>
            <param name="dayLightName">The name of the time zone in daylight savings time</param>
            <param name="displayName">The display name of the time zone</param>
            <param name="standardName">The name of the time zone in standard time</param>
            <param name="supportsDaylightSavingsTime">Whether this time zone supports daylight savings.</param>
            <param name="adjustmentRules">The adjustment rules for daylight savings</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.LocalTimeZoneIdResolved">
            <summary>
            Returns the id for the local time zone (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if <see cref="P:Infragistics.Controls.Schedules.TimeZoneInfoProvider.LocalTimeZoneId"/> is set its value will be returned. If it is not set an attempt will be made to deduce it.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.UtcToken">
            <summary>
            Returns the token that represents the UTC time zone
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CustomTimeZoneInfoProvider.UtcTimeZoneId">
            <summary>
            Returns or sets the id for the Utc time zone
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarGroupBase">
            <summary>
            Base class for an object that contains one or more <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupBase.Contains(Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Returns true if the calendar is in the group.
            </summary>
            <param name="calendar">The calendar to check.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars">
            <summary>
            Returns the collection of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances whose <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.IsVisibleResolved"/> is true
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar">
            <summary>
            Returns or sets the selected calendar
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MergedCalendarGroup.Contains(Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Returns true if the calendar is in the group.
            </summary>
            <param name="calendar">The calendar to check.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TimeZoneToken">
            <summary>
            A class that represents a specific time zone
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.TimeZoneInfoProvider.GetTimeZoneToken(System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneToken.ConvertFromLocal(System.DateTime)">
            <summary>
            Converts the specified time from the Local token for the associated provider to the timezone identified by this token instance.
            </summary>
            <param name="dateTime">DateTime to convert. This is assumed to be an unspecified time relative to the Local timezone of the associated provider</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneToken.ConvertFromUtc(System.DateTime)">
            <summary>
            Converts the specified time from the Utc token for the associated provider to the timezone identified by this token instance.
            </summary>
            <param name="dateTime">DateTime to convert. This is assumed to be an unspecified time relative to the Utc timezone of the associated provider</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneToken.ConvertToLocal(System.DateTime)">
            <summary>
            Converts the specified time from the timezone identified by this token instance to the Local token for the associated provider.
            </summary>
            <param name="dateTime">DateTime to convert. This is assumed to be an unspecified time relative to this timezone</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeZoneToken.ConvertToUtc(System.DateTime)">
            <summary>
            Converts the specified time from the timezone identified by this token instance to the Utc token for the associated provider.
            </summary>
            <param name="dateTime">DateTime to convert. This is assumed to be an unspecified time relative to this timezone</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneToken.Id">
            <summary>
            A string that identifiies the time zone (read-only) 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneToken.DisplayName">
            <summary>
            A string used to represent this time zone is the ui (read-only) 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeZoneToken.Provider">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider"/> that created the token (read-only) 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo">
            <summary>
            An object that exposes tooltip information for an activity
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.Activity"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityPresenterProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityPresenter"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ErrorProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.Error"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.Activity">
            <summary>
            Returns the associated activity (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityPresenter">
            <summary>
            Returns the associated activity presenter (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ActivityPresenterProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.Error">
            <summary>
            Returns a <see cref="T:Infragistics.DataErrorInfo"/> object or null (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfo.ErrorProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter">
            <summary>
            Custom element used to display the contents of the tooltip for an <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.ActivityToolTipInfoProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.ActivityToolTipInfo"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.ActivityToolTipInfo">
            <summary>
            Returns or sets the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.ActivityToolTipInfo"/> that provides information about the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> for which the tooltip is being displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityToolTipInfoPresenter.ActivityToolTipInfoProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement">
            <summary>
            Custom element displayed over a timeslot and is used to create a new activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase">
            <summary>
            Base class for an element whose DataContext is a <see cref="P:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ResourceCalendar"/>
            </summary>
        </member>
        <member name="T:Infragistics.IReceivePropertyChange`1">
            <summary>
            Interface implemented by an object that wishes to receive change notifications for attached properties.
            </summary>
            <typeparam name="T">The type of property value for which to receive change notifications</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBackgroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBorderBrush">
            <summary>
            Returns the brush to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ResourceCalendarElementBase.ComputedBorderBrushProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.IsSingleLineDisplayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.IsSingleLineDisplay"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.PromptProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.Prompt"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.IsSingleLineDisplay">
            <summary>
            Returns true if this element should display its contents in a single line (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.IsSingleLineDisplayProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.Prompt">
            <summary>
            Returns the string to be displayed in the element.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ClickToAddActivityElement.PromptProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator">
            <summary>
            Custom control that indicates that an operation is pending
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.IsActiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.IsActive"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.IsActive">
            <summary>
            Returns or sets whether the indicator is active
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.PendingOperationIndicator.IsActiveProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader">
            <summary>
            Base class that represents a <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> from the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of a <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup"/> of a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.CalendarHeaderAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse enters the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse leaves the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse operation</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CalendarProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.Calendar"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CanCloseProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CanClose"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsActiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsActive"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsInOverlayModeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsInOverlayMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.Orientation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OverlayButtonVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OverlayButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.Calendar">
            <summary>
            Returns or sets the calendar that the element represents
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CalendarProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CanClose">
            <summary>
            Returns true if the user can close theis calendar (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CanCloseProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibility">
            <summary>
            Returns the visibility of the close button (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsActive">
            <summary>
            Returns a boolean indicating if the item is currently the active calendar within the containing control.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsActiveProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsInOverlayMode">
            <summary>
            Returns true if this calendare header is in overlay mode.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsInOverlayModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsSelected">
            <summary>
            Returns a boolean indicating if the item is currently selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.IsSelectedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.Orientation">
            <summary>
            Returns the current orientation in which the element is arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OrientationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OverlayButtonVisibility">
            <summary>
            Returns the visibility of the overlay button which toggles whether the calendar is displayed in 'Overlay' or 'Side-By-Side' mode (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OverlayButtonVisibilityProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea">
            <summary>
            Represents the header area for a <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> in a <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> derived control
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupItemsPresenterBase">
            <summary>
            Base class for an element representing a portion of a <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/> that displays one or more items in a <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase">
            <summary>
            Base class for an element representing a portion of a <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroupProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedMarginProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedMargin"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/> that the element represents
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroupProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedBorderThickness">
            <summary>
            Returns the border thickness to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedBorderThicknessProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedMargin">
            <summary>
            Returns the margin to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.ComputedMarginProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupItemsPresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupItemsPresenterBase.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupItemsPresenterBase.Items">
            <summary>
            Returns or sets the recyclable items in the specified collection
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.CalendarHeaderAreaAutomationPeer"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.OrientationProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.Orientation">
            <summary>
            Returns or sets the orientation of the items within the CalendarHeaderArea
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderHorizontal">
            <summary>
            Represents a <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> from the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of a <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup"/> of a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderHorizontal.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderHorizontal"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderVertical">
            <summary>
            Represents a <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> from the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of a <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup"/> of a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarHeaderVertical.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderVertical"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogRibbonLite">
            <summary>
            Ribbon-like control used in the 'lightweight' Appointent dialog.  For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogRibbonLite.#ctor(Infragistics.Controls.Schedules.CalendarColorScheme)">
            <summary>
            Creates an instance of the AppointmentDialogRibbonLite.
            </summary>
            <param name="colorScheme"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogRibbonLite.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogRibbonLite.ColorScheme">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.CalendarColorScheme"/> associated with the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogRibbonLite.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox">
            <summary>
            Simple Numeric TextBox control for positive integers.  Performs simple range editing via MinValue and MaxValue properties (for internal use only)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.#ctor">
            <summary>
            Creates an instance of SimpleNumericTextbox.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when System.Windows.UIElement.KeyDown event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.Value"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.MinValue">
            <summary>
            Returns/sets the minimum value allowed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.MaxValue">
            <summary>
            Returns/sets the maximum value allowed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.Value">
            <summary>
            Returns or sets the integer Value of the control
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.SimpleNumericTextBox.ValueProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter">
            <summary>
            Custom element used to display a date time range in multiple formats based on available space.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter">
            <summary>
            Custom element used to display a date time range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase">
            <summary>
            Base class for custom elements used to display formatted date and time information.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.FormattedTextProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.FormattedText"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.FormattedText">
            <summary>
            Returns the text to display after it has been formatted
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.FormattedTextProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.End"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.ConvertDateTimeToLocalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.ConvertDateTimeToLocal"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.EndProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.End"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.FormatTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.FormatType"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.StartProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.Start"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.ConvertDateTimeToLocal">
            <summary>
            Returns or sets a value indicating whether the value specified by the <see cref="T:System.DateTime"/> should be converted to local using the associated <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/> before formatting.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.ConvertDateTimeToLocalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.End">
            <summary>
            Returns or sets the end of the range
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.EndProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.FormatType">
            <summary>
            Returns or sets an enumeration that specified how to format the date range
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.FormatTypeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.Start">
            <summary>
            Returns or sets the start of the range
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateRangePresenter.StartProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter.ShortFormattedTextProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter.ShortFormattedText"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter.ShortFormattedText">
            <summary>
            Returns the text to display after it has been formatted
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.BestFitDateRangePresenter.ShortFormattedTextProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter">
            <summary>
            Custom element used to display a date time.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDatePresenterBase.FormattedText"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.ConvertDateTimeToLocalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.ConvertDateTimeToLocal"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.DateTimeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.DateTime"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.FormatTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.FormatType"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.ConvertDateTimeToLocal">
            <summary>
            Returns or sets a value indicating whether the value specified by the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.DateTime"/> should be converted to local using the associated <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/> before formatting.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.ConvertDateTimeToLocalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.DateTime">
            <summary>
            Returns or sets the date time
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.DateTimeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.FormatType">
            <summary>
            Returns or sets an enumeration that specifes how to format the DateTime
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleDateTimePresenter.FormatTypeProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea">
            <summary>
            Represents the timeslots for a specific logical day in the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea">
            <summary>
            Represents a group of timeslots
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotArea.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.TimeslotAreaAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotArea.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when the mouse wheel has been scrolled
            </summary>
            <param name="e">Provides information about the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotArea.ToString">
            <summary>
            Returns the string representation of the element.
            </summary>
            <returns>The ToString of the associated <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotArea.AreaAdapter"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotArea.ComputedBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotArea.ComputedBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotArea.ComputedBorderThickness">
            <summary>
            Returns the border thickness to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotArea.ComputedBorderThicknessProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea.IsTodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea.IsToday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea.IsToday">
            <summary>
            Returns a boolean indicating if the element represents the current logical date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotArea.IsTodayProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore">
            <summary>
            Displays a UI for the core portion of the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> Recurrence dialog. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.#ctor(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Creates an instance of the RecurrenceDialogCore control which represents the core of the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> Recurrence dialog.
            </summary>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no containing element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.</param>
            <param name="activity">The appointment to display.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.KeyUp event occurs
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayNumberMonthlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayNumberMonthly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfMonthYearlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfMonthYearly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekMonthlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekMonthly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekYearlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekYearly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalMonthlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalMonthly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalYearlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalYearly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.EndTimePickerVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.EndTimePickerVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDailyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeeklyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsActivityModifiableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsActivityModifiable"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeEveryProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeEvery"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeWeekdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeWeekday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeSimpleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeSimple"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeComplexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeComplex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfter"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndByProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndBy"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForeverProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForever"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPatternProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSundayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMondayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFridayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeSimpleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeSimple"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeComplexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeComplex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRecurrenceRemoveableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRecurrenceRemoveable"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearSimpleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearSimple"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearComplexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearComplex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumberProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumber"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescription"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionVisibility"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.UpdateDirtyStatus(System.Boolean)">
            <summary>
            Updates the dirty status of the dialog.
            </summary>
            <param name="isDirty">True to mark the dialog dirty, otherwise false.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.AddRemoveGotFocusHelper(System.Windows.FrameworkElement@,System.Windows.FrameworkElement,System.Windows.RoutedEventHandler)">
            <summary>
            Unhooks the gotfocus of the old element, updates the field to reference the new value and hooks it if non-null.
            </summary>
            <param name="field">Field that will be updated with the new value. If the old value is non-null the event will be unhooked first</param>
            <param name="newValue">The new value for the field</param>
            <param name="handler">The handler to hook/unhook</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.AddRemoveKeyDownHelper(System.Windows.FrameworkElement@,System.Windows.FrameworkElement,System.Windows.Input.KeyEventHandler)">
            <summary>
            Unhooks the KeyDownof the old element, updates the field to reference the new value and hooks it if non-null.
            </summary>
            <param name="field">Field that will be updated with the new value. If the old value is non-null the event will be unhooked first</param>
            <param name="newValue">The new value for the field</param>
            <param name="handler">The handler to hook/unhook</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity">
            <summary>
            Returns a clone of the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/> whose recurrence is being edited.  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DataManager">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> associated with the dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions">
            <summary>
            Returns a list of descriptions for the day choices in the RecurrenceDialog.  These include descriptions for
            Sunday thru Saturday as well as Day, Weekday and WeekendDay.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayNumberMonthly">
            <summary>
            Returns or sets the interval for a Monthly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayNumberMonthlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfMonthYearly">
            <summary>
            Returns or sets the day of the month in a yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfMonthYearlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekMonthly">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions"/> collection which represents the day of week in a monthly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekMonthlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekYearly">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions"/> collection which represents the day of week in a yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekYearlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalMonthly">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OrdinalDescriptions"/> collection which represents the ordinal position of the day of week in a monthly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalMonthlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OrdinalDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalYearly">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OrdinalDescriptions"/> collection which represents the ordinal position of the day of week in a yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.DayOfWeekOrdinalYearlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OrdinalDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.EndTimePickerVisibility">
            <summary>
            Returns/sets whether the dialog's End TimePicker should be visible.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.EndTimePickerVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily">
            <summary>
            Returns or sets the interval for a Daily recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDailyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly">
            <summary>
            Returns or sets the interval for a Weekly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeeklyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly">
            <summary>
            Returns or sets the interval for a Monthly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex">
            <summary>
            Returns or sets the interval for a complex Monthly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplexProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearly">
            <summary>
            Returns or sets the interval for a Yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalYearlyProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalDaily"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalWeekly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthly"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IntervalMonthlyComplex"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsActivityModifiable">
            <summary>
            Returns or sets whether the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> displayed in the dialog can be edited.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsActivityModifiableProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern">
            <summary>
            Returns or sets whether the recurrence pattern is daily.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeEvery">
            <summary>
            Returns or sets whether the daily pattern type is 'every 'n' days'.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeWeekday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeWeekday">
            <summary>
            Returns or sets whether the daily pattern type is 'every weekday'.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPatternTypeEvery"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern">
            <summary>
            Returns or sets whether the recurrence pattern is monthly.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeSimple">
            <summary>
            Returns or sets whether the monthly pattern type is 'on the nth day of every 'n' months'.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeComplex"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeComplex">
            <summary>
            Returns or sets whether the monthly pattern type is 'on the nth day of every 'n' month'.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPatternTypeSimple"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfter">
            <summary>
            Returns or sets whether the recurrence ends after a specific number of occurrences.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfterProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndBy"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForever"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumber"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndBy">
            <summary>
            Returns or sets whether the recurrence ends at a specific date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndByProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfter"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForever"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumber"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForever">
            <summary>
            Returns or sets whether the recurrence repeats forever with no end date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeForeverProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndAfter"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRangeEndBy"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumber"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern">
            <summary>
            Returns or sets whether the recurrence pattern is weekly.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPatternProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Sunday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSundayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Monday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMondayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Tuesday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesdayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Wednesday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesdayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Thursday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursdayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Friday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFridayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturday">
            <summary>
            Returns or sets whether the weekly recurrence pattern occurs on Saturday.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSaturdayProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnSunday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnMonday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnTuesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnWednesday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnThursday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyOnFriday"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern">
            <summary>
            Returns or sets whether the recurrence pattern is yearly.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsDailyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsWeeklyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsMonthlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Activity"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeSimple">
            <summary>
            Returns or sets whether the yearly pattern type is on a specific date within the year.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeComplex"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeComplex">
            <summary>
            Returns or sets whether the yearly pattern type is 'on the nth day within month 'x'' within the year.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPattern"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsYearlyPatternTypeSimple"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRecurrenceRemoveable">
            <summary>
            Returns or sets whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.Recurrence"/> being displayed in the dialog can be removed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.IsRecurrenceRemoveableProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.RecurrenceBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthDescriptions">
            <summary>
            Returns a list of Month descriptions.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearSimple">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthDescriptions"/> collection which represents the month in a yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearSimpleProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearComplex">
            <summary>
            Returns or sets the index within the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthDescriptions"/> collection which represents the month in a yearly recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthOfYearComplexProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.MonthDescriptions"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.OrdinalDescriptions">
            <summary>
            Returns a list of ordinal position descriptions that includes first, second, third, fourth and last.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDate">
            <summary>
            Returns or sets the start date of the recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate">
            <summary>
            Returns or sets the end date of the recurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDateProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumber">
            <summary>
            Returns or sets the number of occurrences after which the recurrence ends.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndAfterOccurrenceNumberProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeStartDate"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RangeEndDate"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescription">
            <summary>
            Returns a string that describes Recurrence settings and rules.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionVisibility">
            <summary>
            Returns/sets whether a natural language description of the Recurrence's details should be visible.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescriptionVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore.RecurrenceDescription"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog">
            <summary>
            Displays a UI for choosing an <see cref="T:Infragistics.Controls.Schedules.Appointment"/> occurrence or series for deletion or opening.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.#ctor(Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.RecurrenceChooserType,Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult)">
            <summary>
            Creates an instance of the RecurrenceChooserDialog which lets the user choose whether to access a recurrence Series or Occurrence
            when an <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> is opened or deleted.
            </summary>
            <param name="dataManager">The XamScheduleDataManager for which the dialog is being displayed.</param>
            <param name="activity">The recurring <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> for which the choice is being made.</param>
            <param name="chooserType">The type of choice to be made, i.e. whether the appointment is being opened or deleted.</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult"/> instance. The dialog will set 
            the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.KeyUp event occurs
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsOccurrenceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsOccurrence"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsSeriesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsSeries"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsOccurrence">
            <summary>
            Returns true if the choice is the recurrence Occurrence.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsOccurrenceProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsSeries">
            <summary>
            Returns true if the choice is the recurrence Series.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.ChoiceIsSeriesProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.DataManager">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> associated with the dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult">
            <summary>
            A class that holds the choice made by the user in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.#ctor(System.Object)">
            <summary>
            Creates an instance of the RecurrenceChooserResult which should be passed in the constructor the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>.
            The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.
            </summary>
            <param name="userData">An opaque piece of user data - this parameter can be null.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.Choice">
            <summary>
            Returns the choice made by the user in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.UserData">
            <summary>
            Returns or sets an opaque piece of user data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog">
            <summary>
            Displays a UI for currently expired reminders.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialog.#ctor(Infragistics.Controls.Schedules.XamScheduleDataManager)">
            <summary>
            Creates an instance of the Reminder dialog.
            </summary>
            <param name="dataManager">The XamScheduleDataManager associated with the reminders displayedin the dialog.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialog.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ReminderDialog.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.KeyUp event occurs
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.IsSnoozePickerEnabledProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.IsSnoozePickerEnabled"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityImageVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityImageVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubject"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityStartTimeDescriptionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityStartTimeDescription"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.DataManager">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"></see> associated with the dialog./&gt;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.IsSnoozePickerEnabled">
            <summary>
            Returns the visibility of the subject for the currently selected <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.IsSnoozePickerEnabledProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.ReminderItems">
            <summary>
            Returns an ObservableCollection
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityImageVisibility">
            <summary>
            Returns the visibility of the image for the currently selected <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityImageVisibilityProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubject">
            <summary>
            Returns the subject for the currently selected <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityStartTimeDescription">
            <summary>
            Returns a string that describes the start time for the currently selected <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivityStartTimeDescriptionProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectVisibility">
            <summary>
            Returns the visibility of the subject for the currently selected <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialog.SelectedActivitySubjectVisibilityProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem">
            <summary>
            Represents items in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/> list.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.Activity">
            <summary>
            The <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> associated with the <see cref="T:Infragistics.Controls.Schedules.Reminder"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.Description">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.Reminder.Text"/> if specified, otherwise returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.DueIn">
            <summary>
            Returns a string representation of the amount of time left before the activity associated with the <see cref="T:Infragistics.Controls.Schedules.Reminder"/> begins.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.DueInProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.ReminderInfo">
            <summary>
            The <see cref="P:Infragistics.Controls.Schedules.Primitives.ReminderDialogListItem.ReminderInfo"/> associated with the <see cref="T:Infragistics.Controls.Schedules.Reminder"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog">
            <summary>
            Displays a UI for choosing a TimeZone Id.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.#ctor(Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.TimeZoneInfoProvider,Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult)">
            <summary>
            Creates an instance of the TimeZoneChooserDialog which lets the user choose a TimeZone id.
            </summary>
            <param name="dataManager">The XamScheduleDataManager for which the dialog is being displayed.</param>
            <param name="tzProvider">The time zone info provcider</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult"/> instance. The dialog will set 
            the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.KeyUp event occurs
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.SelectedTimeZoneTokenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.SelectedTimeZoneToken"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.DataManager">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> associated with the dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.SelectedTimeZoneToken">
            <summary>
            Returns or sets the selected time zone token
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.SelectedTimeZoneTokenProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneTokens">
            <summary>
            Returns a read only collectio of time zone tokens.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult">
            <summary>
            A class that holds the choice made by the user in the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/>. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.#ctor(System.Object)">
            <summary>
            Creates an instance of the TimeZoneChooserResult which should be passed in the constructor the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/>.
            The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.
            </summary>
            <param name="userData">An opaque piece of user data - this parameter can be null.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.Choice">
            <summary>
            Returns the choice made by the user in the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.UserData">
            <summary>
            Returns or sets an opaque piece of user data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea">
            <summary>
            Represents the area of a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/> that contains the weeks for a specific <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea">
            <summary>
            Custom element that represents the portion of a <see cref="P:Infragistics.Controls.Schedules.Primitives.CalendarGroupPresenterBase.CalendarGroup"/> that contains the timeslots for the elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotArea"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.CalendarGroupTimeslotAreaAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.WeekHeaderWidthProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.WeekHeaderWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.WeekHeaderWidth">
            <summary>
            Returns or sets the preferred width for the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.WeekHeaderWidthProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewCalendarGroupTimeslotArea.DayOfWeekHeaders">
            <summary>
            Returns or sets the recyclable items that represent that days of week headers
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewDay">
            <summary>
            Represents a single logical day in a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayPresenterBase">
            <summary>
            Represents a single logical day in a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase">
            <summary>
            Base class for an element that represents a specific range of dates and/or times.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.TimeRangePresenterBaseAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture has been lost
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse enters the bounds of the timeslot.
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse leaves the bounds of the timeslot.
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is released.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse has noved
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the right mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.ToString">
            <summary>
            Returns the string representation of the element.
            </summary>
            <returns>A string containing the range of time that the element represents</returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.EndProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.End"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Orientation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.StartProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Start"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.End">
            <summary>
            Returns the exclusive end date for the timeslot.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.EndProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Orientation">
            <summary>
            Returns the current orientation in which the element is arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.OrientationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Start">
            <summary>
            Returns the earliest time that the element represents.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.StartProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Timeslot">
            <summary>
            Returns or sets the associated <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeRangePresenterBase.Timeslot"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayPresenterBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsTodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsToday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsSelected">
            <summary>
            Returns a boolean indicating if the object is currently selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsSelectedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsToday">
            <summary>
            Returns a boolean indicating if the element represents the current logical day.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayPresenterBase.IsTodayProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDay.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDay"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDay.IsAlternateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDay.IsAlternate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDay.IsAlternate">
            <summary>
            Returns a boolean indicating if the elements represents a day in an alternate month
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDay.IsAlternateProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader">
            <summary>
            Represents the header for a single day in a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayHeaderBase">
            <summary>
            Base class for an element that represents a header for a specific date
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayHeaderBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse operation</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.DateTimeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.DateTime"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.IsTodayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.IsToday"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedBorderThickness">
            <summary>
            Returns the border thickness to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedBorderThicknessProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.DateTime">
            <summary>
            Returns or sets the Date of the logical day that the element represents
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.DateTimeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.IsToday">
            <summary>
            Returns a boolean indicating if the header represents the current logical day.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayHeaderBase.IsTodayProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.MonthViewDayHeaderAutomationPeer"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameFormatTypeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameFormatType"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameFormatType">
            <summary>
            Returns the preferred format type when the month name is to be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameFormatTypeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameVisibility">
            <summary>
            Returns a value indicating whether the name of the month should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader.MonthNameVisibilityProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader">
            <summary>
            Represents the header for a given day of the week within a specific <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/> of a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.MonthViewDayOfWeekHeaderAutomationPeer"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.AbbreviatedDayNameProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.AbbreviatedDayName"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeekProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayNameProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayName"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ShortestDayNameProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ShortestDayName"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.AbbreviatedDayName">
            <summary>
            Returns the abbreviated version of the localized string representation of the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeek"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.AbbreviatedDayNameProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedBorderThickness">
            <summary>
            Returns the border thickness to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedBorderThicknessProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeek">
            <summary>
            Returns an enumeration value indicating which day of the week the element represents.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeekProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayName">
            <summary>
            Returns the localized string representation of the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeek"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayNameProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ShortestDayName">
            <summary>
            Returns the shortest version of the localized string representation of the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.DayOfWeek"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewDayOfWeekHeader.ShortestDayNameProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea">
            <summary>
            Represents the timeslots for a specific logical day in the <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.StartProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.Start"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.EndProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.End"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekNumberProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekNumber"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekHeaderWidthProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekHeaderWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.Start">
            <summary>
            Returns the logical day for the first day in the week.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.StartProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.End">
            <summary>
            Returns the logical date for the last day of the week
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.EndProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekNumber">
            <summary>
            Returns the week # that the element represents.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekNumberProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekHeaderWidth">
            <summary>
            Returns or sets the preferred width for the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewTimeslotArea.WeekHeaderWidthProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader">
            <summary>
            Represents the header for a week in a <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.OnApplyTemplate">
            <summary>
            Invoked when the templated has been applied to the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.MonthViewWeekHeaderAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse operation</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.EndProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.End"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ShowWeekNumbersProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ShowWeekNumbers"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.StartProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.Start"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.WeekNumberProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.WeekNumber"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.End">
            <summary>
            Returns or sets the date that represents the last day of the week.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.EndProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ShowWeekNumbers">
            <summary>
            Returns a boolean indicating whether week numbers should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.ShowWeekNumbersProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.Start">
            <summary>
            Returns or sets the date that represents the start of the week.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.StartProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.WeekNumber">
            <summary>
            Returns or sets the week number of the week that the element represents
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader.WeekNumberProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel">
            <summary>
            A custom panel for arranging the content of an <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.AreaProperty">
            <summary>
            Identifies the Area attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.GetArea(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.SetArea(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.ActivityContentArea)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.GetArea(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached Area DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.AreaProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.SetArea(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.ActivityContentArea)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.SetArea(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.ActivityContentArea)">
            <summary>
            Sets the value of the attached Area DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.AreaProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.GetArea(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaMinWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaMinWidth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.InterAreaSpacingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.InterAreaSpacing"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaAlignment">
            <summary>
            Returns or sets the horizontal alignment of the content area
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaAlignmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaMinWidth">
            <summary>
            Returns or sets the min width for the content area before the prefix and suffix areas will be reduced.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.ContentAreaMinWidthProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.InterAreaSpacing">
            <summary>
            Returns or sets the spacing between the prefix, suffix and content
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityContentPanel.InterAreaSpacingProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleToolTip">
            <summary>
            A custom tooltip for XamSchedule elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleToolTip.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleToolTip"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTimePresenter">
            <summary>
            Custom element for use within a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader"/> that displays the hour and minutes text.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTimePresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTimePresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTimePresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTimePresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDragManager.BeginDrag(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,Infragistics.Controls.Schedules.ScheduleControlBase)">
            <summary>
            Initiates a drag operation for a specific activity
            </summary>
            <param name="activityToDrag">The activity to be dragged</param>
            <param name="isCreatingCopy">True if the initial drag state is to create a copy of the activity; otherwise false to indicate that the source activity will be moved.</param>
            <param name="sourceControl">The control for which the activity is being hosted.</param>
            <returns>Returns true if the drag was started; otherwise false is returned</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDragManager.EndDrag(System.Boolean)">
            <summary>
            Ends the drag operation.
            </summary>
            <param name="cancel">True to cancel the drag; otherwise false to perform the current drop action.</param>
            <returns>Returns a boolean indicating if the drag was performed</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDragManager.EnterInvalidDropLocation">
            <summary>
            Invoked when the mouse has entered an invalid drop location.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDragManager.IsOperationAllowed(Infragistics.Controls.Schedules.ResourceCalendar,System.Boolean)">
            <summary>
            Indicates if the activity being dragged can be moved to the specified calendar.
            </summary>
            <param name="calendar">The target calendar</param>
            <param name="copy">True if the activity would be copied otherwise false if it would be moved</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDragManager.Move(Infragistics.Controls.Schedules.ScheduleControlBase,System.Boolean,Infragistics.Controls.Schedules.ResourceCalendar,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            Invoked when the activity enters a new time range.
            </summary>
            <param name="targetCalendar">The calendar to which the activity should be moved/copied</param>
            <param name="copy">True to perform a copy of the original activity; false to perform a move.</param>
            <param name="localStart">The new local start of the activity</param>
            <param name="localEnd">Optionally the new end of the activity.</param>
            <param name="targetControl">The control that the mouse is over and should be displaying the activity being dragged</param>
            <param name="isTimeZoneNeutral">Optionally the timezone neutral state for the activity</param>
            <returns>Returns true if the move operation was successful</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityDragManager.ActivityBeingDragged">
            <summary>
            The activity being dragged
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityDragManager.ActivityBeingDraggedCopy">
            <summary>
            The copy of the activity that is being displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityDragManager.ControlWithCopy">
            <summary>
            Returns the control that is displaying the activity copy.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityDragManager.DropAction.Invalid">
            <summary>
            The current drop information is not a valid drop point
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityDragManager.DropAction.Move">
            <summary>
            The current drop will result in a move of the activity
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityDragManager.DropAction.Copy">
            <summary>
            The current drop will create a copy of the source activity
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityDragManager.DropAction.Original">
            <summary>
            The current drop will result in a no-op
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleResourceString">
            <summary>
            Class that represents a string resource loaded from the Schedule assembly
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ResourceStringBase">
            <summary>
            Abstract base class that represents a string resource
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ResourceStringBase.ToString">
            <summary>
            Returns the string represenation of this object
            </summary>
            <returns>The <see cref="P:Infragistics.Controls.Primitives.ResourceStringBase.Value"/>  property</returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ResourceStringBase.ResourceName">
            <summary>
            Gets/sets the resource idenifier
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ResourceStringBase.Value">
            <summary>
            Returns the loaded string (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ContentControlWithAutomation">
            <summary>
            A content control that is visible to UI automation
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ContentControlWithAutomation.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Primitives.ContentControlWithAutomation"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Primitives.ContentControlWithAutomation.AutomationControlTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.ContentControlWithAutomation.AutomationControlType"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ContentControlWithAutomation.AutomationControlType">
            <summary>
            Returns or sets the AutomationControlType exposed thru UI automation
            </summary>
            <seealso cref="F:Infragistics.Controls.Primitives.ContentControlWithAutomation.AutomationControlTypeProperty"/>
        </member>
        <member name="T:Infragistics.AutomationPeers.ContentControlWithAutomationPeer">
            <summary>
            The UI automation peer associated with a <see cref="T:Infragistics.Controls.Primitives.ContentControlWithAutomation"/>
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ContentControlWithAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <see cref="T:Infragistics.Controls.Primitives.ContentControlWithAutomation"/>.<see cref="P:Infragistics.Controls.Primitives.ContentControlWithAutomation.AutomationControlType"/> property value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ContentControlWithAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Primitives.ContentControlWithAutomation"/> class
            </summary>
            <returns>A string that contains 'ContentControlWithAutomation'</returns>
        </member>
        <member name="T:Infragistics.Collections.ImmutableCollection`1">
            <summary>
            Represents an immutable collection. Once created, it can not be modified.
            </summary>
            <typeparam name="T">Type of the items in the collection.</typeparam>
            <remarks>
            <para class="body">
            ImmutableCollection's contents cannot be modified. It's different from ReadOnlyCollection in that
            a ReadOnlyCollection's underlying source list can be modified. The source list is the list that you
            pass into the constructor of the collection. ImmutableCollection makes a copy of the source list
            in the constructor 
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Collections.ImmutableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Collections.ImmutableCollection`1"/> class.
            </summary>
            <param name="items">Items to populate the collection with.</param>
        </member>
        <member name="T:Infragistics.Collections.IntKeyArrayMapBase`2">
            <summary>
            Map implementation that uses an array for the storage. The key values are either
            integer or convertible to integer and the integer values and the smallest integer
            value should be no less than 0 and the largest value shouldn't generally be a 
            very large value because the array will be allocated based on the largest value
            encountered.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
        </member>
        <member name="T:Infragistics.Controls.Schedules.IMap`2">
            <summary>
            Used for storing key to value mappings.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
            <remarks>
            <para class="body">
            Enumerating the map will return keys that have values mapped to them.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.IMap`2.Item(`0)">
            <summary>
            Gets or sets the value for the specified key. Returns null if the item doesn't exist.
            </summary>
            <param name="key">Key value.</param>
            <returns>Mapped value.</returns>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMapBase`2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMapBase`2.Clear">
            <summary>
            Clears all values.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMapBase`2.GetIntValue(`0)">
            <summary>
            Gets the integer value of the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMapBase`2.GetKeyValue(System.Int32)">
            <summary>
            Gets the key associated with the specified integer value.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMapBase`2.Enumerator.#ctor(Infragistics.Collections.IntKeyArrayMapBase{`0,`1})">
            <summary>
            Constructor.
            </summary>
            <param name="map">Map whose entries will be enumerated.</param>
        </member>
        <member name="T:Infragistics.Collections.IntKeyArrayMap`2">
            <summary>
            Map implementation that uses an array for the storage. The key values are either
            integer or convertible to integer and the integer values and the smallest integer
            value should be no less than 0 and the largest value shouldn't generally be a 
            very large value because the array will be allocated based on the largest value
            encountered.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMap`2.#ctor(System.Converter{`0,System.Int32},System.Converter{System.Int32,`0})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMap`2.GetIntValue(`0)">
            <summary>
            Gets the integer value of the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Collections.IntKeyArrayMap`2.GetKeyValue(System.Int32)">
            <summary>
            Gets the key associated with the specified integer value.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Collections.DictionaryMap`2">
            <summary>
            Map implementation that uses dictionary for storage.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
        </member>
        <member name="M:Infragistics.Collections.DictionaryMap`2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.MapsFactory.IntMap`1.GetIntValue(System.Int32)">
            <summary>
            Gets the integer value of the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Collections.MapsFactory.IntMap`1.GetKeyValue(System.Int32)">
            <summary>
            Gets the key associated with the specified integer value.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Collections.MapsFactory.IntMap`1.IntEnumerator.#ctor(Infragistics.Collections.MapsFactory.IntMap{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="map">Map whose entries will be enumerated.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarColorScheme">
            <summary>
            Handles coordination of CalendarBrushCaches for ResourceCalendars.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.#ctor">
            <summary>
            Creates a new instance of the CalendarColorScheme class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.BrushVersionPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.BrushVersion"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.BrushVersionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.BrushVersion"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBrushProviderPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBrushProvider"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBrushProviderProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBrushProvider"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrastPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrast"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrastProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrast"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.InvalidateBrushCache">
            <summary>
            Clears all cached brushes and bumps the BrushVersion property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.CreateBrush(Infragistics.Controls.Schedules.Primitives.CalendarBrushId,System.Windows.Media.Color)">
            <summary>
            Creates a Brush based on a specific id
            </summary>
            <param name="id">The id of the brush to create</param>
            <param name="baseColor">The base color to use</param>
            <returns>The brush to se for the specified id</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.CreateDialogResources">
            <summary>
            Creates a ResourceDictionary that contains resources to be used by the dialogs
            </summary>
            <returns>A ResourceDictionary or null. The default implmentation returns null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.OnSystemColorsChanged">
            <summary>
            Called when the system colors have changed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarColorScheme.VerifyDialogResources">
            <summary>
            Makes sure that the dialog resources dictonary is polpulated correctly
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: this method is always called from the get of DialogResources property. This gives derived classes an opportunity to update the contents before a dialog is shown.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.BaseColors">
            <summary>
            Returns a read-only collection of the base colors that are supported.
            </summary>
            
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.BrushVersion">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBrushProvider">
            <summary>
            Returns the default provider. (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.DialogResources">
            <summary>
            Returns a collection of resources to be merged into the dialogs (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>:</para> it is the responsiblity of the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DialogFactory"/> to make use of these resources.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrast">
            <summary>
            Gets whether controls should be rendered in high contrast based on the current system settings (read-only).
            </summary>
            <remarks>The conditions to determine this are consistent with Office2007 and Office2010.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.DefaultBaseColor">
            <summary>
            Returns the base color to use for the default provider.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.ScrollBarStyle">
            <summary>
            Returns a scrollbar style or null (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarColorScheme.IsHighContrastStatic">
            <summary>
            Gets whether the system should render controls with high contrast.
            </summary>
            <remarks>The conditions to determine this are consistant with Office2007.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.OfficeColorSchemeBase">
            <summary>
            Handles coordination of CalendarBrushProviders for Office color schemes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OfficeColorSchemeBase.CreateBrush(Infragistics.Controls.Schedules.Primitives.CalendarBrushId,System.Windows.Media.Color)">
            <summary>
            Creates a Brush based on a specific id
            </summary>
            <param name="id">The id of the brush to create</param>
            <param name="baseColor">The base color to use</param>
            <returns>The brush to se for the specified id</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OfficeColorSchemeBase.CreateDialogResources">
            <summary>
            Creates a ResourceDictionary that contains resources to be used by the dialogs
            </summary>
            <returns>A ResourceDictionary or null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OfficeColorSchemeBase.VerifyDialogResources">
            <summary>
            Makes sure that the dialog resources dictonary is polpulated correctly
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: this method is always called from the get of DialogResources property. This gives derived classes an opportunity to update the contents before a dialog is shown.</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OfficeColorSchemeBase.OfficeColorSchemeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.OfficeColorSchemeBase.OfficeColorScheme"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OfficeColorSchemeBase.BaseColors">
            <summary>
            Returns a read-only collection of the base colors that are supported.
            </summary>
            
        </member>
        <member name="P:Infragistics.Controls.Schedules.OfficeColorSchemeBase.DefaultBaseColor">
            <summary>
            Returns the base color to use for the default provider.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.OfficeColorSchemeBase.OfficeColorScheme">
            <summary>
            Determines the overall color scheme to use for all controls
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.OfficeColorSchemeBase.OfficeColorSchemeProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Office2007ColorScheme">
            <summary>
            Handles coordination of CalendarBrushProviders for Office 2007 color schemes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Office2010ColorScheme">
            <summary>
            Handles coordination of CalendarBrushProviders for Office 2010 color schemes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Office2010ColorScheme.ScrollBarStyle">
            <summary>
            Returns a scrollbar style or null (read-only).
            </summary>
        </member>
        <member name="F:Infragistics.ConverterInfo._targetValueType">
            <summary>
            Type of the converted values. Used as the target type for the Convert method.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.MetadataPropertyValueStore">
            <summary>
            Used to store extra field values.
            </summary>
            <remarks>
            <para class="body">
            You can use the <b>Metadata</b> to store and later retrieve information. The information is stored in
            properties of your data items as specified in the <see cref="T:Infragistics.MetadataPropertyMappingCollection"/>.
            For example, the metadata property mappings is specified using the <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>'s
            <see cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            property. Each property defined in the mapping collection has a corresponding entry in the returned MetadataPropertyValueStore.
            It's indexer is used to retrieve or set the the property's value. Furthermore, you can use bindings to
            bind to a specific value in the returned object.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.MetadataPropertyMappingCollection"/>
            <seealso cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.Metadata"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ResourceCalendar.Metadata"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataPropertyValueStore.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Stores the specified entry's Value using the entry's Key as the key.
            </summary>
            <param name="entry">Contains 'key' and 'value'.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataPropertyValueStore.GetEnumerator">
            <summary>
            Returns the enumerator to enumerate values of the store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataPropertyValueStore.GetValue(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">String that identifies the key.</param>
            <returns>Value associated with the key. If no such value exists, returns null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataPropertyValueStore.SetValue(System.String,System.Object)">
            <summary>
            Sets the specified value for the speicifed key.
            </summary>
            <param name="key">String that identifies the key.</param>
            <param name="value">Value to associate with the key.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.MetadataPropertyValueStore.Item(System.String)">
            <summary>
            Gets or sets the value.
            </summary>
            <param name="key">Key associated with the value.</param>
            <returns>Gets the value for the specified key or null if the value doesn't exist for the key.</returns>
            <remarks>
            <para class="body">
            <b>NOTE:</b> If the underlying metadata field mapping doesn't exist for the specified 'key' then an exception is thrown.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Index`2.#ctor(System.Collections.Generic.IList{`0},System.Converter{`0,`1},System.Collections.Generic.IComparer{`1},System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            Constructor.
            </summary>
            <param name="items">Items to be indexed.</param>
            <param name="keyGetter">Gets the key value from an item.</param>
            <param name="keyComparer">Comparer used for comparing key values.</param>
            <param name="itemsChangedCallback">If specified, it's invoked when a collection change notification is 
            recieved from the items list, after the index has been modified to reflect the change.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Index`2.GetAnyMatchingItem(`1)">
            <summary>
            Gets any matching item. If a single matching item exists, returns that. If multiple matching
            items exist then this method may return any one of them.
            </summary>
            <param name="key">The key value.</param>
            <returns>Matching item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Index`2.GetMatchingItems(`1)">
            <summary>
            Gets all the matching items.
            </summary>
            <param name="key">The key value.</param>
            <returns>All the matching items.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataStore`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.MetadataStore`1.EntryInfo.#ctor(Infragistics.Controls.Schedules.MetadataStore{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XmlDeserializerConverter.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="valueType"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._xmlValueStore">
            <summary>
            This is where the XML as string is stored.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._xmlNeedUpdating">
            <summary>
            When an individual property value is set, we need to update the XML. However we don't want to do it
            right away so we'll keep track of items whose XML value needs to be updated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._xmlUpdateList">
            <summary>
            This is a list of items that need to have their XML synchronized with the property values.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._updateXmlOperation">
            <summary>
            The operation used to asynchronously update XML.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._propertyValuesNeedUpdating">
            <summary>
            When we get a notification from the data source indicating that the field where the XML is stored
            has changed, we need to parse it and update individual property values. This keeps track of such
            items where the property values need to be updated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._xmlValueListener">
            <summary>
            Listener for xml value property store.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._propertyValueListener">
            <summary>
            Listner for property value stores.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._inUpdateXmlValue">
            <summary>
            Used to make sure we don't synchronize property values to XML when we are the one updating the XML value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._inUpdatePropertyValues">
            <summary>
            Used to make sure we don't synchronize XML to property values when we are in the process of synchronizing property values to XML.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._serializer">
            <summary>
            Used to save and parse XML.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XmlDictionaryStorage`1._storesMap">
            <summary>
            This is where individual values from the XML are cached. This is because we don't want to 
            parse the XML every time a value is retrieved or re-create XML every time a value is set.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XmlDictionaryStorage`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.ViewItemManager`1.#ctor(Infragistics.IFieldValueAccessor,Infragistics.Controls.Schedules.DataListEventListener)">
            <summary>
            Constructor.
            </summary>
            <param name="idField">Used for accessing id field values of data items.</param>
            <param name="dataListEventListener">Used for hooking into data items for property change notifications.</param>
        </member>
        <member name="M:Infragistics.ViewItemManager`1.UpdateResultDataList_Add(System.Collections.IList,System.Object,System.Boolean,System.Boolean)">
            <summary>
            This method is called whenever we get an add notification from the data source to update an individual query
            result list with the added item. It is also called whenever an item's property value changes and query criteria
            is re-evaluated and the item is to be added to a matching result data list. Note that at this point the query 
            criteria is already evaluated and determined that the added item should be in the result data list.
            </summary>
            <param name="resultDataList">Query result's list, which contains the data items.</param>
            <param name="dataItem">Data item that is to be added.</param>
            <param name="checkIfAlreadyExists">Whether to check if the item already exists in the result data list.</param>
            <param name="replaceExistingItem">If there's an existing item with the same id value then this parameter specifies
            whether to replace it with the passed in one or leave the original item there and do nothing.</param>
        </member>
        <member name="M:Infragistics.ViewItemManager`1.UpdateResultDataList_Remove(System.Collections.IList,System.Object)">
            <summary>
            Called to remove the specified data item from the result data list.
            </summary>
            <param name="resultDataList">Query result's list, which contains the data items.</param>
            <param name="dataItem">Data item that is to be removed.</param>
        </member>
        <member name="T:Infragistics.PropertyMappingBase`1">
            <summary>
            Contains information regarding a specific property of the underlying data object 
            and which property of the associated view object that data object property is 
            mapped to.
            </summary>
            <typeparam name="TKey">
            Either an enum that enumerates the properties of the view object or string that 
            identifies the property or the metadata key when used by the 
            <see cref="T:Infragistics.MetadataPropertyMapping"/>.
            </typeparam>
        </member>
        <member name="M:Infragistics.PropertyMappingBase`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.PropertyMappingBase`1.ScheduleProperty">
            <summary>
            Identifies a property on the XamSchedule object.
            </summary>
            <remarks>
            <b>ScheduleProperty</b> identifies a property on the XamSchedule object, like Apppointment or Resource.
            </remarks>
        </member>
        <member name="P:Infragistics.PropertyMappingBase`1.DataObjectProperty">
            <summary>
            Specifies the property of the data objects in the data source.
            </summary>
            <remarks>
            <para class="body">
            The value of this property of a data source object will be used for 
            the associated view object's property. The view object's property is
            specified using the appropriate property exposed by the view object
            specific mapping class derived from this class. For example, in the case
            of <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping"/>, <i>AppointmentPropertyMapping</i>'s
            <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/> identifies 
            the property of the data objects in the 
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>.
            <i>AppointmentPropertyMapping</i>'s <see cref="P:Infragistics.Controls.Schedules.AppointmentPropertyMapping.AppointmentProperty"/>
            identifies the property of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object, including properties
            of its base class <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>, that this data object property maps to.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.AppointmentPropertyMapping.AppointmentProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.JournalPropertyMapping.JournalProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.TaskPropertyMapping.TaskProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ResourcePropertyMapping.ResourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping.ResourceCalendarProperty"/>
        </member>
        <member name="P:Infragistics.PropertyMappingBase`1.Converter">
            <summary>
            Specifies the converter to use when converting between the schedule property's value
            and the data object's property's value.
            </summary>
            <remarks>
            <para class="body">
            Converter's Convert method is used when copying value from the data source to the 
            schedule property. ConvertBack method is used when copying value from the schedule 
            property to the data source, which happens when the schedule property's value is 
            modified, for example by the user via appointment modification dialog.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ConverterParameter"/>
        </member>
        <member name="P:Infragistics.PropertyMappingBase`1.ConverterParameter">
            <summary>
            Specifies the converter parameter that will be passed in the Convert and ConvertFrom methods of
            the <see cref="P:Infragistics.PropertyMappingBase`1.Converter"/>. If null then the underlying data item will be passed.
            </summary>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.Converter"/>
        </member>
        <member name="T:Infragistics.MetadataPropertyMapping">
            <summary>
            Used for mapping a field in the data source to an entry in the Metadata dictionary.
            </summary>
            <remarks>
            <para class="body">
            <b>MetadataPropertyMapping</b> used by the <see cref="T:Infragistics.MetadataPropertyMappingCollection"/>.
            MetadataPropertyMapping objects in the collection are used to populate the 
            metadata dictionary of the associated schedule object (for example the 
            <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/> dictionary of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object).
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.MetadataPropertyMapping.MetadataProperty">
            <summary>
            Specifies the key in the Metadata dictionary.
            </summary>
        </member>
        <member name="T:Infragistics.IPropertyMappingCollection`1">
            <summary>
            This is used by ListManager.
            </summary>
            <typeparam name="TKey">Property key type.</typeparam>
        </member>
        <member name="T:Infragistics.PropertyMappingCollection`2">
            <summary>
            Base class for various field mapping collections used for specifying which field in the 
            schedule object points to which field in the data source.
            </summary>
            <typeparam name="TKey">
            Either an enum that enumerates the properties of the schedule object (for example when 
            used by the <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection"/>) or string that identifies 
            the metadata key when used by the <see cref="T:Infragistics.MetadataPropertyMapping"/>.
            </typeparam>
            <typeparam name="TMapping">
            A <see cref="T:Infragistics.PropertyMappingBase`1"/> derived class.
            </typeparam>
        </member>
        <member name="M:Infragistics.PropertyMappingCollection`2.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.PropertyMappingCollection`2"/>.
            </summary>
        </member>
        <member name="M:Infragistics.PropertyMappingCollection`2.CreateNew(`0,System.String)">
            <summary>
            Creates a new instance of mapping object that's compatible with this collection.
            </summary>
            <param name="key">Identifies the schedule property or metadata key depending on whether 
            this mappings collection is for a schedule class (like Appointment) or for metadata dictionary.</param>
            <param name="value">The name of the field in the underlying data source.</param>
            <returns>New instance of mapping object that's compatible with this collection.</returns>
        </member>
        <member name="M:Infragistics.PropertyMappingCollection`2.RaisePropertyChangedEvent(System.String)">
            <summary>
            Raises PropertyChanged event.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Infragistics.PropertyMappingCollection`2.GetItem(`0)">
            <summary>
            Gets the <typeparamref name="TMapping"/> instance associated with the specified key.
            </summary>
            <param name="key">Identifies the property.</param>
            <returns>If a mapping for the specified key has been specified, returns the mapping object. Otherwise returns null.</returns>
        </member>
        <member name="M:Infragistics.PropertyMappingCollection`2.Remove(`0)">
            <summary>
            Removes the mapping for the specified key.
            </summary>
            <param name="key">Key of the mapping to remove from the collection.</param>
            <returns>True if the item was found and removed. False if the item wasn't found.</returns>
            <remarks>
            <para class="body">
            If the mapping doesn't existing in the collection, this method will do nothing.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.PropertyMappingCollection`2.Item(`0)">
            <summary>
            Returns the data member to which the specified schedule property or metadata entry is mapped to.
            </summary>
            <param name="key">Identifies the schedule property or metadata entry.</param>
            <returns>The data member or null if the mapping for the specified key has not been specified yet.</returns>
        </member>
        <member name="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings">
            <summary>
            Used for defining metadata field mappings.
            </summary>
            <remarks>
            <para class="body">
            <b>MetadataPropertyMappings</b> property is used to specify fields from which 
            the Metadata (<see cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/>) dictionary will be populated
            (as well as saved). An entry for each of the fields specified in this collection 
            will be created in the Metadata dictionary of the associated object. This can 
            be used in conjuction with a Metadata field mapping entry in the containing field 
            mapping collection in which case all the entries in the Metadata dictionary will
            be saved to and retrieved from that field except for the entries for which an 
            explicit mapping has been defined in the collection returned by this property. 
            </para>
            <para class="body">
            For example, let's say
            you have "A", "B" and "C" entries in the Metadata dictionary. You define an entry
            in the containining <see cref="T:Infragistics.PropertyMappingCollection`2"/> that specifies that the
            Metadata dictionary will be saved and retrieved from "Meta" field. You also define 
            an entry for "C" in the collection returned by this property. In such a scenario, the
            "A" and "B" values of the Metadata dictionary will be saved to the "Meta" field
            in the form of an XML document and the value of the "C" entry will be saved to
            the field specified by the associated mapping in the MetadataPropertyMappings collection.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.PropertyMappingCollection`2.UseDefaultMappings">
            <summary>
            Specifies whether to use default mappings.
            </summary>
            <remarks>
            <para class="body">
            <b>UseDefaultMappings</b> property is used to automatically map fields in the data source.
            The name of the field in the data source is expected be the same as the name of the 
            member of the enum that enumerates the fields of the associated object whose member mappings
            are being provided (for example the <see cref="T:Infragistics.Controls.Schedules.AppointmentProperty"/> enum).
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.MetadataPropertyMappingCollection">
            <summary>
            Collection used for specifying fields whose values will be added to the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/> dictionary.
            </summary>
            <remarks>
            <para class="body">
            <b>MetadataPropertyMappingCollection</b> class is used by the <see cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            property. The underlying <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived instance created from a data item in the data source for
            which these mappings are for will have its <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/> dictionary populated with values
            from fields that are specified in this mappings collection. Changes to the Metadata dictionary will also be posted
            back to the data source based on these mappings.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.PropertyMappingCollection`2.MetadataPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/>
        </member>
        <member name="M:Infragistics.MetadataPropertyMappingCollection.Add(System.String,System.String)">
            <summary>
            Adds mapping for the metadata entry whose key is 'metadataKey'.
            </summary>
            <param name="metadataKey">Identifies the key of the entry in the associated schedule object's <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Metadata"/> dictionary.</param>
            <param name="dataSourceField">The data member in the data source.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityProperty">
            <summary>
            Lists some properties that are common across all activity types.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.None">
            <summary>
            Designates a default value that doesn't map to any property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.OwningResourceId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningResourceId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.OwningCalendarId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendarId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Start">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.End">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.IsTimeZoneNeutral">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral"/> property.
            </summary>		
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.StartTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.StartTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.EndTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.EndTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Subject">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Recurrence">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.RecurrenceVersion">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RecurrenceVersion"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.MaxOccurrenceDateTime">
            <summary>
            Identifies the property that contains the maximum date when the last of the occurrences
            can occur. This is used as an optimization when querying for recurring activities to
            limit the number of recurrences that have to be included in the result.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.RootActivityId">
            <summary>
            Applies to variance of a recurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.OriginalOccurrenceStart">
            <summary>
            Applies to variance of a recurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.OriginalOccurrenceEnd">
            <summary>
            Applies to variance of a recurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.IsOccurrenceDeleted">
            <summary>
            Applies to variance of a recurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.VariantProperties">
            <summary>
            Applies to variance of a recurrence. Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.VariantProperties"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.ReminderInterval">
            <summary>
            Applies to appointments and tasks. Doesn't apply to journals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.ReminderEnabled">
            <summary>
            Applies to appointments and tasks. Doesn't apply to journals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.Reminder">
            <summary>
            Applies to appointments and tasks. Doesn't apply to journals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.LastModifiedTime">
            <summary>
            The time when the activity was last modified.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AppointmentProperty">
            <summary>
            Lists <see cref="T:Infragistics.Controls.Schedules.Appointment"/> properties that can be mapped to underlying data source.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.OwningResourceId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningResourceId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.OwningCalendarId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendarId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Start">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.End">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.StartTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.StartTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.EndTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.EndTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.IsTimeZoneNeutral">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Subject">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Location">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Appointment.Location"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.ReminderInterval">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.ReminderEnabled">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Reminder">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Reminder"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.IsLocked">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsLocked"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.Recurrence">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.RecurrenceVersion">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RecurrenceVersion"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.RootActivityId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivityId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.OriginalOccurrenceStart">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceStart"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.OriginalOccurrenceEnd">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceEnd"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.IsOccurrenceDeleted">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrenceDeleted"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.VariantProperties">
            <summary>
            Applies to variance of a recurrence. Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.VariantProperties"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.MaxOccurrenceDateTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.MaxOccurrenceDateTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.LastModifiedTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.LastModifiedTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.JournalProperty">
            <summary>
            Lists <see cref="T:Infragistics.Controls.Schedules.Journal"/> properties that can be mapped to underlying data source.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.OwningResourceId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningResourceId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.OwningCalendarId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendarId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Start">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.End">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.StartTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.StartTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.EndTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.EndTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.IsTimeZoneNeutral">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Subject">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.ReminderInterval">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.ReminderEnabled">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Reminder">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Reminder"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.IsLocked">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsLocked"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.RootActivityId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivityId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.OriginalOccurrenceStart">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceStart"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.OriginalOccurrenceEnd">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceEnd"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.IsOccurrenceDeleted">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrenceDeleted"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.VariantProperties">
            <summary>
            Applies to variance of a recurrence. Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.VariantProperties"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.Recurrence">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.RecurrenceVersion">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RecurrenceVersion"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.MaxOccurrenceDateTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.MaxOccurrenceDateTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.LastModifiedTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.LastModifiedTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.JournalProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceProperty">
            <summary>
            Lists <see cref="T:Infragistics.Controls.Schedules.Resource"/> properties that can be mapped to underlying data source.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.IsLocked">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.IsLocked"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.Name">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.Name"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.EmailAddress">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.PrimaryCalendarId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendarId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.PrimaryTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.PrimaryTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.FirstDayOfWeek">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.FirstDayOfWeek"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.DaysOfWeek">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.DaySettingsOverrides">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCalendarProperty">
            <summary>
            Lists <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> properties that can be mapped to underlying data source.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Resource.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.OwningResourceId">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResourceId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.Name">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.Name"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.BaseColor">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.BaseColor"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceCalendarProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TaskProperty">
            <summary>
            Lists <see cref="T:Infragistics.Controls.Schedules.Task"/> properties that can be mapped to underlying data source.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Id">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Id"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.OwningResourceId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningResourceId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.OwningCalendarId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningCalendarId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Start">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.End">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.StartTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.StartTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.EndTimeZoneId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.EndTimeZoneId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.IsTimeZoneNeutral">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsTimeZoneNeutral"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Subject">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Subject"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Description">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Description"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.ReminderInterval">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderInterval"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.ReminderEnabled">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Reminder">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Reminder"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.PercentageComplete">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.Task.PercentComplete"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.IsVisible">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.IsLocked">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsLocked"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.RootActivityId">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RootActivityId"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.OriginalOccurrenceStart">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceStart"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.OriginalOccurrenceEnd">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OriginalOccurrenceEnd"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.IsOccurrenceDeleted">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.IsOccurrenceDeleted"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.VariantProperties">
            <summary>
            Applies to variance of a recurrence. Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.VariantProperties"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.Recurrence">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Recurrence"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.RecurrenceVersion">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.RecurrenceVersion"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.MaxOccurrenceDateTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.MaxOccurrenceDateTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.LastModifiedTime">
            <summary>
            Identifies <see cref="P:Infragistics.Controls.Schedules.ActivityBase.LastModifiedTime"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.TaskProperty.UnmappedProperties">
            <summary>
            Used to store data for any unmapped properties. The data will be stored as XML.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping">
            <summary>
            Used for mapping a field in the data source to a property of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>AppointmentPropertyMapping</b> object contains information regarding a specific field in the
            data source specified by the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>
            and which property of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object it maps to. The property of the
            <i>Appointment</i> object is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            property and the field in the data source is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.AppointmentPropertyMapping.AppointmentProperty">
            <summary>
            Identifies a property of <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </summary>
            <remarks>
            <b>AppointmentProperty</b> identifies a property of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.JournalPropertyMapping">
            <summary>
            Used for mapping a field in the data source to a property of the <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>JournalPropertyMapping</b> object contains information regarding a specific field in the
            data source specified by the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/>
            and which property of the <see cref="T:Infragistics.Controls.Schedules.Journal"/> object it maps to. The property of the
            <i>Journal</i> object is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            property and the field in the data source is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.JournalPropertyMapping.JournalProperty">
            <summary>
            Identifies a property of <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </summary>
            <remarks>
            <b>JournalProperty</b> identifies a property of the <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourcePropertyMapping">
            <summary>
            Used for mapping a field in the data source to a property of the <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourcePropertyMapping</b> object contains information regarding a specific field in the
            data source specified by the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/>
            and which property of the <see cref="T:Infragistics.Controls.Schedules.Resource"/> object it maps to. The property of the
            <i>Resource</i> object is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            property and the field in the data source is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourcePropertyMapping.ResourceProperty">
            <summary>
            Identifies a property of <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </summary>
            <remarks>
            <b>ResourceProperty</b> identifies a property of the <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping">
            <summary>
            Used for mapping a field in the data source to a property of the <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourceCalendarPropertyMapping</b> object contains information regarding a specific field in the
            data source specified by the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSource"/>
            and which property of the <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object it maps to. The property of the
            <i>ResourceCalendar</i> object is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            property and the field in the data source is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping.ResourceCalendarProperty">
            <summary>
            Identifies a property of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
            <remarks>
            <b>ResourceCalendarProperty</b> identifies a property of the <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TaskPropertyMapping">
            <summary>
            Used for mapping a field in the data source to a property of the <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>TaskPropertyMapping</b> object contains information regarding a specific field in the
            data source specified by the <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/>
            and which property of the <see cref="T:Infragistics.Controls.Schedules.Task"/> object it maps to. The property of the
            <i>Task</i> object is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            property and the field in the data source is identified by the <see cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.ScheduleProperty"/>
            <seealso cref="P:Infragistics.PropertyMappingBase`1.DataObjectProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TaskPropertyMapping.TaskProperty">
            <summary>
            Identifies a property of <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </summary>
            <remarks>
            <b>TaskProperty</b> identifies a property of the <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection">
            <summary>
            Collection used for specifying field mappings for <see cref="T:Infragistics.Controls.Schedules.Appointment"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>AppointmentPropertyMappingCollection</b> class is used by the <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>'s
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/> property. It's a collection
            of <see cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping"/> objects where each <i>AppointmentPropertyMapping</i> object provides a 
            mapping for a property of <see cref="T:Infragistics.Controls.Schedules.Appointment"/> class to the field in the appointments data source.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.AppointmentItemsSource"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.RecurringAppointmentItemsSource"/>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentPropertyMapping"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.AppointmentPropertyMappingCollection.Add(Infragistics.Controls.Schedules.AppointmentProperty,System.String)">
            <summary>
            Adds mapping for the specified appointment property.
            </summary>
            <param name="appointmentProperty">Identifies the property of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> class.</param>
            <param name="dataObjectProperty">The name of the property in the underlying data source object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.JournalPropertyMappingCollection">
            <summary>
            Collection used for specifying field mappings for <see cref="T:Infragistics.Controls.Schedules.Journal"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>JournalPropertyMappingCollection</b> class is used by the <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>'s
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/> property. It's a collection
            of <see cref="T:Infragistics.Controls.Schedules.JournalPropertyMapping"/> objects where each <i>JournalPropertyMapping</i> object provides a 
            mapping for a property of <see cref="T:Infragistics.Controls.Schedules.Journal"/> class to the field in the journals data source.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.JournalItemsSource"/>
            <seealso cref="T:Infragistics.Controls.Schedules.JournalPropertyMapping"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.JournalPropertyMappingCollection.Add(Infragistics.Controls.Schedules.JournalProperty,System.String)">
            <summary>
            Adds mapping for the specified journal property.
            </summary>
            <param name="journalProperty">Identifies the property of the <see cref="T:Infragistics.Controls.Schedules.Journal"/> class.</param>
            <param name="dataObjectProperty">The name of the property in the underlying data source object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourcePropertyMappingCollection">
            <summary>
            Collection used for specifying field mappings for <see cref="T:Infragistics.Controls.Schedules.Resource"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourcePropertyMappingCollection</b> class is used by the <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>'s
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/> property. It's a collection
            of <see cref="T:Infragistics.Controls.Schedules.ResourcePropertyMapping"/> objects where each <i>ResourcePropertyMapping</i> object provides a 
            mapping for a property of <see cref="T:Infragistics.Controls.Schedules.Resource"/> class to the field in the resources data source.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourcePropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceItemsSource"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourcePropertyMapping"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourcePropertyMappingCollection.Add(Infragistics.Controls.Schedules.ResourceProperty,System.String)">
            <summary>
            Adds mapping for the specified resource property.
            </summary>
            <param name="resourceProperty">Identifies the property of the <see cref="T:Infragistics.Controls.Schedules.Resource"/> class.</param>
            <param name="dataObjectProperty">The name of the property in the underlying data source object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMappingCollection">
            <summary>
            Collection used for specifying field mappings for <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>ResourceCalendarPropertyMappingCollection</b> class is used by the <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>'s
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings"/> property. It's a collection
            of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping"/> objects where each <i>ResourceCalendarPropertyMapping</i> object provides a 
            mapping for a property of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> class to the field in the resource calendars data source.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.ResourceCalendarItemsSource"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendarPropertyMapping"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendarPropertyMappingCollection.Add(Infragistics.Controls.Schedules.ResourceCalendarProperty,System.String)">
            <summary>
            Adds mapping for the specified resource calendar property.
            </summary>
            <param name="resourceCalendarProperty">Identifies the property of the <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> class.</param>
            <param name="dataObjectProperty">The name of the property in the underlying data source object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.TaskPropertyMappingCollection">
            <summary>
            Collection used for specifying field mappings for <see cref="T:Infragistics.Controls.Schedules.Task"/> object.
            </summary>
            <remarks>
            <para class="body">
            <b>TaskPropertyMappingCollection</b> class is used by the <see cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>'s
            <see cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/> property. It's a collection
            of <see cref="T:Infragistics.Controls.Schedules.TaskPropertyMapping"/> objects where each <i>TaskPropertyMapping</i> object provides a 
            mapping for a property of <see cref="T:Infragistics.Controls.Schedules.Task"/> class to the field in the tasks data source.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskPropertyMappings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ListScheduleDataConnector.TaskItemsSource"/>
            <seealso cref="T:Infragistics.Controls.Schedules.TaskPropertyMapping"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TaskPropertyMappingCollection.Add(Infragistics.Controls.Schedules.TaskProperty,System.String)">
            <summary>
            Adds mapping for the specified task property.
            </summary>
            <param name="taskProperty">Identifies the property of the <see cref="T:Infragistics.Controls.Schedules.Task"/> class.</param>
            <param name="dataObjectProperty">The name of the property in the underlying data source object.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.#ctor(System.Collections.IEnumerable,System.Type)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.LinqQueryManager"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.DoesItemMatch(System.Object,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition)">
            <summary>
            Returns true if the specified item matches the specified condition.
            </summary>
            <param name="item"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.PerformQuery(Infragistics.Controls.Schedules.LinqQueryManager.ILinqStatement)">
            <summary>
            Performs query on the list and returns the results.
            </summary>
            <param name="linqStatement">Specifies the query criteria.</param>
            <returns>Results of the query.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.AndHelper(Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition)">
            <summary>
            Creates a new condition that combines the specified two conditions using logical <i>And</i> operator.
            If x or y is null then returns the non-null condition without creating a new condition.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.AndHelper(Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition)">
            <summary>
            Creates a new condition that combines the specified three conditions using logical <i>And</i> operator.
            If a condition is null then combines the other non-null conditions.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.GetTypedEnumerable(System.Collections.IEnumerable)">
            <summary>
            If the specified list is not a generic IEnumerable&lt;T&gt; where T is the same type or a derived type as the this.List element type,
            then creates a this.List element type typed enumerable instance that wraps the specified list.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.GetListElementType(System.Collections.IEnumerable)">
            <summary>
            Returns the list element type.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.OrHelper(Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition)">
            <summary>
            Creates a new condition that combines the specified two conditions using logical <i>Or</i> operator.
            If x or y is null then returns the non-null condition without creating a new condition.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.OrHelper(Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition)">
            <summary>
            Creates a new condition that combines the specified three conditions using logical <i>Or</i> operator.
            If a condition is null then combines the other non-null conditions.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.PerformQuery(System.Collections.IEnumerable,Infragistics.Controls.Schedules.LinqQueryManager.ILinqStatement)">
            <summary>
            Performs query on the specified list and returns the results.
            </summary>
            <param name="list">List to perform the query against. Note that the list
            must contain the same types of items as the list associated with this query manager.</param>
            <param name="linqQuery">Specifies the query criteria.</param>
            <returns>Results of the query.</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.LinqQueryManager.List">
            <summary>
            Gets the associated list against which the queries will be done.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.LinqQueryManager.ListItemType">
            <summary>
            Gets the type of items in the list.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.LinqQueryManager.LinqInstructionBase">
            <summary>
            Base class for linq instructions like OrderBy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.LinqInstructionBase.#ctor(Infragistics.Controls.Schedules.LinqQueryManager.ILinqStatement)">
            <summary>
            Constructor.
            </summary>
            <param name="innerStatement">Inner statement.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.LinqInstructionOrderBy.#ctor(System.String,Infragistics.Controls.Schedules.LinqQueryManager.ILinqStatement,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="fieldName">Name of the field that's to be ordered by.</param>
            <param name="innerStatement">Inner statement.</param>
            <param name="descending">Whether to order descending or ascending.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.LinqInstructionFirstOrLast.#ctor(System.Boolean,System.Boolean,Infragistics.Controls.Schedules.LinqQueryManager.ILinqCondition,Infragistics.Controls.Schedules.LinqQueryManager.ILinqStatement)">
            <summary>
            Constructor.
            </summary>
            <param name="first">Whether to get the first element or the last element.</param>
            <param name="orDefault">If true then null is returned if there are no elements. If false, an exception is raised
            if there are no elements.</param>
            <param name="condition">Filter condition.</param>
            <param name="innerStatement">Inner statement.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.LinqExpressionBinary.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lhsField">LHS field.</param>
            <param name="rhsField">RHS field.</param>
            <param name="binaryOperator">Binary operator.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.LinqQueryManager.LinqExpressionConstant.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="value">LHS field.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.LinqQueryManager.LinqConditionGroup.LogicalOperator">
            <summary>
            Gets or sets the logical operator with which the conditions are to be combined. Default value is 'And'.
            </summary>
        </member>
        <member name="T:Infragistics.CollectionSerializationInfo`2">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a collection type.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityQuery">
            <summary>
            Represents an activity query.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityQuery</b> class is used to specify the query criteria when using 
            <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/> method.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.#ctor(Infragistics.Controls.Schedules.ActivityTypes,Infragistics.DateRange,System.Collections.Generic.IEnumerable{Infragistics.Controls.Schedules.Resource})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>.
            </summary>
            <param name="activityTypesToQuery">Types of activities to query.</param>
            <param name="dateRange">Activities within this date range will be queried.</param>
            <param name="resources">Activities belonging to primary calendars of these resources will be queried.
            If null then all activities within the specified date range will be queried.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.#ctor(Infragistics.Controls.Schedules.ActivityTypes,Infragistics.DateRange,System.Collections.Generic.IEnumerable{Infragistics.Controls.Schedules.ResourceCalendar})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>.
            </summary>
            <param name="activityTypesToQuery">Types of activities to query.</param>
            <param name="dateRange">Activities within this date range will be queried.</param>
            <param name="calendars">Activities belonging to these calendars will be queried.
            If null then all activities within the specified date range will be queried.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.#ctor(Infragistics.Controls.Schedules.ActivityTypes,Infragistics.DateRange,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>.
            </summary>
            <param name="activityTypesToQuery">Types of activities to query.</param>
            <param name="dateRange">Activities within this date range will be queried.</param>
            <param name="calendar">Activities belonging to this calendar will be queried.
            If null then all activities within the specified date range will be queried.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.#ctor(Infragistics.Controls.Schedules.ActivityTypes,System.Collections.Generic.IEnumerable{Infragistics.DateRange},System.Collections.Generic.IEnumerable{Infragistics.Controls.Schedules.ResourceCalendar})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>.
            </summary>
            <param name="activityTypesToQuery">Types of activities to query.</param>
            <param name="dateRanges">One or more DateRange objects. Activities within these date ranges will be queried.</param>
            <param name="calendars">Activities belonging to these calendars will be queried.
            If null then all activities within the specified date ranges will be queried.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityQuery.Seal">
            <summary>
            Once an activity query has been sealed, it can't be modified.
            </summary>
            <remarks>
            <para class="body">
            <i>ActivityQuery</i> object sealed from further modifications when the query is performed
            and associated with an <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object. Any attempt to modify the
            activity query afterwards will result in an InvalidOperationException.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQuery.ActivityTypesToQuery">
            <summary>
            Specifies which activity types to query for - whether appointments, journals, tasks or a combination of these activity types.
            </summary>
            <remarks>
            <b>ActivityTypesToQuery</b> property specifies what type of activities to get. <b>ActivityTypes</b> enum is a flagged enum
            allowing you to specify a combination of activity types.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQuery.Calendars">
            <summary>
            Specifies the calendars for which to get the activities. If null then activities for
            all the calendars will be returned.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges">
            <summary>
            Specifies one or more date ranges.
            </summary>
            <remarks>
            <para class="body">
            This query will return activities occurring within these date ranges.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation">
            <summary>
            Specifies the information that's to be queried.
            </summary>
            <remarks>
            <para class="body">
            <b>RequestedInformation</b> property specifies what information to retrieve when the query is performed.
            <see cref="T:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags"/> enum is a flagged enum and therefore you can specify multiple
            pieces of information to be retrieved.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.CancelOperationResult">
            <summary>
            Represents the result of a cancel operation of a pending operation.
            </summary>
            <remarks>
            <para class="body">
            <b>CancelOperationResult</b> is used by the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelPendingOperation(Infragistics.OperationResult)"/>
            method to return the status of the cancelation operation.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.CancelOperationResult.#ctor(Infragistics.OperationResult)">
            <summary>
            Constructor.
            </summary>
            <param name="operation">Pending operation which is being canceled.</param>
        </member>
        <member name="M:Infragistics.CancelOperationResult.#ctor(Infragistics.OperationResult,Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="operation">Pending operation which is being canceled.</param>
            <param name="error">Error info if any.</param>
            <param name="isComplete">Specifies whether the operation is complete.</param>
        </member>
        <member name="M:Infragistics.CancelOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Initializes the <see cref="P:Infragistics.OperationResult.Error"/> and 
            <see cref="P:Infragistics.OperationResult.IsComplete"/> properties based on the specified values.
            </summary>
            <param name="error"><see cref="T:Infragistics.DataErrorInfo"/> object if an error occurred, null otherwise.</param>
            <param name="isComplete">Indicates whether the results are complete. Specify false if further results are
            going to be available.</param>
            <remarks>
            <para class="body">
            Activity operations may be executed asynchronously. When a method that performs an operation is required 
            to return an instance of <i>OperationResult</i> derived class, you can return a new instance 
            and specify the result of the operation later via this method when it's available. While the asynchronous 
            operation is still pending, the <see cref="P:Infragistics.OperationResult.IsComplete"/> property will return <i>False</i>. When the 
            result is available, you can call this method and specify 'isComplete' parameter as true to indicate 
            that the operation is complete and that the <see cref="P:Infragistics.OperationResult.IsComplete"/> property should be set to true.
            </para>
            <para class="body">
            If an error occurs during the operation, you can call this method with the <see cref="T:Infragistics.DataErrorInfo"/> 
            object containing the error information. Also specifiy true for 'isComplete' since no further action
            will be taken and operation is considered to be complete with an error.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.OperationResult.IsComplete"/>
            <seealso cref="P:Infragistics.OperationResult.Error"/>
        </member>
        <member name="P:Infragistics.CancelOperationResult.Operation">
            <summary>
            Operation being canceled.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityOperationResult">
            <summary>
            Result of an activity operation that may be performed asynchronously.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityOperationResult.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/>.
            </summary>
            <param name="activity">Activity associated with the operation.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityOperationResult.#ctor(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/>.
            </summary>
            <param name="activity">Activity associated with the operation.</param>
            <param name="errorInfo">Error information if there's an error.</param>
            <param name="markComplete">Whether to mark the operation as complete. Pass false for asynchronous
            operation whose result is going to be available later.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityOperationResult.#ctor(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)">
            <summary>
            Initializes the <see cref="P:Infragistics.OperationResult.Error"/> and 
            <see cref="P:Infragistics.OperationResult.IsComplete"/> properties based on the specified values.
            </summary>
            <param name="error"><see cref="T:Infragistics.DataErrorInfo"/> object if an error occurred, null otherwise.</param>
            <param name="isComplete">Indicates whether the results are complete. Specify false if further results are
            going to be available.</param>
            <remarks>
            <para class="body">
            Activity operations may be executed asynchronously. When a method that performs an operation is required 
            to return an instance of <i>OperationResult</i> derived class, you can return a new instance 
            and specify the result of the operation later via this method when it's available. While the asynchronous 
            operation is still pending, the <see cref="P:Infragistics.OperationResult.IsComplete"/> property will return <i>False</i>. When the 
            result is available, you can call this method and specify 'isComplete' parameter as true to indicate 
            that the operation is complete and that the <see cref="P:Infragistics.OperationResult.IsComplete"/> property should be set to true.
            </para>
            <para class="body">
            If an error occurs during the operation, you can call this method with the <see cref="T:Infragistics.DataErrorInfo"/> 
            object containing the error information. Also specifiy true for 'isComplete' since no further action
            will be taken and operation is considered to be complete with an error.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.OperationResult.IsComplete"/>
            <seealso cref="P:Infragistics.OperationResult.Error"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityOperationResult.Activity">
            <summary>
            Returns the activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarGroup">
            <summary>
            Represents a group of one or more <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.Contains(Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Returns true if the calendar is in the group.
            </summary>
            <param name="calendar">The calendar to check.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property has been changed.
            </summary>
            <param name="propertyName">The name of the property being changed</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.GetInitialCalendarIds">
            <summary>
            Returns a string that contains the id for the calendars currently in the <see cref="P:Infragistics.Controls.Schedules.CalendarGroup.Calendars"/> collection in the format expected by the <see cref="P:Infragistics.Controls.Schedules.CalendarGroup.InitialCalendarIds"/> property.
            </summary>
            <returns>A string in the format expected by the <see cref="P:Infragistics.Controls.Schedules.CalendarGroup.InitialCalendarIds"/> based on the ResourceCalendar instances currently in the Calendars collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.AddCalendarId(System.Text.StringBuilder,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Helper method for building an InitialCalendarIds string
            </summary>
            <param name="sb">The string build to add to</param>
            <param name="calendar">The calendar being added</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.AddEscapedText(System.String,System.Char[],System.Text.StringBuilder)">
            <summary>
            Helper method to escape (by preceding with a /) a character in the specified list
            </summary>
            <param name="text">The test to enumerate/add</param>
            <param name="charactersToEscape">The characters that should be escaped</param>
            <param name="sb">The string builder to update with the text</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.GetCalendarIds(System.Collections.Generic.IList{Infragistics.Controls.Schedules.ResourceCalendar})">
            <summary>
            Helper method for building an InitialCalendarIds string based on the specified list of calendars
            </summary>
            <param name="calendars">The list of calendars to use when generating the string</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.GetFlag(Infragistics.Controls.Schedules.CalendarGroup.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.InitializeVisibleCalendars">
            <summary>
            Populates the VisibleCalendars based on the contents of the Calendars collection
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.ParseCalendarIds(System.String)">
            <summary>
            Helper routine for splitting an InitialCalendarIds
            </summary>
            <param name="calendarIds">InitialCalendarIds string to parse</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.UpdateCalendarsFromIds(Infragistics.Controls.Schedules.ResourceCollection)">
            <summary>
            Helper method for reinitializing the Calendars collection based on the CalendarId's
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroup.OnResourcesChanged(Infragistics.Controls.Schedules.ResourceCollection,System.Boolean)">
            <summary>
            Invoked when the Resources associated with the containing CalendarGroupCollection has been changed.
            </summary>
            <param name="resources">The source resources collection that provides the calendars</param>
            <param name="verifyOnly">True if the group should only ensure the calendars are still used by the resources collection and false if the group can reinitialize the calendars colleciton from the serialized calendar ids</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroup.Calendars">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> The <see cref="P:Infragistics.Controls.Schedules.CalendarGroup.InitialCalendarIds"/> should be used at design time to define the 
            contents of the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroup.InitialCalendarIds">
            <summary>
            Returns or sets a color delimited list of resource and calendar id combinations that are used to define the contents of the collection at design time.
            </summary>
            <remarks>
            <p>A ResourceCalendar must be identified as a combination of the <see cref="P:Infragistics.Controls.Schedules.Resource.Id"/> of its <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResource"/> 
            and its <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.Id"/> such that the calendar id follows the resource id and is enclosed in [] (e.g. resourceId[calendarId]). 
            If multiple ids are provided then they must be comma delimited (e.g. resourceId1[calendarId1], resourceId1[calendarId2], resourceId2[calendarId1]. 
            If the [calendarId] is omitted then the <see cref="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendar"/> will be assumed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroup.InitialSelectedCalendarId">
            <summary>
            The resource and calendar id combination used at design time to indicate the calendar that should be selected at runtime.
            </summary>
            <remarks>
            <p>A ResourceCalendar must be identified as a combination of the <see cref="P:Infragistics.Controls.Schedules.Resource.Id"/> of its <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResource"/> 
            and its <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.Id"/> such that the calendar id follows the resource id and is enclosed in [] (e.g. resourceId[calendarId]). 
            If the [calendarId] is omitted then the <see cref="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendar"/> will be assumed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroup.SelectedCalendarInternal">
            <summary>
            Used at runtime to control which calendar is selected within the ui.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroup.VisibleCalendarsInternal">
            <summary>
            Returns a read-only collection that contains only the items in the <see cref="P:Infragistics.Controls.Schedules.CalendarGroup.Calendars"/> collection whose <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.IsVisibleResolved"/> is true.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroup.InternalFlags.VisibleCalendars">
            <summary>
            The visible calendars needs to be verified
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroup.InternalFlags.ProcessingResourcesChange">
            <summary>
            In OnResourcesChanged
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroup.InternalFlags.IsSynchronizedWithSnapshot">
            <summary>
            Set when the current state of the group within the OnResourcesChanged is in sync with the snapshot
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarGroupWrapper">
            <summary>
            Class used to maintain information for a CalendarGroup within a ScheduleControlBase
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarGroupCollection">
            <summary>
            Represents a collection of <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.CalendarGroupCollection"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.OnItemAdding(Infragistics.Controls.Schedules.CalendarGroup)">
            <summary>
            Invoked when an item is about to be added to the collection.
            </summary>
            <param name="itemAdded">The item being added</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.OnItemAdded(Infragistics.Controls.Schedules.CalendarGroup)">
            <summary>
            Invoked when an item is added to the collection
            </summary>
            <param name="itemAdded">The item added</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.OnItemRemoved(Infragistics.Controls.Schedules.CalendarGroup)">
            <summary>
            Invoked when an item is removed from the collection
            </summary>
            <param name="itemRemoved">The item removed</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.EnqueueDeferredOperation(Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags)">
            <summary>
            Helper routine that returns false if the operation could not/should not be deferred. Otherwise enqueues an async operation and returns true that the current operation should be deferred.
            </summary>
            <param name="flag">Indicates the operation to be enqueued</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.GetFlag(Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.UpdateChildResources(Infragistics.Controls.Schedules.ResourceCollection,System.Boolean)">
            <summary>
            Updates the CalendarGroup instances in the collection based on the resource collection.
            </summary>
            <param name="resources">The collection used to update the CalendarGroups</param>
            <param name="verifyCalendarsOnly">True if the calendars should not be cleared and reobtained based on the calendar ids</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CalendarGroupCollection.VerifyResourceList">
            <summary>
            Helper routine to maintain a hashset of the Resources for which a VisibleCalendar is displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroupCollection.NotifyItemsChanged">
            <summary>
            Returns true to indicate that the collection wants to receive notifications as items are added and removed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroupCollection.VisibleCalendars">
            <summary>
            Returns a list of the visible ResourceCalendar instances
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CalendarGroupCollection.VisibleResources">
            <summary>
            Returns a list of the Resource instances associated with the visible calendars
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags.ProcessingPendingChanges">
            <summary>
            in the middle of processing deferred changes
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags.VerifyResourceList">
            <summary>
            we need to rebuild the list of resources
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags.UpdateChildResources">
            <summary>
            We need to reinitialize all the groups with the resources
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags.VerifyResourcesAndCalendars">
            <summary>
            We need to check for any resources/calendars that have been removed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarGroupCollection.InternalFlags.CalendarsChanged">
            <summary>
            Notification that the Resources collection received a reset.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DaySettingsOverrideCollection">
            <summary>
            Collection of <see cref="T:Infragistics.Controls.Schedules.DaySettingsOverride"/> objects.
            </summary>
            <remarks>
            <b>DaySettingsOverrideCollection</b> is used by the <see cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>'s <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
            and <see cref="T:Infragistics.Controls.Schedules.Resource"/>'s <see cref="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides"/> properties.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DaySettingsOverrideCollection.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.DaySettingsOverrideCollection"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCalendarCollection">
            <summary>
            Collection of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> objects.
            </summary>
        </member>
        <member name="T:Infragistics.Collections.ViewList`1">
            <summary>
            Represents a list of view items that are created based on a list of data items.
            </summary>
            <typeparam name="T">Type of items contained in the collection.</typeparam>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.#ctor(System.Collections.IEnumerable,Infragistics.IViewItemFactory{`0},System.Boolean,System.Func{Infragistics.Collections.ViewList{`0},System.Collections.IEnumerable})">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Collections.ViewList`1"/>.
            </summary>
            <param name="source">List of data items.</param>
            <param name="viewItemsFactory">Used for creating and new T instances for each data item in the source and also setting/getting their associated data items.</param>
            <param name="hookIntoItems">Specifies whether to hook into items in the list via their ISupportPropertyChangeNotifications implementations.</param>
            <param name="preverifyCallback">Called before the view list is verified.</param>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor. Creates a new instance of <see cref="T:Infragistics.Collections.ViewList`1"/>.
            </summary>
            <param name="source">Source items collection. Any modifications made to the source collection
            will be reflected by this collection.</param>
            <remarks>
            <para class="body">
            <b>Note</b> that the <i>ViewList&lt;T&gt;</i> is a read-only collection. Any modifications made to 
            the source collection are reflected by this collection, assuming the source collection implements 
            INotifyCollectionChanged interface.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called to raise CollectionChanged notification as well as notify property change listeners added
            via ISupportPropertyChangeNotifications interface.
            </summary>
            <param name="eventArgs">Collection change event args.</param>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.Contains(`0)">
            <summary>
            Indicates whether the specified item is in the collection.
            </summary>
            <param name="item">Item to check if it's contained in the collection.</param>
            <returns>True if the item exists in the collection, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies items from this collection to the specified array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">The location in the destination array where the items will be copied.</param>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.GetEnumerator">
            <summary>
            Returns the enumerator for enumerating items in the collection.
            </summary>
            <returns>IEnumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.IndexOf(`0)">
            <summary>
            Returns the index of the specified item in the collection.
            </summary>
            <param name="item">The item whose index will be returned.</param>
            <returns>The index of the item if the item exists in the collection, -1 otherwise.</returns>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.Dirty(System.Boolean)">
            <summary>
            Marks the collection as needing to be resynced with the underlying source collection.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.ViewList`1.OnPreVerify">
            <summary>
            If preverifyCallback callback was specified then calls that and returns
            the return value of that callback. Otherwise returns the Source data list.
            </summary>
            <returns>The data list to use.</returns>
        </member>
        <member name="E:Infragistics.Collections.ViewList`1.CollectionChanged">
            <summary>
            Raised when the collection's contents change.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ViewList`1.Item(System.Int32)">
            <summary>
            Returns the item at the specified index.
            </summary>
            <param name="index">Index of the item to get.</param>
            <returns>Item at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Collections.ViewList`1.AllocatedItems">
            <summary>
            Returns items in the collection that have been allocated so far.
            </summary>
            <remarks>
            Returns items in the collection that have been allocated so far. This differs from GetEnumerator 
            in that the GetEnumerator allocates items that haven't been allocated yet and returns all the
            items of the collection.
            </remarks>
        </member>
        <member name="P:Infragistics.Collections.ViewList`1.Count">
            <summary>
            Returns the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ViewList`1.IsReadOnly">
            <summary>
            Indicates whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ViewList`1.SourceItems">
            <summary>
            Gets or sets the source items collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCalendarCollection.#ctor(System.Collections.IEnumerable,Infragistics.IViewItemFactory{Infragistics.Controls.Schedules.ResourceCalendar},System.Func{Infragistics.Collections.ViewList{Infragistics.Controls.Schedules.ResourceCalendar},System.Collections.IEnumerable})">
            <summary>
            Constructor.
            </summary>
            <param name="source">Data source list.</param>
            <param name="itemFactory">Item factory used for creating new ResourceCalendar instances as well as getting/setting their data items.</param>
            <param name="preverifyCallback">Called before the view list is verified.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceCollection">
            <summary>
            Collection of <see cref="T:Infragistics.Controls.Schedules.Resource"/> objects.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItems"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCollection.#ctor(System.Collections.IEnumerable,Infragistics.IViewItemFactory{Infragistics.Controls.Schedules.Resource},System.Func{Infragistics.Collections.ViewList{Infragistics.Controls.Schedules.Resource},System.Collections.IEnumerable})">
            <summary>
            Constructor.
            </summary>
            <param name="source">Data source list.</param>
            <param name="itemFactory">Item factory used for creating new Resource instances as well as getting/setting their data items.</param>
            <param name="preverifyCallback">Called before the view list is verified.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCollection.#ctor(System.Collections.Generic.IEnumerable{Infragistics.Controls.Schedules.Resource})">
            <summary>
            Constructor. Creates a new instance of <see cref="T:Infragistics.Controls.Schedules.ResourceCollection"/>.
            </summary>
            <param name="source">Source collection of resources. Any modifications made to the source
            will be reflected by this collection.</param>
            <remarks>
            <para class="body">
            <b>Note</b> that the <i>ResourceCollection</i> is a read-only collection. Any modifications made to 
            the source collection are reflected by this collection, assuming the source collection implements 
            INotifyCollectionChanged interface.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ResourceCollection.GetResourceFromId(System.String)">
            <summary>
            Gets the resource with the specified id. Returns null if none exists.
            </summary>
            <param name="id">Resource id.</param>
            <returns>Matching Resource object or null if no matching resource is found.</returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleDaysOfWeek">
            <summary>
            Contains <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> objects for the seven days of week. Each <i>ScheduleDayOfWeek</i> 
            object is used to specify settings for the corresponding day of week.
            </summary>
            <remarks>
            <para class="body">
            <b>ScheduleDaysOfWeek</b> exposes properties for each day of week: <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Monday"/>,
            <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Tuesday"/>, <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Wednesday"/>, 
            <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Thursday"/>, <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Friday"/>, 
            <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Saturday"/> and <see cref="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Sunday"/>.
            It's used by the ScheduleSettings' <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> property.
            </para>
            <para class="body">
            You can specifiy settings, like whether the day is a work-day and what the working hours are
            using the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object returned by the property of this object corresponding 
            to that day.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDaysOfWeek"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Item(System.DayOfWeek)">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object for the specified day of week. Default value is <b>Null</b>.
            </summary>
            <param name="dayOfWeek">Day of week.</param>
            <returns>Gets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object for the specified day of week. If one hasn't been set previously, returns <b>Null</b>.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Monday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Monday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Tuesday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Tuesday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Wednesday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Wednesday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Thursday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Thursday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Friday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Friday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Saturday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Saturday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDaysOfWeek.Sunday">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> instance for Sunday. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>Null</b>. In order to specifiy the settings
            for this day, create a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> object and set this property to it.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SingleItemCalendarGroupCollection">
            <summary>
            Collection class used by a CalendarGroupCollection to maintain a collection of <see cref="T:Infragistics.Controls.Schedules.SingleItemCalendarGroup"/> 
            instances for each <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> in the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of the groups 
            in the source collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.#ctor(System.Func{System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Func{System.DateTime,System.DateTime},Infragistics.Controls.Schedules.TimeslotRange[],System.Action{Infragistics.Controls.Schedules.Primitives.TimeslotBase})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.TimeslotCollection"/>
            </summary>
            <param name="creatorFunc">The delegate invoked when a TimeslotBase is to be allocated</param>
            <param name="modifyDateFunc">Optional method used to adjust a datetime for a timeslot</param>
            <param name="groupTemplates">Array of objects that provide the time information for the timeslots</param>
            <param name="initializer">The delegate invoked when an item is created or Reinitialize is invoked. This is meant to be used to update state on a given timeslot</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.BinarySearch(System.DateTime)">
            <summary>
            Returns the index of the specified item.
            </summary>
            <param name="date">The date to look for.</param>
            <returns>The index of the </returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.Contains(Infragistics.Controls.Schedules.Primitives.TimeslotBase)">
            <summary>
            Returns a boolean indicating if the specified item exists in the collection.
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item exists in the collection otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.CopyTo(Infragistics.Controls.Schedules.Primitives.TimeslotBase[],System.Int32)">
            <summary>
            Copies the items to the specified array.
            </summary>
            <param name="array">The array to update</param>
            <param name="arrayIndex">The starting index at which to copy the items</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.GetDateRange(System.Int32)">
            <summary>
            Returns a DateRange that represents the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.Start"/> and <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotBase.End"/> of the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotBase"/> at the specified index.
            </summary>
            <param name="index">The index of the timeslot in the collection whose date range is being requested</param>
            <returns>The date range for the timeslot at the specified index</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.IndexOf(Infragistics.Controls.Schedules.Primitives.TimeslotBase)">
            <summary>
            Returns the index of the specified item
            </summary>
            <param name="item">The item to locate</param>
            <returns>The index of the item or -1 if it is not in the collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.TimeslotCollection.CalculateDateRange(System.Int32,System.Boolean)">
            <summary>
            Returns the date range for the specified timeslot index
            </summary>
            <param name="index">Index of the timeslot</param>
            <param name="useModifyDateFunc">True to return the range taking the modify date function provided to the collection</param>
            <returns>The range for that index</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeslotCollection.Item(System.Int32)">
            <summary>
            Returns the timeslot at the specified index.
            </summary>
            <param name="index">The index of the item to return</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeslotCollection.Count">
            <summary>
            Returns the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.TimeslotCollection.System#Collections#Generic#ICollection{Infragistics#Controls#Schedules#Primitives#TimeslotBase}#IsReadOnly">
            <summary>
            Returns true to indicate that the list is read-only
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.VisibleDateCollection">
            <summary>
            Custom collection of DateTime that represent the dates that should be in view in the associated XamSchedule control
            </summary>
        </member>
        <member name="T:Infragistics.Collections.DateCollection">
            <summary>
            A custom collection of unique <see cref="T:System.DateTime"/> instances that do not contain time information.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Collections.DateCollection"/>
            </summary>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.ClearItems">
            <summary>
            Removes all the items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts a new item at the specified index in the collection.
            </summary>
            <param name="index">The index at which to insert the <paramref name="item"/></param>
            <param name="item">The date to insert in the collection</param>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.RemoveItem(System.Int32)">
            <summary>
            Removes an item at the specified index.
            </summary>
            <param name="index">The index of the item in the collection to be removed.</param>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces an item at the specified index in the collection 
            </summary>
            <param name="index">Index of the item to replace</param>
            <param name="item">The item to insert into the collection.</param>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.AddRange(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Adds a specified range of dates to the collection.
            </summary>
            <param name="start">Start of the range</param>
            <param name="end">End of the range</param>
            <param name="allowPartialSelection">True if as many dates up to the allowed maximum dates should be selected. If false and the range would cause the selection to exceed the maximum an exception will be thrown.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified range would result in more dates being selected than allowed by the maximum # of dates.</exception>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.AddRange(Infragistics.DateRange,System.Boolean)">
            <summary>
            Adds a specified range of dates to the collection.
            </summary>
            <param name="range">The range of dates to add to the collection</param>
            <param name="allowPartialSelection">True if as many dates up to the maximum allowable dates should be selected. If false and the range would cause the selection to exceed the maximum an exception will be thrown.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified range would result in more dates being selected than allowed by the maximum allowable dates.</exception>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.Contains(System.DateTime)">
            <summary>
            Returns a boolean indicating if the collection contains a given date.
            </summary>
            <param name="date">The date to evaluate</param>
            <returns>A boolean indicating if the collection contains the specified date.</returns>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.IntersectsWith(Infragistics.DateRange)">
            <summary>
            Returns true if there are any dates in the collection that intersect with the specified range.
            </summary>
            <param name="range">The range to evaluate</param>
            <returns>True if the collection contains any date within the specified range</returns>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.Sort">
            <summary>
            Sorts the contents of the collection in ascending order.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.GetAllowedDates(Infragistics.DateRange)">
            <summary>
            Returns an array of the dates that are allowed to be added for the specified range.
            </summary>
            <param name="dateRange">An object representing the range of dates to add</param>
            <returns>An array of the dates that are allowed to be added.</returns>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.OnDatesChanged(System.Collections.Generic.IList{System.DateTime},System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Invoked when the selection has changed indicating the added and removed dates.
            </summary>
            <param name="added">List of dates added</param>
            <param name="removed">List of dates that were removed from the collection</param>
        </member>
        <member name="M:Infragistics.Collections.DateCollection.VerifyNewDateCount(System.Int32@,System.Boolean)">
            <summary>
            Used to determine if the number of items that will be in the collection is allowed.
            </summary>
            <param name="newItemCount">The new item count. This is passed by reference and when <paramref name="validate"/> is false, this should be updated to reflect the constrained value if it exceeds the maximum</param>
            <param name="validate">True if an exception should be thrown if the new count exceeds the allowed</param>
        </member>
        <member name="P:Infragistics.Collections.DateCollection.AllowedRange">
            <summary>
            Returns a range that represents the dates that may be added.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.VisibleDateCollection.OnDatesChanged(System.Collections.Generic.IList{System.DateTime},System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Invoked when items have been added and/or removed from the collection
            </summary>
            <param name="added">The items that were added</param>
            <param name="removed">The items that were removed</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WorkingHoursCollection">
            <summary>
            Collection used for specifying working hours.
            </summary>
            <remarks>
            <para class="body">
            <b>WorkingHoursCollection</b> class is a collection of <see cref="T:Infragistics.TimeRange"/> instances. It's used for specifying working hours.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.DaySettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.WorkingHoursCollection"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.#ctor(Infragistics.TimeRange)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.WorkingHoursCollection"/> object.
            </summary>
            <param name="item">This item will be added to the collection.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.#ctor(System.Collections.Generic.IEnumerable{Infragistics.TimeRange})">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.WorkingHoursCollection"/> object.
            </summary>
            <param name="workHours">These items will be added to the collection.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.OnItemAdding(Infragistics.TimeRange)">
            <summary>
            Overridden. Validates the specified time range instance to ensure that it's start time and end time are valid.
            </summary>
            <param name="item">TimeRange instance to validate.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.Add(System.TimeSpan,System.TimeSpan)">
            <summary>
            Adds a new TimeRange instance based on the specified values.
            </summary>
            <param name="start">Start time of the time range.</param>
            <param name="end">End time of the time range.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.WorkingHoursCollection.ValidateState(Infragistics.TimeRange)">
            <summary>
            Ensures that the working hours don't span over more than 24 hours.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.WorkingHoursCollection.DefaultWorkingHours">
            <summary>
            Returns default working hours from 9:00 AM to 5:00 PM.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DateInfoProvider">
            <summary>
            Abstract base class used for formatting and manipulating dates
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.#ctor(System.Globalization.Calendar,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DateInfoProvider"/>
            </summary>
            <param name="calendar">The calendar used for date calculations</param>
            <param name="dateTimeFormat">Provides information about the format settings</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Schedules.Primitives.DateInfoProvider"/> using the Calendar and DateTimeFormat of the specified culture.
            </summary>
            <param name="cultureInfo">The culture to use</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.#ctor(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Schedules.Primitives.DateInfoProvider"/>
            </summary>
            <param name="cultureInfo">The culture to use</param>
            <param name="restrictToGregorian">If true will force the use of a Gregorian calendar</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.ClearCachedValues">
            <summary>
            Clears any values that have been cached so they can be re-created when needed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.FormatDate(System.DateTime,Infragistics.Controls.Schedules.Primitives.DateTimeFormatType)">
            <summary>
            Returns a formatted string for the supplied date.
            </summary>
            <param name="dateTime">The date/time to format.</param>
            <param name="formatType">An enumaration that specifies how to format the date time.</param>
            <returns>A formatted string.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.FormatDateRange(System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.DateRangeFormatType)">
            <summary>
            Returns a formatted string for a range of date times.
            </summary>
            <param name="start">The start date/time.</param>
            <param name="end">The start date/time.</param>
            <param name="formatType">An enumaration that specifies how to format the date range.</param>
            <returns>A formatted string.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.FormatDayOfWeek(Infragistics.Controls.Schedules.Primitives.DateTimeFormatType,System.DayOfWeek)">
            <summary>
            Returns a formatted string for the specified day of the week.
            </summary>
            <param name="formatType">One of the day of week related values that indicates whether to return the full day name (DayOfWeek), abbreviated (ShortDayOfWeek) or shortest (ShortestDayOfWeek) representation for the day of week.</param>
            <param name="dayOfWeek">The day of week whose string representation is to be returned.</param>
            <returns>The full, abbreviated or shortest version of the specified day of week.</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.AMDesignator">
            <summary>
            Returns the designator string for morning hours (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.AMDesignatorLowercase">
            <summary>
            Returns and caches the <see cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.AMDesignator"/> converted to lowercase (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.Calendar">
            <summary>
            Returns the calendar (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.CurrentProvider">
            <summary>
            Returns the provider for the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.DateSeparator">
            <summary>
            Returns the separator between year, month and day (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.DateTimeFormatInfo">
            <summary>
            Returns the object that contains the format info for dates and times (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.DisplayTimeIn24HourFormat">
            <summary>
            Returns true if time should be displayed in 24 hour format or false to dispay in 12 hour format with AM and PM designators
            </summary>
            <value>True wiill format the hour is 24 hour format, e.g. 3:00 PM would be displayed as 15:00. By default this is determined by looking for a uppercase 'H' in the <see cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.HourPattern"/>.</value>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.HourPattern"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.HourPattern">
            <summary>
            Returns the pattern to use to display just hours
            </summary>
            <value>The pattern used to format the hour portion of a time. By default this is created by parsing the LongTimePattern off <see cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.DateTimeFormatInfo"/>.</value>
            <remarks>
            <para class="note"><b>Note</b>: this pattern is used to determine whether dates are displayed in 12 or 24 hour format based on whether the pattern has an 'h' or 'H' character in it respectively.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.DisplayTimeIn24HourFormat"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.MaxSupportedDateTime">
            <summary>
            Returns the latest date time that is supported (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.MinSupportedDateTime">
            <summary>
            Returns the earliest date time that is supported  (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.PMDesignator">
            <summary>
            Returns the designator string for afternoon hours (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.PMDesignatorLowercase">
            <summary>
            Returns and caches the <see cref="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.PMDesignator"/> converted to lowercase (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DateInfoProvider.TimeSeparator">
            <summary>
            Returns the separator between hours, minutes and seconds (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DaySettings">
            <summary>
            Used for specifying settings for a specific day.
            </summary>
            <remarks>
            <para class="body">
            <b>DaySettings</b> class is used for specifying settings like the working hours or visibility of a specific day. 
            <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/> exposes <see cref="P:Infragistics.Controls.Schedules.ScheduleDayOfWeek.DaySettings"/> property. <i>ScheduleDayOfWeek</i>
            objects are accessed via the <i>ScheduleSettings'</i> <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> collection.
            <see cref="T:Infragistics.Controls.Schedules.DaySettingsOverride"/> also exposes <see cref="P:Infragistics.Controls.Schedules.DaySettingsOverride.DaySettings"/> property. 
            <i>DaySettingsOverride</i> is specified using the <i>ScheduleSettings'</i> <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
            collection.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DaySettings.IsWorkdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.DaySettings.IsWorkday"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DaySettings.WorkingHoursProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.DaySettings.WorkingHours"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DaySettings.OnPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for settings properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettings.IsWorkday">
            <summary>
            Specifies whether this day of week is a work day.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettings.WorkingHours">
            <summary>
            Specifies the working hours for the day of week. Default value is <b>null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>WorkingHours</b> is used to specify different working hours for the day this DaySettings object
            is associated with. If this property is left <b>null</b> or set to an empty collection then the 
            working hours will be resolved to the next settings object in the resolution hierarchy.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettings.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.DaySettingsOverride">
            <summary>
            Used for specifying settings for a specific date or a recurring date.
            </summary>
            <remarks>
            <para class="body">
            If you need to specify some settings for a specific day in the year, or some recurring date
            then you can use the <see cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>' <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
            collection to add a <b>DaySettingsOverride</b> instance that contains the day settings for that day
            or recurring date.
            </para>
            <para class="body">
            You can also specify DaySettingsOverrides for a specific resource using Resource' 
            <see cref="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides"/> collection.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.DaySettingsOverrides"/>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.Settings"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DaySettingsOverride.DateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.DaySettingsOverride.Date"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DaySettingsOverride.DaySettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.DaySettingsOverride.DaySettings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.DaySettingsOverride.RecurrenceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.DaySettingsOverride.Recurrence"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.DaySettingsOverride.OnPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for settings properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettingsOverride.Date">
            <summary>
            Specifies the date. The date is always considered to be relative to the local time-zone.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettingsOverride.DaySettings">
            <summary>
            Specifies the DaySettings object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettingsOverride.Recurrence">
            <summary>
            Specifies the date recurrence. If Recurrence is specified then <see cref="P:Infragistics.Controls.Schedules.DaySettingsOverride.Date"/> property's value
            is used as the start time for the recurrence.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that if the date of the first instance of the recurrence is different than the 
            <i>Date</i> property's value, the <i>Date</i> property is also used for matching.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.DaySettingsOverride.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OccurrenceManager`1._map">
            <summary>
            Contains occurrences, including variances.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OccurrenceManager`1._variances">
            <summary>
            Contains variances.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OccurrenceManager`1._latestNonFutureOccurrenceTimes">
            <summary>
            Used to cache the start time of the next occurrence in the series that's due for reminder. Keys are root activities.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.#ctor(Infragistics.Controls.Schedules.IScheduleDataConnector,Infragistics.Controls.Schedules.ActivityItemManager{`0},Infragistics.Controls.Schedules.ActivityBase.StorageProps.Info)">
            <summary>
            Constructor.
            </summary>
            <param name="connector">Schedule data connector.</param>
            <param name="mainViewItemManager">Item manager that keeps track of root activities and variances.</param>
            <param name="propsInfo">Properties information for <typeparamref name="TActivity"/> class.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.GetRootActivity(System.Object)">
            <summary>
            Gets the root activity with the specified id.
            </summary>
            <param name="id">Root activity id.</param>
            <returns>If a root activity by the specified id is found, returns it. Otherwise returns null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.GetRecurrenceCalculator(Infragistics.Controls.Schedules.RecurrenceInfo)">
            <summary>
            Gets the recurrence calculator for the specified recurrence information.
            </summary>
            <param name="info">Contains recurrence information.</param>
            <returns>Calculator for calculating occurrences.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.GetRecurrenceCalculator(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets the recurrence calculator for the specified root activity.
            </summary>
            <param name="root">Root activity.</param>
            <returns>Calculator for calculating occurrences.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.CreateViewItem(System.Object)">
            <summary>
            Creates or gets a cached occurrence instance for the specified dataItem which must be an OccurrenceId instance.
            </summary>
            <param name="dataItem">An OccurrenceId instance.</param>
            <returns>The occurrence activity.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.GetOccurrenceThatsDueForReminder(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets the start time of the next occurrence that's due for reminder.
            </summary>
            <param name="root">Root activity that defines the series.</param>
            <returns>The start time of the next occurrence in the series that's due for reminder.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.InitializeReminderEnabled(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Initializes the ReminderEnabled property of the specified occurrence based on root
            activity's Reminder.LastDisplayedTime and if that's not available then based on the
            latest occurrence in the series that's overdue for the reminder.
            </summary>
            <param name="activity">Occurrence activity.</param>
            <param name="root">Root activity.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.OccurrenceManager`1.CreateOccurrenceId(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Creates an OccurrenceId object using the the RootActivity and the OriginalStartTime/OriginalEndTime 
            values of the specified occurrence.
            </summary>
            <param name="activity">Occurrence activity.</param>
            <returns>OccurrenceId instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.AggregateOccurrenceIdCollection`1.ProcessActivity(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Int32)">
            <summary>
            Adds or removes the activity which can be a recurring activity or a variance.
            </summary>
            <param name="ii">Activity</param>
            <param name="remove">If true then removes the activity otherwise adds it.</param>
            <param name="phase">Phase 1 will only add variances and skip recurring activities 
            and phase 2 will add only recurring activities and skip variances.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek">
            <summary>
            Used for specifying settings for a specific day of week.
            </summary>
            <remarks>
            <para class="body">
            XamScheduleDataManager exposes <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> collection that
            contains seven <b>ScheduleDayOfWeek</b> instances for each of the seven days of week. You can
            specify settings, like the description or the working hours, for a specific week day using that
            collection.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDayOfWeek.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleDayOfWeek"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleDayOfWeek.DaySettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleDayOfWeek.DaySettings"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDayOfWeek.OnPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for settings properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDayOfWeek.DaySettings">
            <summary>
            Specifies the day settings for this day of week.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDayOfWeek.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase">
            <summary>
            Abstract base class for all XamSchedule dialog factories.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateActivityDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Boolean)">
            <summary>
            Returns a FrameworkElement that should used as the dialog for creating and editing <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived instances.
            </summary>
            <remarks>
            <para class="body">
            The <b>XamScheduleDataManager</b> will automatically host the FrameworkElement returned by this method in an appropriate container
            depending on the environment within which the dialog is being displayed.  If the environment supports top level windows then the
            FrameworkElement will be hosted in a Dialog Window unless this method returns a Window-derived element in which case that window
            will be used as the dialog window.
            </para>
            </remarks>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no cointaining element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/></param>
            <param name="activity">The <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived activity that is being edited</param>
            <param name="allowModifications">True if the dialog should allow modifications of the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>, false to display the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> without allowing modifications.</param>
            <param name="allowRemove">True if the dialog should allow the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> to be removed, false to disallow removal of the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/>.</param>
            <returns>A FrameworkElement that represents the dialog or the contents of the dialog.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityType"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateActivityRecurrenceDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Returns a FrameworkElement that should used as the dialog for creating and editing <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> recurrences.
            </summary>
            <remarks>
            <para class="body">
            The <b>XamScheduleDataManager</b> will automatically host the FrameworkElement returned by this method in an appropriate container
            depending on the environment within which the dialog is being displayed.  If the environment supports top level windows then the
            FrameworkElement will be hosted in a Dialog Window unless this method returns a Window-derived element in which case that window
            will be used as the dialog window.
            </para>
            </remarks>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no cointaining element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/></param>
            <param name="activity">The <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> that is being edited</param>
            <param name="allowModifications">True if the dialog should allow modifications of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> recurrences, false to display the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> recurrences without allowing modifications.</param>
            <returns>A FrameworkElement that represents the Recurrence dialog or the contents of the Recurrence dialog.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.RecurrenceBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateActivityRecurrenceChooserDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.RecurrenceChooserType,Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult)">
            <summary>
            Returns a FrameworkElement that should used as the dialog for letting the user choose whether to access a recurrence Series or Occurrence
            when an <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> is opened or deleted.
            </summary>
            <remarks>
            <para class="body">
            The <b>XamScheduleDataManager</b> will automatically host the FrameworkElement returned by this method in an appropriate container
            depending on the environment within which the dialog is being displayed.  If the environment supports top level windows then the
            FrameworkElement will be hosted in a Dialog Window unless this method returns a Window-derived element in which case that window
            will be used as the dialog window.
            </para>
            </remarks>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no cointaining element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/></param>
            <param name="activity">The recurring <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> for which the choice is being made.</param>
            <param name="chooserType">The type of <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> to display, i.e. a chooser for opening recurrences or deleting recurrences.</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult"/> instance.  The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
            <returns>A FrameworkElement that represents the Recurrence dialog or the contents of the Recurrence dialog.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>
            <seealso cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.RecurrenceBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateReminderDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager)">
            <summary>
            Returns a FrameworkElement that should used as the dialog for letting the user dismiss or snooze active Reminders.
            </summary>
            <remarks>
            <para class="body">
            The <b>XamScheduleDataManager</b> will automatically host the FrameworkElement returned by this method in an appropriate container
            depending on the environment within which the dialog is being displayed.  If the environment supports top level windows then the
            FrameworkElement will be hosted in a Dialog Window unless this method returns a Window-derived element in which case that window
            will be used as the dialog window.
            </para>
            </remarks>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no cointaining element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/></param>
            <returns>A FrameworkElement that represents the Recurrence dialog or the contents of the Recurrence dialog.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Reminder"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>
            <seealso cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateTimeZoneChooserDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.TimeZoneInfoProvider,Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult)">
            <summary>
            Returns a FrameworkElement that should used as the dialog for letting the user select a time zone.
            </summary>
            <remarks>
            <para class="body">
            The <b>XamScheduleDataManager</b> will automatically host the FrameworkElement returned by this method in an appropriate container
            depending on the environment within which the dialog is being displayed.  If the environment supports top level windows then the
            FrameworkElement will be hosted in a Dialog Window unless this method returns a Window-derived element in which case that window
            will be used as the dialog window.
            </para>
            </remarks>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no cointaining element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/></param>
            <param name="tzInfoProvider">The object that provides the list of time zones</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult"/> instance.  The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
            <returns>A FrameworkElement that represents the TimeZone dialog or the contents of the TimeZone dialog.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/>
            <seealso cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            <seealso cref="T:Infragistics.Controls.Schedules.TimeZoneInfoProvider"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.SupportedActivityDialogTypes">
            <summary>
            Returns a flagged enumeration indicating the types of <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> for which the <see cref="M:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase.CreateActivityDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Boolean)"/> method will return a dialog to be displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleSettings">
            <summary>
            Contains schedule settings information.
            </summary>
            <remarks>
            <para class="body">
            <b>ScheduleSettings</b> is used by the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.Settings"/> property.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleSettings.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettings"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.FirstDayOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.FirstDayOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.JournalSettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.JournalSettings"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayDurationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayDuration"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayOffset"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.MaxDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.MaxDate"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.MinDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.MinDate"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.WorkDaysProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkDays"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHoursProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleSettings.OnPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for settings properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing">
            <summary>
            Specifies whether the user is allowed to close calendars via the UI.
            </summary>
            <remarks>
            <p class="body">The XamSchedule view controls optionally display a close button in the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> that allows 
            the end user to close a <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>. The AllowCalendarClosing property can be used to prevent the end 
            user from closing/hiding a calendar.</p>
            <p class="body">The <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButton"/> property is used to determine if the close button is 
            displayed within the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>. By default that property is set to null. When left to this default, the visibility 
            of the close button is resolved as follows. If the AllowCalendarClosing is false then the button will be hidden. Otherwise the default 
            visibility is up to the control. For example, in <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>, the close button is not displayed by default but for 
            <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> and <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/> it will be displayed. This mimics the default ui displayed in Microsoft Outlook.</p>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButton"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettings">
            <summary>
            Gets or sets <see cref="T:Infragistics.Controls.Schedules.AppointmentSettings"/> object that contains settings for appointments.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.AppointmentSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.JournalSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.DaySettingsOverrides">
            <summary>
            Collection of <see cref="T:Infragistics.Controls.Schedules.DaySettingsOverride"/> objects. Used for overriding day settings 
            (like working hours, whether the day is a workday etc…) for specific dates as well as specific 
            recurring dates.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek">
            <summary>
            Gets or sets <see cref="T:Infragistics.Controls.Schedules.ScheduleDaysOfWeek"/> object that contains settings for days of week. Default value is <b>Null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>DaysOfWeek</b> returns <see cref="T:Infragistics.Controls.Schedules.ScheduleDaysOfWeek"/> object that is used to specifiy settings, like
            whether the day is a workday, for specific days of week.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.FirstDayOfWeek">
            <summary>
            Specifies the first day of week.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleSettings.FirstDayOfWeekProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="T:Infragistics.Controls.Schedules.DaySettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.FirstDayOfWeek"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.JournalSettings">
            <summary>
            Gets or sets <see cref="T:Infragistics.Controls.Schedules.JournalSettings"/> object that contains settings for journals.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.JournalSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayDuration">
            <summary>
            Specifies the logical day duration - the duration of the day. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.LogicalDayOffset">
            <summary>
            Specifies the logical day offset - the time when the day starts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.MaxDate">
            <summary>
            Maximum date allowed in the UI. Appointment creation will also be restricted within the MinDate and MaxDate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.MinDate">
            <summary>
            Minimum date allowed in the UI. Appointment creation will also be restricted within the MinDate and MaxDate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings">
            <summary>
            Gets or sets <see cref="T:Infragistics.Controls.Schedules.TaskSettings"/> object that contains settings for tasks.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.TaskSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AppointmentSettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.TaskSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkDays">
            <summary>
            Specifies which days of week are workdays.
            </summary>
            <remarks>
            <para class="body">
            <b>WorkDays</b> property is used to specify which days of week are work-days. You can use the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            property to specify the working hours. You can also use the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> property to specify
            working hours on a per day basis as well as whether a day is a work-day or not.
            </para>
            <para class="body">
            You can also specify work-days and work-hours for a specific resource using the <see cref="T:Infragistics.Controls.Schedules.Resource"/>'s <see cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/> collection.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleSettings.WorkDaysProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.DaySettings.IsWorkday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours">
            <summary>
            Specifies working hours. Default value is null.
            </summary>
            <remarks>
            <para class="body">
            <b>WorkingHours</b> property specifies the working hours for all days of week. You can also 
            use the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/> property to specify per day working hours as well which 
            days of week are work days. You can also specify per resource working hours and work days
            using the <see cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/> property.
            </para>
            <para class="body">
            If working hours for a day are not specified via <i>DaysOfWeek</i> property then this property's
            value is used. If this property is not specified then the default value of 9:00 AM - 5:00 PM 
            will be used.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHoursProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Resource.DaysOfWeek"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDayOfWeek.DaySettings"/>
            <seealso cref="P:Infragistics.Controls.Schedules.DaySettings.IsWorkday"/>
            <seealso cref="P:Infragistics.Controls.Schedules.DaySettings.WorkingHours"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SingleItemCalendarGroup">
            <summary>
            Custom <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/> that represents a single <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SingleItemCalendarGroup.Contains(Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Returns true if the calendar is in the group.
            </summary>
            <param name="calendar">The calendar to check.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeManager.AddTask(System.DateTime,System.Action)">
            <summary>
            Invokes a specified action when the current time hits or exceeds the specified time.
            </summary>
            <param name="time">The time at which the action should be invoked</param>
            <param name="action">The action to invoke</param>
            <returns>A token that must be strongly referenced by the caller.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeManager.AddTimeRange(Infragistics.DateRange,System.Boolean,System.Action)">
            <summary>
            Adds a notification that is triggered when the current time enters/leaves the specified range
            </summary>
            <param name="timeRange">The time range to watch</param>
            <param name="isEnterAction">True to invoke the action when the current time enters the <paramref name="timeRange"/>; false to invoke the action when the current time leaves the range.</param>
            <param name="action">The action to invoke when the time enters/leaves the specified range.</param>
            <returns>A token that must be strongly referenced by the caller.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeManager.Remove(System.Object)">
            <summary>
            Removes the specified time item.
            </summary>
            <param name="token">The object that was returned from the add method used to add the time item</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeManager.SnoozeTask(System.Object,System.DateTime)">
            <summary>
            Increases the time before a task's action is to be invoked
            </summary>
            <param name="item">The token for the task returned from the AddTask method</param>
            <param name="newTime">A time in the future from the current task time that the associated action should be invoked.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimePickerItem">
            <summary>
            Represents an item in a time picker combo box.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimePickerItem.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimePickerItem.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimePickerItem.ToString">
            <summary>
            Returns a System.String that represents the current System.Object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimePickerItem.DisplayString">
            <summary>
            Returns the string to display for this entry (read only).
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ValueGetter.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ValueGetter.Value"/> dependency property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WeakAction`1">
            <summary>
            A class used to specify a parameterless action without rooting the object where the action is
            to be performed. Creating a pointer to an instance method and holding onto it roots the object
            containing the instance method. If you want to not root the object, then use this class to
            create a parameterless action that delegates to a static parametered action that you provide,
            where the parameter is the object instance which is kept using weak reference.
            For example, new DeferredOperation( WeakAction.Create( obj, parameteredAction ) ).
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter">
            <summary>
            Custom control that represents a specific <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instance
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="constraint">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture has been lost
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse enters the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse leaves the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is released.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse has noved
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ActivityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.Activity"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.OnActivityChanged(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Invoked when the associated activity has changed.
            </summary>
            <param name="oldValue">Old activity</param>
            <param name="newValue">New activity</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalText"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderStrokeThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderStrokeThickness"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentHorizontalAlignmentProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentHorizontalAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentMarginProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentMargin"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedDateTimeForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedDateTimeForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedGeometryProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedGeometry"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndLocalProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndLocal"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndOutOfRangeIndicatorVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndOutOfRangeIndicatorVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.HasPendingOperationProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.HasPendingOperation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IndicatorAreaVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IndicatorAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsInEditModeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsInEditMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSingleLineDisplayProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSingleLineDisplay"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.PrefixFormatTypeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.PrefixFormatType"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ReminderVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ReminderVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SeparatorVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SeparatorVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartLocalProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartLocal"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartOutOfRangeIndicatorVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartOutOfRangeIndicatorVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SuffixFormatTypeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SuffixFormatType"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ToolTipInfoProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ToolTipInfo"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.GetFlag(Infragistics.Controls.Schedules.Primitives.ActivityPresenter.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.Activity">
            <summary>
            Returns or sets the activity associated with a given element.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ActivityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalText">
            <summary>
            Returns additional text for dispslay (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextVisibility">
            <summary>
            Returns the visibility of the AdditionalText field (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.AdditionalTextVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBackground">
            <summary>
            Returns the brush to use for the background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBackgroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderBrush">
            <summary>
            Returns the brush to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderStrokeThickness">
            <summary>
            Returns the stroke thickness for the border around the element (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedBorderStrokeThicknessProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentHorizontalAlignment">
            <summary>
            Returns the horizontal alignment for the content (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentHorizontalAlignmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentMargin">
            <summary>
            Returns the margin around the content area
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedContentMarginProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedDateTimeForeground">
            <summary>
            Returns the brush to use for the Foreground or date time (prefix/suffix) elements based on the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedDateTimeForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedGeometry">
            <summary>
            Returns a geometry for the activity that takes into account a possible notch for appointment that don't take up at least 1 timeslot (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ComputedGeometryProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndLocal">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> in local time.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndLocalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndOutOfRangeIndicatorVisibility">
            <summary>
            Returns the visibility of the End date out of reange indicator (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.EndOutOfRangeIndicatorVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.HasPendingOperation">
            <summary>
            Returns whether there is an operation pending (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.HasPendingOperationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IndicatorAreaVisibility">
            <summary>
            Returns th visibility of the indicator area (read-only);
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IndicatorAreaVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsInEditMode">
            <summary>
            Determines if this activity is being edited in place
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsInEditModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSelected">
            <summary>
            Returns a boolean indicating if the object is currently selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSelectedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSingleLineDisplay">
            <summary>
            Returns true if this element should display its contents in a single line (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.IsSingleLineDisplayProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.PrefixFormatType">
            <summary>
            Returns and enumeration that determines how the activity prefix will be formatted.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.PrefixFormatTypeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ReminderVisibility">
            <summary>
            Returns a value indicating the visibility of the reminder indicator.
            </summary>
            <remarks>
            <p class="body">Reminders are only active for the calendars associated with the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/>. This property 
            considers the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.OwningResource"/> and the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.ReminderEnabled"/> state to determine whether the reminder 
            is active.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ReminderVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SeparatorVisibility">
            <summary>
            Returns the visibility of th separator text between the sunject and the AdditionalText (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SeparatorVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartLocal">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> in local time.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartLocalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartOutOfRangeIndicatorVisibility">
            <summary>
            Returns the visibility of the start date out of reange indicator (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.StartOutOfRangeIndicatorVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SuffixFormatType">
            <summary>
            Returns and enumeration that determines how the activity suffix will be formatted.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.SuffixFormatTypeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ToolTipInfo">
            <summary>
            Returns an object with toolip info (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityPresenter.ToolTipInfoProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar">
            <summary>
            An element used to resize either the leading or trailing (start or end time) of an activity
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.ActivityPresenter"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.ActivityPresenterAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse enters this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse operation</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.IsLeadingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.IsLeading"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.ResizeGripVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.ResizeGripVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.IsLeading">
            <summary>
             Returns or sets whether this is the Leading or trailing resizer bar
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.IsLeadingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.ResizeGripVisibility">
            <summary>
            Returns the visibility of the resize grip (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ActivityResizerBar.ResizeGripVisibilityProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentPresenter">
            <summary>
            Element used to represent an <see cref="T:Infragistics.Controls.Schedules.Appointment"/> instance
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentPresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentPresenter.OnActivityChanged(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Invoked when the associated activity has changed.
            </summary>
            <param name="oldValue">Old activity</param>
            <param name="newValue">New activity</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.JournalPresenter">
            <summary>
            Element used to represent an <see cref="T:Infragistics.Controls.Schedules.Journal"/> instance
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.JournalPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.JournalPresenter"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator">
            <summary>
            Element used to indicate that there are more <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instances that are not currently in view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.MoreActivityIndicatorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse enters the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse leaves the bounds of the element
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedFillProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedFill"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedStrokeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedStroke"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedFill">
            <summary>
            Returns the brush to use for the background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedFillProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedStroke">
            <summary>
            Returns the brush to use for the background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator.ComputedStrokeProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TaskPresenter">
            <summary>
            Element used to represent an <see cref="T:Infragistics.Controls.Schedules.Task"/> instance
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TaskPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TaskPresenter"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea">
            <summary>
            Represents a single date within the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> area where the activities which are 24 hours or longer are displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea.ComputedBorderThicknessProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea.ComputedBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea.ComputedBorderThickness">
            <summary>
            Returns the border thickness to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.MultiDayActivityArea.ComputedBorderThicknessProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader">
            <summary>
            Represents the header for a single date of a specific <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> in a <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.DayViewDayHeaderAutomationPeer"/></returns>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea">
            <summary>
            Represents the header area for a <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> for a specific <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.DayViewDayHeaderAreaAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when the mouse wheel has been scrolled
            </summary>
            <param name="e">Provides information about the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.MultiDayActivityAreaVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.MultiDayActivityAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.MultiDayActivityAreaVisibility">
            <summary>
            Returns a value indicating whether the all day event area elements should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.MultiDayActivityAreaVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.ActivityProvider">
            <summary>
            Returns or sets the object that provides the activities.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayViewDayHeaderArea.Timeslots">
            <summary>
            Returns or sets the collection of timeslots that represent the headers
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore">
            <summary>
            Displays a UI for the core portion of the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> dialog. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.#ctor(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.XamScheduleDataManager,Infragistics.Controls.Schedules.Appointment)">
            <summary>
            Creates an instance of the AppointmentDialogCore control which represents the core of the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> dialog.
            </summary>
            <param name="container">The FrameworkElement that contains this dialog, or null if there is no containing element.</param>
            <param name="dataManager">The current <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.</param>
            <param name="appointment">The appointment to display.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.KeyUp event occurs
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.AllowAllDayActivitiesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.AllowAllDayActivities"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessageProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessage"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflictsProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflicts"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentModifiableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentModifiable"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentRemoveableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentRemoveable"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrenceProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrence"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRootProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRoot"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSiteContentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSiteContent"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescription"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescription"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerEnabled"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerVisibility"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.UpdateDirtyStatus(System.Boolean)">
            <summary>
            Updates the dirty status of the dialog.
            </summary>
            <param name="isDirty">True to mark the dialog dirty, otherwise false.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.AllowAllDayActivities">
            <summary>
            Returns or sets whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> displayed in the dialog can be edited.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.AllowAllDayActivitiesProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> being edited.  This is a copy of the actual appointment, but will be saved to the
            original appointment when the dialog is committed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessage">
            <summary>
            Returns a message that describes the conflict.  This property is only valid when the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflicts"/> property is set to true.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessageProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflicts"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.DataManager">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> associated with the dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflicts">
            <summary>
            Returns whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> conflicts with or is adjacent to another <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>.  If so the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessage"/>
            property contains a message that describes the conflict
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.HasConflictsProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.ConflictMessage"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentModifiable">
            <summary>
            Returns or sets whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> displayed in the dialog can be edited.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentModifiableProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentRemoveable">
            <summary>
            Returns or sets whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> being displayed in the dialog can be removed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsAppointmentRemoveableProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrence">
            <summary>
            Returns whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> represents an <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> occurrence in a recurrence series
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrenceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRoot"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRoot">
            <summary>
            Returns whether the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> represents the root <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/> in a recurrence series
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRootProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.LocalizedStrings">
            <summary>
            Returns a dictionary of localized strings for use by the controls in the template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSite">
            <summary>
            Returns the <b>ContentControl</b> Part in the <b>AppointmentDialogCore</b> template that is used to display a navigation
            control (e.g., a Ribbon or a Menu) for the dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSiteContent">
            <summary>
            Returns or sets the content of the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSite"/>.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.NavigationControlSiteContentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescription">
            <summary>
            Returns a message that describes the occurrence.  This property is only valid when the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibility"/> property is set to true.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibility"/>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibility"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibility">
            <summary>
            Returns/sets whether a message containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>'s occurrence details is visible.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsOccurrence"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescription">
            <summary>
            Returns a message that describes the recurrence series.  This property is only valid when the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibility"/> property is set to true.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibility"/>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.OccurrenceDescriptionVisibility"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibility">
            <summary>
            Returns/sets whether a message containing the <see cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.Appointment"/>'s recurrence root details is visible.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.RecurrenceRootDescriptionVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.IsRecurrenceRoot"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerEnabled">
            <summary>
            Resturns/sets whether the Time Zone pickers are enabled.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerEnabledProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerVisibility">
            <summary>
            Resturns/sets whether the Time Zone pickers are visible.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore.TimeZonePickerEnabled"/>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ItemPosition">
            <summary>
            Custom structure that represents a position (offset and extent). Note the End is exclusive
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ItemPosition.End">
            <summary>
            The exclusive end point for the structure
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.PanelHelper">
            <summary>
            Helper class for dealing with recycleable elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.ArrangeStack(System.Windows.Controls.Panel,System.Collections.Generic.IList{System.Windows.FrameworkElement},System.Boolean,System.Windows.Size,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Arranges the specified elements with a specific extent in a horizontal or vertical stack
            </summary>
            <param name="panel">The panel whose elements will be arranged</param>
            <param name="elementsInView">The elements to arrange</param>
            <param name="isVertical">True if the items are to be arranged vertically; otherwise false to arrange them horizontally</param>
            <param name="finalSize">The size provided to the arrange</param>
            <param name="itemExtent">The extent of each item - for vertical this is the height and for horizontal this is the width of each item</param>
            <param name="interItemSpacing">The amount of space between each item</param>
            <param name="firstVisibleRealizedIndex">The index of the items in the elements in view that is considered to be the first element in view</param>
            <param name="extraPixels">The amount of extra space to distribute to the items. Should only be used when all items are in view</param>
            <returns>The rect used.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.GetStartingArrangeRect(System.Boolean,System.Windows.Size,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the rect for the first item to arrange when using the ArrangeStack method
            </summary>
            <param name="isVertical">True if the items are arranged vertically otherwise false.</param>
            <param name="finalSize">The size provided to the ArrangeOverride</param>
            <param name="itemExtent">The extent of each item</param>
            <param name="interItemSpacing">The amount of space between each item</param>
            <param name="firstVisibleRealizedIndex">The index of the first item relative to the <paramref name="itemCount"/></param>
            <param name="itemCount">The number of items being arranged</param>
            <returns>The rect for the arrange</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.GetStackStartAndEnd(System.Windows.Size,System.Int32,System.Int32,System.Boolean,System.Double,System.Double,System.Boolean,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the adjusted start and end indexes for a stack arrangement
            </summary>
            <param name="availableSize">The size available for the measure</param>
            <param name="firstItemIndex">The index of the first item to arrange</param>
            <param name="pageSize">The calculated number of items fully in view</param>
            <param name="isVertical">True if the items are arranged vertically</param>
            <param name="itemExtent">The extent of the items</param>
            <param name="interItemSpacing">The amount of space between each item</param>
            <param name="realizePrecedingAndTrailingItems">True if the previous and next items should be considered as well if possible</param>
            <param name="itemCount">The total number of items</param>
            <param name="startItemIndex">Out parameter set to the adjusted first item index</param>
            <param name="endItemIndex">Out parameter set to the adjusted end item index</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.MeasureElement(System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Helper method for measuring a recycleable element.
            </summary>
            <param name="element">The element to measure</param>
            <param name="availableSize">The size with which to measure the element.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.RealizeStack``1(System.Windows.Size,System.Int32,System.Int32,System.Windows.Controls.Panel,System.Collections.Generic.IList{``0},System.Boolean,System.Collections.Generic.IList{System.Windows.FrameworkElement},System.Double,System.Boolean,System.Double,System.Action{Infragistics.ISupportRecycling,System.Int32,System.Windows.FrameworkElement,Infragistics.Controls.Schedules.Primitives.PanelHelper.InitializeItemState},System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Provides the creation and measurement for recyclable elements 
            </summary>
            <typeparam name="T">The type of item which implements ISupportRecycling</typeparam>
            <param name="availableSize">The available size from the measure</param>
            <param name="firstItemIndex">The index of the item in the items collection that represents the first visible item</param>
            <param name="pageSize">The # of items that should fit in view</param>
            <param name="panel">The panel where the children will be added</param>
            <param name="items">The collection of recycling items that are used to get/create the elements</param>
            <param name="isVertical">True if the items are arranged vertically; otherwise false if the items are arranged horizontally</param>
            <param name="elementsInView">A collection of the items currently in view</param>
            <param name="timeSlotExtent">The extent of each item</param>
            <param name="interItemSpacing">The amount of space between each item</param>
            <param name="initializer">Action that is invoked when an element is attached. The action is passed the item, its index, the container with which it is being associated and a flag indicating the item state.</param>
            <param name="realizePrecedingAndTrailingItems">True to create the item before the first visible item and after the last visible item. This would be needed to let wpf/sl do the keyboard navigation</param>
            <param name="firstVisibleRealizedIndex">This represents the current element that is first in view and will be updated if necessary based on what was measured/realized.</param>
            <param name="startItemIndex">Out param set to the index of the resolved first item</param>
            <param name="endItemIndex">Out param set to the index of the resolved last item</param>
            <returns>The desired size</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.PanelHelper.ReleaseElements(System.Windows.Controls.Panel,System.Collections.Generic.IList{System.Windows.FrameworkElement})">
            <summary>
            Helper method for invoking the RecyclingManager's ReleaseElement method on each item in the specified list of containers for the specified panel.
            </summary>
            <param name="panel">The panel that is the parent of the specified items</param>
            <param name="elementsInView">The elements that are the containers for recyclable items</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.PanelHelper.InitializeItemState.ExistingContainer">
            <summary>
            The item was already associated with a container
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.PanelHelper.InitializeItemState.RecycledContainer">
            <summary>
            The item was just associated with an existing/recycled container
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.PanelHelper.InitializeItemState.NewContainer">
            <summary>
            The item was just associated with a new container.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel">
            <summary>
            A custom panel for arranging activity based on a set of time slots
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase">
            <summary>
            Abstract base class for a panel that positions time slot related elements.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.OnChildDesiredSizeChanged(System.Windows.UIElement)">
            <summary>
            Invoked when the desired size of a child element has been changed.
            </summary>
            <param name="child">The child whose size has changed.</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.InterItemSpacingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.InterItemSpacing"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotOrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotOrientation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.GetTimeslotTimeLocal(System.Int32)">
            <summary>
            Returns the date range for the specified timeslot ignoring the date time adjustments (e.g. for the secondary timezone)
            </summary>
            <param name="index">Index of the timeslot</param>
            <returns>The date range for the index</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.GetTimeslotIndex(Infragistics.DateRange,System.Int32@,System.Int32@)">
            <summary>
            Returns the start and end indexes for a given range.
            </summary>
            <param name="range">The range to evaluate</param>
            <param name="startIndex">Out parameter set to the index of the timeslot that contains the beginning of the appointment</param>
            <param name="endIndex">Out parameter set to the index of the timeslot that contains the end of the appointment</param>
            <returns>Returns false if no portion of the range exists within a timeslot</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.GetTimeslotIndex(System.DateTime,System.DateTime,System.Int32@,System.Int32@)">
            <summary>
            Returns the start and end indexes for a given range.
            </summary>
            <param name="startTime">The start time for the range</param>
            <param name="endTime">The end time for the range. This is expected to be <paramref name="startTime"/> or greater. This value is considered non-inclusive (unless it equals the start time)</param>
            <param name="startIndex">Out parameter set to the index of the timeslot that contains the beginning of the appointment</param>
            <param name="endIndex">Out parameter set to the index of the timeslot that contains the end of the appointment</param>
            <returns>Returns false if no portion of the range exists within a timeslot</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.InterItemSpacing">
            <summary>
            Returns or sets the amount of space between each item.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.InterItemSpacingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotOrientation">
            <summary>
            Returns or sets the orientation in which the items will be arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotOrientationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.Timeslots">
            <summary>
            Returns or sets the collection of associated timeslots
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotPositionInfo.GetItemPosition(System.Int32)">
            <summary>
            Returns the position of the specified timeslot
            </summary>
            <param name="timeslotIndex">Index of the timeslot</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotPositionInfo.GetItemPosition(Infragistics.DateRange)">
            <summary>
            Helper method for calculating the position of a timeslot/activity based on a given start/end time.
            </summary>
            <param name="range">The range whose position is to be returned</param>
            <returns>The position or null if its not within the time slot range</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase.TimeslotPositionInfo.GetItemPosition(System.DateTime,System.DateTime)">
            <summary>
            Helper method for calculating the position of a timeslot/activity based on a given start/end time.
            </summary>
            <param name="start">The start of the range</param>
            <param name="end">The non-inclusive end of the range. Note if its the start value then it will be considered inclusive</param>
            <returns>The position or null if its not within the time slot range</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.GetFlag(Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.AlignToTimeslot">
            <summary>
            Returns or sets whether an activity is aligned to the leading and trailing edges of the associated timeslots.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MinEmptySpace">
            <summary>
            The minimum amount of open space to leave between the activity and the edge of the panel in the orientation opposite to the timeslot orientation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.SortByTimeslotCountFirst">
            <summary>
            Used to indicate that elements that occupy multiple timeslots 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MajorTimeslotRange.DateRange">
            <summary>
            Returns the date range that the major range represents
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MajorTimeslotRange.RangePosition">
            <summary>
            Position of the entire major range (from first in major to last in major)
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MajorTimeslotRange.LastMajorPosition">
            <summary>
            The position of the last in major timeslot
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MajorTimeslotRange.IsNearNeeded">
            <summary>
            Indicates if the near indicator is needed
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleActivityPanel.MajorTimeslotRange.IsFarNeeded">
            <summary>
            Indicates if the far indicator is needed
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel">
            <summary>
            Base class for a panel that displays the elements created for items that implement <see cref="T:Infragistics.ISupportRecycling"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsFirstItemProperty">
            <summary>
            Identifies the IsFirstItem attached dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.GetIsFirstItem(System.Windows.DependencyObject)">
            <summary>
            Returns a boolean indicating if the child is the first item in the source collection.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsFirstItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.SetIsFirstItem(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.SetIsFirstItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the attached IsFirstItem DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsFirstItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.GetIsFirstItem(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsLastItemProperty">
            <summary>
            Identifies the IsLastItem attached dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.GetIsLastItem(System.Windows.DependencyObject)">
            <summary>
            Returns a boolean indicating if the child is the first item in the source collection.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsLastItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the attached IsLastItem DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.IsLastItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.GetIsLastItem(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.Items">
            <summary>
            Returns or sets the recyclable items in the specified collection
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.Orientation">
            <summary>
            Returns or sets the orientation in which the items will be arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleItemsPanel.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel">
            <summary>
            Custom panel that will position a specific # of items to fill the provided space horizontally or vertically based upon the Orientation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.InterItemSpacingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.InterItemSpacing"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.HasLogicalOrientation">
            <summary>
            Returns true to indicate that the panel supports arranging the children in a single orientation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.LogicalOrientation">
            <summary>
            Returns the default orientation in which the children are arranged.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.InterItemSpacing">
            <summary>
            Returns or sets the amount of space between each item.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleStackPanel.InterItemSpacingProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel">
            <summary>
            Custom items panel used to display items with their preferred size unless there isn't enough room.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.InterTabSpacingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.InterTabSpacing"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.TabLayoutStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.TabLayoutStyle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.InterTabSpacing">
            <summary>
            Returns or sets the amount of space between each item.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.InterTabSpacingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.TabLayoutStyle">
            <summary>
            Returns or sets an enumeration that determines how the items are arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleTabPanel.TabLayoutStyleProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel">
            <summary>
            Custom panel used to display elements for groups of timeslots.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsClippedProperty">
            <summary>
            Identifies the read-only IsClipped attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsClipped(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsClipped(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached IsClipped DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsClippedProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsStartInViewProperty">
            <summary>
            Identifies the read-only IsStartInView attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsStartInView(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsStartInView(System.Windows.DependencyObject)">
            <summary>
            Gets a boolean indicating if the leading edge of the element is in view.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsStartInViewProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsEndInViewProperty">
            <summary>
            Identifies the read-only IsEndInView attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsEndInView(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.GetIsEndInView(System.Windows.DependencyObject)">
            <summary>
            Gets a boolean indicating if the trailing edge of the element is in view.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotGroupPanel.IsEndInViewProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotPanel">
            <summary>
            Custom panel used to arrange time slot elements like those in a Day, Week or ScheduleView in Outlook.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotPanel"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsFirstItemProperty">
            <summary>
            Identifies the IsFirstItem attached dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.GetIsFirstItem(System.Windows.DependencyObject)">
            <summary>
            Returns a boolean indicating if the child is the first item in the source collection.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsFirstItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.SetIsFirstItem(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.SetIsFirstItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the attached IsFirstItem DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsFirstItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.GetIsFirstItem(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsLastItemProperty">
            <summary>
            Identifies the IsLastItem attached dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.GetIsLastItem(System.Windows.DependencyObject)">
            <summary>
            Returns a boolean indicating if the child is the first item in the source collection.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsLastItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the attached IsLastItem DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.IsLastItemProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.GetIsLastItem(System.Windows.DependencyObject)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.HasLogicalOrientation">
            <summary>
            Returns true to indicate that the panel supports arranging the children in a single orientation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.LogicalOrientation">
            <summary>
            Returns the default orientation in which the children are arranged.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.NowTimeIndicatorHelper.CalculateNowOffset">
            <summary>
            For a control like dayview, the timeslot headers are shared across dates so we need to adjust 
            what we consider Now when seeing if a timeslot is in view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPanel.NowTimeIndicatorHelper.Now">
            <summary>
            Returns the current time based on the range of slots displayed by the control
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator">
            <summary>
            Custom element that represents the location of the current time in a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> when the current date is within the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> of the owning control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBackground">
            <summary>
            Returns the brush to use for the Background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBackgroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBorderBrush">
            <summary>
            Returns the brush to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.ComputedBorderBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.Orientation">
            <summary>
            Returns or sets the orientation of the indicator.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CurrentTimeIndicator.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea">
            <summary>
            Custom <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> used within a <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea">
            <summary>
            Represents the timeline for a specific time zone in a <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.TimeslotHeaderAreaAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when the mouse wheel has been scrolled
            </summary>
            <param name="e">Provides information about the event.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea.Timeslots">
            <summary>
            Returns or sets the collection of timeslots that represent the headers
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.ComputedMarginProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.ComputedMargin"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.ComputedMargin">
            <summary>
            Returns the margin to use for the Panel based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea.ComputedMarginProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader">
            <summary>
            Custom element that displays the name of the associated logical day below the timeslot headers.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.ScheduleViewDayHeaderAutomationPeer"/></returns>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBackgroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBackground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBorderBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.DateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.Date"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBackground">
            <summary>
            Returns the brush to use for the Background based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBackgroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBorderBrush">
            <summary>
            Returns the brush to use for the BorderBrush based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedBorderBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.Date">
            <summary>
            Returns the logical day that the element represents
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.ScheduleViewDayHeader.DateProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea">
            <summary>
            Custom <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> used within a <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeader">
            <summary>
            A custom <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader"/> that represents the time label for a timeslot in a <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader">
            <summary>
            Represents the header for a given time range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase">
            <summary>
            Represents a specific range of time.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDay"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInMajorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInMajor"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInMajorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInMajor"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDay"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDay">
            <summary>
            Returns a boolean indicating if this is the first timeslot for the containing date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDayProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInMajor">
            <summary>
            Returns a boolean indicating if this is element is considered a major change in the timeslot interval such as a change in hour.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInMajorProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInMajor">
            <summary>
            Returns a boolean indicating if this is element is considered a major change in the timeslot interval such as a change in hour.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInMajorProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDay">
            <summary>
            Returns a boolean indicating if this is the last timeslot for the containing date.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDayProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ComputedForegroundProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ComputedForeground"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkKindProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkKind"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ShowAMPMDesignatorProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ShowAMPMDesignator"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TickmarkBrushProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TickmarkBrush"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkKindProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkKind"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ComputedForeground">
            <summary>
            Returns the brush to use for the Foreground based on the element's state and the associated <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ComputedForegroundProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkKind">
            <summary>
            Returns the kind of tickmark at the beginning of the timeslot (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkKindProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkVisibility">
            <summary>
            Returns the visibility of the leading tickmark (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.LeadingTickmarkVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ShowAMPMDesignator">
            <summary>
            Returns a boolean indicating if the element represents the first visible time slot for the AM/PM hours.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.ShowAMPMDesignatorProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TickmarkBrush">
            <summary>
            Returns the brush to use for the background of the tickmarks
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TickmarkBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkKind">
            <summary>
            Returns the kind of tickmark at the end of the timeslot (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkKindProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkVisibility">
            <summary>
            Returns the visibility of the trailing tickmark (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeader.TrailingTickmarkVisibilityProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeader"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeader">
            <summary>
            A custom <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader"/> that represents the label for a timeslot in a <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeader.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeader"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark">
            <summary>
            Represents a specific tick mark in a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeader"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.KindProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.Kind"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.Orientation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.Kind">
            <summary>
            Determines the kind of tickmark
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.KindProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.Orientation">
            <summary>
            Gets/sets the orientation of the tickmark
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark.OrientationProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter">
            <summary>
            Represents a specific <see cref="T:Infragistics.Controls.Schedules.Primitives.Timeslot"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsWorkingHourProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsWorkingHour"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrush">
            <summary>
            Determines the brush that will be used to draw borders on timeslots whose start and/or end times border days
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThickness"/>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThickness">
            <summary>
            Determines which border to draw around timeslots whose start and/or end times border days
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrush"/>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThicknessProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderVisibility">
            <summary>
            Determines the visibility of the day borders
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsFirstInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenterBase.IsLastInDay"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderThickness"/>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.DayBorderBrushProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsSelected">
            <summary>
            Returns a boolean indicating if the object is currently selected.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsSelectedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsWorkingHour">
            <summary>
            Returns a boolean indicating if the timeslot represents a working hour for the current associated <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.TimeslotPresenter.IsWorkingHourProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityFeature">
            <summary>
            Used to specify which activityfeatures are supported.
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.Recurrence">
            <summary>
            Recurring activities.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.Variance">
            <summary>
            Modifying an occurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.TimeZoneNeutrality">
            <summary>
            Making an activity time-zone neutral.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.Reminder">
            <summary>
            Reminders.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.CanChangeOwningCalendar">
            <summary>
            Whether owning calendar of an activity can be changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.CanChangeOwningResource">
            <summary>
            Whether owning resource of an activity can be changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityFeature.EndTime">
            <summary>
            Whether the activity supports end time.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityOperation">
            <summary>
            Enum that lists operations that can be performed on an activity.
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityOperationAllowed(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityOperationAllowed(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityOperation.Edit">
            <summary>
            Whether an activity can be modified.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityOperation.Add">
            <summary>
            Wheher an activity can be added.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityOperation.Remove">
            <summary>
            Whether an activity can be removed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags">
            <summary>
            Used to specify <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.RequestedInformation"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.None">
            <summary>
            No information will be retrieved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.ActivitiesWithinDateRanges">
            <summary>
            Activities that intersect with one of the date ranges in the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> are to be retrieved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.HasPreviousActivity">
            <summary>
            Whether an activity exists before the earliest of the dates in the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> is to be ascertained.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.HasNextActivity">
            <summary>
            Whether an activity exists after the latest of the dates in the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> is to be ascertained.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.PreviousActivity">
            <summary>
            The latest activity before the earliest of the dates in the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> is to be retrieved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.NextActivity">
            <summary>
            The earliest activity after the latest of the dates in the <see cref="T:Infragistics.Controls.Schedules.ActivityQuery"/>'s <see cref="P:Infragistics.Controls.Schedules.ActivityQuery.DateRanges"/> is to be retrieved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityQueryRequestedDataFlags.All">
            <summary>
            All of above.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityType">
            <summary>
            Enum that lists the four activity types.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityType.Appointment">
            <summary>
            Appointment activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityType.Journal">
            <summary>
            Journal activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityType.Task">
            <summary>
            Task activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityTypes">
            <summary>
            Flagged enum that lists the four activity types.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityTypes.Appointment">
            <summary>
            Appointment activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityTypes.Journal">
            <summary>
            Journal activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityTypes.Task">
            <summary>
            Task activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ActivityTypes.All">
            <summary>
            All activity types.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AllowActivityDragging">
            <summary>
            Used to specify <see cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowDragging"/> property.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowDragging"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityDragging.No">
            <summary>
            Activity dragging is not allowed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityDragging.WithinCalendar">
            <summary>
            Activity can be dragged within the same calendar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityDragging.WithinResource">
            <summary>
            Activity can be dragged within the same resource's calendars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityDragging.AcrossResources">
            <summary>
            Activity can be dragged to a different resource' calendar.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AllowActivityResizing">
            <summary>
            Indicates whether an activity may be resized in the ui and if so what types of resizing are allowed.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ActivitySettings.AllowResizing"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityResizing.No">
            <summary>
            The activity cannot be resized in the ui.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityResizing.Start">
            <summary>
            Only the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> may be adjusted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityResizing.End">
            <summary>
            Only the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> may be adjusted thereby only changing the duration.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AllowActivityResizing.StartAndEnd">
            <summary>
            The end user may resize the leading or trailing edge and therefore change either the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> or <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.SaveAndClose">
            <summary>
            Saves the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object that is hosting it. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.Close">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.Delete">
            <summary>
            Deletes the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> currently being edited in the <see cref="T:Infragistics.Controls.Schedules.Primitives.AppointmentDialogCore"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.DisplayRecurrenceDialog">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> Recurrence dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.ShowTimeZonePickers">
            <summary>
            Shows the time zone pickers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.AppointmentDialogCoreCommand.HideTimeZonePickers">
            <summary>
            Hides the time zone pickers.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarDisplayMode">
            <summary>
            Determines how calendars are displayed within a <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayMode"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarDisplayMode.Overlay">
            <summary>
            The calendars are displayed in groups based on the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarDisplayMode.Separate">
            <summary>
            Each visible <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> in the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/> is displayed as a separate group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarDisplayMode.Merged">
            <summary>
            All of the visible <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances in the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.VisibleCalendars"/> of the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/> are displayed in a single group.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CalendarHeaderCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarHeaderCommand.Close">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.CalendarHeaderCommand.ToggleOverlayMode">
            <summary>
            Toggles the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/> object between 'OverLay' and 'Side-By-Side' mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.OfficeColorScheme">
            <summary>
            Determines the overall color scheme to use for all controls associated with a specific <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OfficeColorScheme.Blue">
            <summary>
            This corresponds to the Office blue color scheme. This is the default.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OfficeColorScheme.Black">
            <summary>
            This corresponds to the Office black color scheme. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.OfficeColorScheme.Silver">
            <summary>
            This corresponds to the Office silver color scheme. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.PromptForLocalTimeZone">
            <summary>
            Determines if a dialog will be displayed asking the user to select a local time zone.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.PromptForLocalTimeZone"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.PromptForLocalTimeZone.OnlyIfRequired">
            <summary>
            The <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/> will be displayed when the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> is initialized if the local time zone has not been specified or deduced.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.PromptForLocalTimeZone.Always">
            <summary>
            The <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/> will be displayed every time the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> is initialized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.PromptForLocalTimeZone.Never">
            <summary>
            A dialog is never displayed
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceChooserDialogCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserDialogCommand.SaveAndClose">
            <summary>
            Accepts the Recurrence choice and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserDialogCommand.Close">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> without accepting any choice. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceChooserAction">
            <summary>
            An enumeration used to determine whether the dialog should be displayed and if so which action should be taken.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserAction.Prompt">
            <summary>
            Display a dialog to the end user to allow them to choose between changing the occurrence or the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserAction.Series">
            <summary>
            Do not prompt but continue with the operation using the recurrence root.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserAction.Occurrence">
            <summary>
            Do not prompt but continue with the operation using the occurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserAction.Cancel">
            <summary>
            Do not prompt and do not continue with the operation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceChooserChoice">
            <summary>
            An enumeration indicating the choice that was made in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserChoice.None">
            <summary>
            No choice was made
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserChoice.Series">
            <summary>
            Series was chosen.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserChoice.Occurrence">
            <summary>
            Occurrence was chosen.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceChooserType">
            <summary>
            An enumeration of the different types of <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/>s.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserType.ChooseForDeletion">
            <summary>
            The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> will display choices for deleting a Recurrence Series or Occurrence.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceChooserType.ChooseForOpening">
            <summary>
            The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> will display choices for opening a Recurrence Series or Occurrence.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.RecurrenceDialogCoreCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceDialogCoreCommand.SaveAndClose">
            <summary>
            Saves the changes (if any) in the Recurrence information and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceDialogCoreCommand.Close">
            <summary>
            Closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> object without saving changes (if any) in the Recurrence information.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.RecurrenceDialogCoreCommand.RemoveRecurrence">
            <summary>
            Removes the recurrence definition from the <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> being edited and closes the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ReminderDialogCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ReminderDialogCommand.DismissAll">
            <summary>
            Dismisses all the reminders in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ReminderDialogCommand.OpenSelected">
            <summary>
            Opens the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> dialog for all currently selected reminder(s) that represent a reminder for an <see cref="T:Infragistics.Controls.Schedules.Appointment"/> activity type. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ReminderDialogCommand.DismissSelected">
            <summary>
            Dismisses the currently selected reminder(s) in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ReminderDialogCommand.SnoozeSelected">
            <summary>
            Snoozes the currently selected reminder(s) in the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ResourceRights">
            <summary>
            Represents rights that a resource has over one or more activities.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanViewAsFreeBusy">
            <summary>
            This resource can view free-busy time, essentially that an activity exists in the schedule 
            but not the details of the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanViewFullDetails">
            <summary>
            This resource can view full details of the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanAddSelfAsParticipant">
            <summary>
            This resource can add himself or herself as a participat in the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanAddOthersAsParticipant">
            <summary>
            This resource can add other resources as participants in the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanChangeTime">
            <summary>
            This resource can change the date and time of the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.CanRemove">
            <summary>
            This resource can remove the activity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ResourceRights.FullRights">
            <summary>
            This resource has full rights to the activity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleControlCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.DeleteSelectedActivities">
            <summary>
            Deletes all activites in the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities"/> collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.ActivityNext">
            <summary>
            Activates the next activity relative to the current selection based on the dates currently in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.ActivityPrevious">
            <summary>
            Activates the previous activity relative to the current selection based on the dates currently in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotAbove">
            <summary>
            Navigates to the time slot above the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotLeft">
            <summary>
            Navigates to the time slot to the left of the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotRight">
            <summary>
            Navigates to the time slot to the right of the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotBelow">
            <summary>
            Navigates to the time slot below the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.CalendarGroupNext">
            <summary>
            Changes the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> to the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar"/> of the next <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.CalendarGroupPrevious">
            <summary>
            Changes the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> to the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar"/> of the previous <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.CalendarGroupPageNext">
            <summary>
            Changes the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> to the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar"/> of the end of the current page of groups in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.CalendarGroupPagePrevious">
            <summary>
            Changes the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> to the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar"/> of the beginning of the current page of groups in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftPageNext">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that they start after the last date currently in the collection attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftPagePrevious">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that they end just before the first date currently in the collection attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesPageNext">
            <summary>
            Updates the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> such that they have the same number of timeslot groups but they start based on an offset of the number of timeslot groups from the first date in the selection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesPagePrevious">
            <summary>
            Updates the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> such that they have the same number of timeslot groups but they end just before the first date currently in the collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftNext">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that they start after the first timeslot group currently in the collection attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftPrevious">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that they end just before the first timeslot group currently in the collection attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftWeekNext">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that the start 7 days before the first date in the VisibleDates attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.VisibleDatesShiftWeekPrevious">
            <summary>
            Adjusts the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> to be offset such that the start 7 days after the first date in the VisibleDates attempting to maintain the offset, if any, between the VisibleDates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotFirstDayOfWeek">
            <summary>
            Navigates to the first day of the week based on the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> adjusting the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> if necessary.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.TimeslotLastDayOfWeek">
            <summary>
            Navigates to the last day of the week based on the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> adjusting the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> if necessary.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.NavigateHome">
            <summary>
            For controls like XamScheduleView and XamDayView, Home will navigate to the first working hour timeslot and to the first timeslot in the day when the control key is pressed. For XamMonthView, Home will navigate to the first day of week or the first day in view when the control key is pressed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.NavigateEnd">
            <summary>
            For controls like XamScheduleView and XamDayView, End will navigate to the last working hour timeslot and to the last timeslot in the day when the control key is pressed. For XamMonthView, End will navigate to the last day of week or the last day in view when the control key is pressed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.NavigatePageUp">
            <summary>
            For XamDayView, this will scroll up a page in timeslots. For XamScheduleView this navigates up in the groups. For XamMonthView this scrolls up based on the number of weeks in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.NavigatePageDown">
            <summary>
            For XamDayView, this will scroll down a page in timeslots. For XamScheduleView this navigates down in the groups. For XamMonthView this scrolls down based on the number of weeks in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.CreateInPlaceActivity">
            <summary>
            Creates a new activity in place based on the current <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> for the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> assuming there are timeslots selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.Today">
            <summary>
            Navigates to the current date
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.EditSelectedActivity">
            <summary>
            Puts the selected activity into edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlCommand.DisplayDialogsForSelectedActivities">
            <summary>
            Displays the activity dialog for the currently <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleErrorDisplayType">
            <summary>
            An enumeration used to indicate the type of ui containing the error information that will be displayed to the end user.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleErrorDisplayType.ActivityErrorIcon">
            <summary>
            By default an error icon is displayed within the associated <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/> and in its associated ToolTip.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleErrorDisplayType.MessageBox">
            <summary>
            A message box will be displayed to the end user.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleErrorDisplayType.BlockingError">
            <summary>
            Sets the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.BlockingError"/> of the controls associated with the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>. The default ControlTemplate for the view controls will display an overlay including the error message.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleTabLayoutStyle">
            <summary>
            Enumeration used to define the type of layout used when arranging the tab items in a ScheduleTabPanel
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTabLayoutStyle.SingleRowAutoSize">
            <summary>
            The items are sized based on their content and arranged in a single row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTabLayoutStyle.SingleRowJustified">
            <summary>
            The items are sized based on their content size and then reduced towards their minimum size if there is not enough room to fit the items. The items are arranged within a single row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTabLayoutStyle.SingleRowSizeToFit">
            <summary>
            The items are sized based on their content size and then increased in size if there is more room to display the items than required. The items are arranged within a single row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.VisibleDateAdjustment.SingleItem">
            <summary>
            Adjust by a single day. For a control displaying weeks this is the same as Week.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.VisibleDateAdjustment.Week">
            <summary>
            Adjust by 7 days.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.VisibleDateAdjustment.Page">
            <summary>
            Adjust based on the number of timeslot groups.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WcfSchedulePollingMode">
            <summary>
            Represents the various polling modes available on the <see cref="T:Infragistics.Controls.Schedules.WcfListScheduleDataConnector"/> to poll 
            for changes from the server. Polling only works when the item sources on the service send out list change 
            notifications.
            </summary>
            <see cref="P:Infragistics.Controls.Schedules.WcfListScheduleDataConnector.PollingMode"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfSchedulePollingMode.RequeryOnAnyChange">
            <summary>
            Polling will indicate which item sources have changed, at which point the client will requery the 
            items from that item source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfSchedulePollingMode.Detailed">
            <summary>
            Polling will return detailed changes to individual items in the item sources.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WcfSchedulePollingMode.None">
            <summary>
            No polling should be done.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WeekDisplayMode">
            <summary>
            Enumeration used to determine which dates are displayed within the <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/>
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayMode"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSource"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WeekDisplayMode.None">
            <summary>
            The dates displayed in the <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/> is based upon the dates in the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates"/> and may be discontiguous.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WeekDisplayMode.WorkWeek">
            <summary>
            The dates displayed in the <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/> are the working days in the week containing with the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> Start. The working hour information is based upon the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WeekDisplayMode.Week">
            <summary>
            The dates displayed in the <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/> are the 7 days in the week containing with the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> Start.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.WorkingHoursSource">
            <summary>
            Used to determine what objects are considered when calculating the working hours and work day information.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WorkingHoursSource.CurrentUser">
            <summary>
            The working hours of the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/> are used to determine which timeslots are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.WorkingHoursSource.AllResourcesInGroups">
            <summary>
            The working hours of all the resources within the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsResolved"/> are unioned together.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.ActivityContentArea">
            <summary>
            Specifies specific area of an <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityPresenter"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentArea.Prefix">
            <summary>
            Contains optional start date or time text.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentArea.Suffix">
            <summary>
            Contains optional end date or time text.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentArea.Content">
            <summary>
            Contains the Subject and Location information.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ActivityContentArea.Indicators">
            <summary>
            Contains the state indicators, e.g. recurrence, reminder, pending operation etc..
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId">
            <summary>
            Identifies a specific brush
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.GetBrush(Infragistics.Controls.Schedules.Primitives.CalendarBrushId)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AlternateMonthDayBackground">
            <summary>
            Background for days in alternate months
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AppointmentBackground">
            <summary>
            Background for appointments
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AppointmentBorder">
            <summary>
            Border around appointments
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AppointmentDateTimeForeground">
            <summary>
            Foreground for appointment date times
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AppointmentForeground">
            <summary>
            Foreground for appointments
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.AppointmentForegroundOverlayed">
            <summary>
            Foreground for appointments that are not owned by the selected calendar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.BlockingErrorBackground">
            <summary>
            Background for a blocking error message
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.BlockingErrorForeground">
            <summary>
            Foreground for a blocking error message
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.BlockingErrorHeaderForeground">
            <summary>
            Foreground for a blocking error message header
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CalendarBorder">
            <summary>
            Border around calendars
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CalendarHeaderBackground">
            <summary>
            Background for calendar headers
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CalendarHeaderForeground">
            <summary>
            Foreground for calendar headers
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentDayBorder">
            <summary>
            Border around the currect day
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentDayBorderMonthCalendar">
            <summary>
            Border around the currect day in the XamMonthCalendar
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentDayHeaderBackground">
            <summary>
            Background for the current day header
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentDayHeaderForeground">
            <summary>
            Foreground for the current day header
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentTimeIndicatorBackground">
            <summary>
            Backfround for the current time
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.CurrentTimeIndicatorBorder">
            <summary>
            Border around the current time
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DayBackground">
            <summary>
            Background for days 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DayBorder">
            <summary>
            Border for days 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DayHeaderBackground">
            <summary>
            Background for day headers 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DayHeaderForground">
            <summary>
            Foreground for day headers 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DialogBackground">
            <summary>
            Background for XamSchedule dialogs 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.DialogForeground">
            <summary>
            Foreground for XamSchedule dialogs 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.HotTrackingMoreActivityIndicatorFill">
            <summary>
            Brush used to fill the <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/> when the mouse is over the element
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.JournalBackground">
            <summary>
            Background for journals 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.JournalBorder">
            <summary>
            Border around journals 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.JournalDateTimeForeground">
            <summary>
            Foreground for journal date times
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.JournalForeground">
            <summary>
            Foreground for journals 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.JournalForegroundOverlayed">
            <summary>
            Foreground for journal entries that are not owned by the selected calendar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MoreActivityIndicatorFill">
            <summary>
            Brush used to fill the <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MonthViewBackground">
            <summary>
            Background for <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MonthViewDayOfWeekHeaderBackground">
            <summary>
            Background for the day of week header in <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MonthViewDayOfWeekHeaderBorder">
            <summary>
            Border for the day of week header in <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MonthViewDayOfWeekHeaderForeground">
            <summary>
            Foreground for the day of week header in <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MoreActivityIndicatorStroke">
            <summary>
            Brush used to draw the edge of the <see cref="T:Infragistics.Controls.Schedules.Primitives.MoreActivityIndicator"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.MultiDayActivityAreaBackground">
            <summary>
            Background for the multi day activity area
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.NonWorkingHourTimeslotBackground">
            <summary>
            Background for timeslots that are not within the working hour range
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.NonWorkingHourTimeslotMinorBorder">
            <summary>
            Border brush for timeslots that are not on an hour border and are not within the working hour range
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.RibbonLiteBackgroundBrush">
            <summary>
            Background brush for the AppointmentDialogRibbonLite 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.RibbonLiteGroupOuterBorderBrush">
            <summary>
            Border brush for Group outer borders in the AppointmentDialogRibbonLite 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.RibbonLiteGroupInnerBorderBrush">
            <summary>
            Border brush for Group inner borders in the AppointmentDialogRibbonLite 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.SelectedActivityBorder">
            <summary>
            Border brush for selected activities
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.SelectedMultiDayActivityAreaBackground">
            <summary>
            Background for selected all day event area 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.SelectedDayBackgroundMonthView">
            <summary>
            Background for selected days in the XamMonthView
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.SelectedTimeslotBackground">
            <summary>
            Background for selected timeslots 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TaskBackground">
            <summary>
            Background for tasks 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TaskBorder">
            <summary>
            Border around tasks 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TaskDateTimeForeground">
            <summary>
            Foreground for task date times
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TaskForeground">
            <summary>
            Foreground for tasks 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TaskForegroundOverlayed">
            <summary>
            Foreground for tasks that are not owned by the selected calendar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotMajorBorder">
            <summary>
            Border brush for timeslots that are on an hour border 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotDayBorder">
            <summary>
            Border brush for timeslots that border a day 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderAreaBackgroundDayView">
            <summary>
            Brush for background of the <see cref="T:Infragistics.Controls.Schedules.Primitives.DayViewTimeslotHeaderArea"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderAreaBackgroundScheduleView">
            <summary>
            Brush for background of the <see cref="T:Infragistics.Controls.Schedules.Primitives.ScheduleViewTimeslotHeaderArea"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderAreaSeparator">
            <summary>
            The border separating the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderArea"/> in a <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderForegroundDayView">
            <summary>
            Brush for timeslot Foreground in the XamDayView
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderForegroundScheduleView">
            <summary>
            Brush for timeslot Foreground in the XamScheduleView
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderTickmarkDayView">
            <summary>
            Brush for timeslot Tickmarks in the XamDayView
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.TimeslotHeaderTickmarkScheduleView">
            <summary>
            Brush for timeslot Tickmarks in the XamScheduleView
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.ToolTipBackground">
            <summary>
            Background for tooltips
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.ToolTipBorder">
            <summary>
            Brush for the border of tooltips
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.ToolTipErrorForeground">
            <summary>
            Foreground for error text in tooltips
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.ToolTipForeground">
            <summary>
            Foreground for tooltips
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.WeekHeaderBackground">
            <summary>
            Background of week headers 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.WeekHeaderBorder">
            <summary>
            Border around week headers 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.WeekHeaderForeground">
            <summary>
            Foreground for week headers 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.WorkingHourTimeslotBackground">
            <summary>
            Background for timeslots that are within the working hour range
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushId.WorkingHourTimeslotMinorBorder">
            <summary>
            Border brush for timeslots that are not on an hour border and are within the working hour range
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddType.None">
            <summary>
            No click to add functionality
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddType.Appointment">
            <summary>
            A standard appointment
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddType.NonIntersectingAppointment">
            <summary>
            A standard appointment as long as it does not intersect with another standard appointment
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.ClickToAddType.Event">
            <summary>
            A timezone neutral appointment
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType">
            <summary>
            Specifies how to format a specific date
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.None">
            <summary>
            Return an empty string
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.DayOfWeek">
            <summary>
            The full day of the week string e.g. 'Tuesday', 'Wednesday' etc.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.DayOfMonthNumber">
            <summary>
            The day of the month string e.g. '1'thru '31'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.FullDateTime">
            <summary>
            Uses the full date time pattern to format the date and time, e.g. 'Thursday, July 22, 2010 4:31:00 PM'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.Hour">
            <summary>
            The hour of the day string e.g. '1' thru '12' or '0' thru '23'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.LongDate">
            <summary>
            Uses the long date pattern to format the date, e.g. 'Sunday, July 25, 2010'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.LongTime">
            <summary>
            Uses the long time pattern to format the date, e.g. '4:31:00 PM'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.Minute">
            <summary>
            The minute of the hour string e.g. '0' thru '59',
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.MonthDay">
            <summary>
            The month and the day e.g. August 25.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.MonthOfYearNumber">
            <summary>
            The month of the year string e.g. '1' thru '12'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortDate">
            <summary>
            Uses the short date pattern to format the date, e.g. '7/22/2010'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortTime">
            <summary>
            Uses the short time pattern to format the date, e.g. '4:31 PM'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortDayOfWeek">
            <summary>
            An abbreviated day of the week string e.g. 'Tue', 'Wed' etc.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortestDayOfWeek">
            <summary>
            The shorted day of the week string e.g. 'Tu', 'We' etc. Note: in Silverlight this is the same as 'ShortDayOfWeek'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortMonthDay">
            <summary>
            The month and the day e.g. Aug 25.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.ShortestMonthDay">
            <summary>
            The month and the day e.g. 8/25.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.YearMonth">
            <summary>
            The year and the month e.g. 'July, 2010'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.Year2Digit">
            <summary>
            The year with 2 digits e.g. 2010 as '10'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateTimeFormatType.Year4Digit">
            <summary>
            The year with 4 digits e.g. '2010'.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType">
            <summary>
            Specifies how to format a date range
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.None">
            <summary>
            Return an empty string
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.ActivityToolTip">
            <summary>
            Format the date range to be used in an activity tooltip
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.EndDateOutOfView">
            <summary>
            Format the end date to be used in the out of view indicator
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.EndTimeOnly">
            <summary>
            Format the end time only.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.MonthDayHeader">
            <summary>
            The month day header which displays the month name and day number.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.MonthDayHeaderFull">
            <summary>
            The month day header pattern which displays the month day and year.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.ShortWeekHeader">
            <summary>
            Format the date range to be used in the header of the week view when the WeekHeader formatted value cannot be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.StartAndEndTime">
            <summary>
            Format the start and end time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.StartDateOutOfView">
            <summary>
            Format the start date to be used in the out of view indicator
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.StartTimeOnly">
            <summary>
            Format the start time only.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.DateRangeFormatType.WeekHeader">
            <summary>
            Format the date range to be used in the header of the week view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.TimeslotTickmarkKind">
            <summary>
            Determines the kind of tickmark is represented by a specific <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotHeaderTickmark"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotTickmarkKind.Minor">
            <summary>
            The tick mark represents a time that is between major spans.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotTickmarkKind.Major">
            <summary>
            The tick mark represents a time that is at the beginning/end of a major span.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.TimeslotTickmarkKind.Day">
            <summary>
            The tick mark represents a time that is at the beginning/end of a day.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityEventArgs">
            <summary>
            Base class for activity event args.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity"><see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity">
            <summary>
            The activity for which the operation is being performed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CancellableActivityEventArgs">
            <summary>
            Base class for activity event args that are cancellable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CancellableActivityEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity"><see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CancellableActivityEventArgs.Cancel">
            <summary>
            Specifies whether to cancel the operation.
            </summary>
            <remarks>
            <para class="body">
            You can set this property to true to cancel the operation being performed.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivitiesEventArgs">
            <summary>
            Base class for an event that potentially involves multiple <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivitiesEventArgs.#ctor(System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase})">
            <summary>
            Initialize a new <see cref="T:Infragistics.Controls.Schedules.ActivitiesEventArgs"/>
            </summary>
            <param name="activities">The activities being dragged</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitiesEventArgs.Activities">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instances
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.CancellableActivitiesEventArgs">
            <summary>
            Base class for a cancellable event that potentially involves multiple <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.CancellableActivitiesEventArgs.#ctor(System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase})">
            <summary>
            Initialize a new <see cref="T:Infragistics.Controls.Schedules.CancellableActivitiesEventArgs"/>
            </summary>
            <param name="activities">The activities being dragged</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.CancellableActivitiesEventArgs.Cancel">
            <summary>
            Specifies whether to cancel the operation.
            </summary>
            <remarks>
            <para class="body">
            You can set this property to true to cancel the operation being performed.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragging"/> event
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs.#ctor(System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs"/>
            </summary>
            <param name="activities">1 or more activities that are being dragged</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragged"/> event
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs.#ctor(System.Collections.Generic.IList{Infragistics.Controls.Schedules.ActivityBase},System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs"/>
            </summary>
            <param name="activities">1 or more activities that are being dragged</param>
            <param name="isCopy">True if the drag resulted in a copy of the activities.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs.IsCopy">
            <summary>
            Returns true if the drag operation resulted in a copy of the activities.
            </summary>
            <remarks>
            <p class="body">If true then the activities provided are the new activities that were created.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityAddedEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity that was added.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityAddedEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity"><see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityAddingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity being added.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityAddingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">ActivityBase object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityChangedEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityChangedEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">Activity object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityChangingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityChangingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">Activity object.</param>
            <param name="originalActivityData">Original activity data.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityChangingEventArgs.OriginalActivityData">
            <summary>
            Used to get the original activity data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceChooserDialogDisplaying"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.RecurrenceChooserType)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs"/>
            </summary>
            <param name="activity">The activity for which the chooser is to be displayed</param>
            <param name="chooserType">The operation for which the dialog is being displayed</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs.ChooserType">
            <summary>
            Returns an enumeration indicating the type of operation to be performed on the occurrence/series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs.ChooserAction">
            <summary>
            Returns or sets the action that should be taken by the object initiating the event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity for which the dialog is
            being displayed.
            </para>
            <para class="body">
            You can set the <see cref="P:Infragistics.Controls.Schedules.CancellableActivityEventArgs.Cancel"/> property to true to prevent 
            the dialog from being displayed. This can also be useful when you want to display your own dialog 
            instead of the default built-in dialog.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">ActivityBase derived object.</param>
            <param name="allowModifications">Whether the user can modify the activity.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs.AllowModifications">
            <summary>
            Specifies whether the user is allowed to modify the activity.
            </summary>
            <remarks>
            <para class="body">
            The activity dialog can be displayed in read-only mode where the user is not
            allowed to modify the contents. You can force the dialog to be read-only by setting
            this property to false or force the dialog to be modifiable by setting this property
            to true.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceDialogDisplaying"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity for which the dialog is
            being displayed.
            </para>
            <para class="body">
            You can set the <see cref="P:Infragistics.Controls.Schedules.CancellableActivityEventArgs.Cancel"/> property to true to prevent 
            the dialog from being displayed. This can also be useful when you want to display your own dialog 
            instead of the default built-in dialog.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">ActivityBase derived object.</param>
            <param name="allowModifications">Whether the user can modify the activity.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs.AllowModifications">
            <summary>
            Specifies whether the user is allowed to modify the contents of the dialog.
            </summary>
            <remarks>
            <para class="body">
            The <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> can be displayed in read-only mode where the user is not
            allowed to modify the contents. You can force the dialog to be read-only by setting
            this property to false or force the dialog to be modifiable by setting this property
            to true.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityRemovedEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoved"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity that was removed.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityRemovedEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity"><see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityRemovingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ActivityEventArgs.Activity"/> property returns the activity being removed.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityRemovingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">ActivityBase object.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityResizingEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResizing"/> event
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityResizingEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ActivityResizingEventArgs"/>
            </summary>
            <param name="activity">The activity to be resized</param>
            <param name="isAdjustingStart">True if the start time is being adjusted; otherwise false if the end/duration is being adjusted</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ActivityResizingEventArgs.IsAdjustingStart">
            <summary>
            Returns a boolean indicating whether the <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> or <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> is being adjusted.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ActivityResizedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResized"/> event
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ActivityResizedEventArgs.#ctor(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ActivityResizedEventArgs"/>
            </summary>
            <param name="activity">The activity that was resized</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs">
            <summary>
            Event arguments for the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ErrorDisplaying"/> event
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.#ctor(Infragistics.DataErrorInfo,Infragistics.Controls.Schedules.ScheduleErrorDisplayType)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs"/>
            </summary>
            <param name="error">The error for which the message is to be displayed</param>
            <param name="displayType">Indicates the type of display that will be used to present the error to the user</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.Cancel">
            <summary>
            Specifies whether to cancel the operation.
            </summary>
            <remarks>
            <para class="body">
            You can set this property to true to prevent the error from being displayed.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.DisplayType">
            <summary>
            Returns an enumerating indicating the type of error ui that will be displayed if the event is not cancelled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.Error">
            <summary>
            Returns an object that contains the error information.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ErrorEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/> event.
            </summary>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Controls.Schedules.ErrorEventArgs.Error"/> property returns an <see cref="T:Infragistics.DataErrorInfo"/> object that
            contains the error information.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ErrorEventArgs.#ctor(Infragistics.DataErrorInfo)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.ErrorEventArgs"/>.
            </summary>
            <param name="error">Error information.</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ErrorEventArgs.Error">
            <summary>
            Gets <see cref="T:Infragistics.DataErrorInfo"/> object that contains the error information.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ErrorEventArgs.LogError">
            <summary>
            Specifies whether to log the error to the debugger's outut window
            </summary>
            <remarks>
            <para class="note">
            <b>Note</b>: this property only has no effect if a debugger is attached or is logging.
            </para>
            </remarks>
            <value>The value defaults to true.</value>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ReminderActivatedEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderActivated"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderActivatedEventArgs.#ctor(Infragistics.Controls.Schedules.ReminderInfo)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ReminderActivatedEventArgs"/>
            </summary>
            <param name="reminderInfo">Reminder that has been activated</param>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderActivatedEventArgs.ReminderInfo">
            <summary>
            Returns the reminder that was activated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderDialogDisplaying"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs.Cancel">
            <summary>
            Specifies whether to cancel operation.
            </summary>
            <remarks>
            <para class="body">
            You can set this property to true to cancel the operation being performed.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.SelectedActivitiesChangedEventArgs">
            <summary>
            Event args associated with the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivitiesChanged"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.SelectedActivitiesChangedEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs">
            <summary>
            Event arguments for an event in a <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> involving a header representing a date associated with a given <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
            </summary>
            <see cref="E:Infragistics.Controls.Schedules.XamMonthView.DayHeaderClick"/>
            <see cref="E:Infragistics.Controls.Schedules.XamMonthView.WeekHeaderClick"/>
            <see cref="E:Infragistics.Controls.Schedules.XamDayView.DayHeaderClick"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs.Calendar">
            <summary>
            The calendar for which a click event had occurred.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs.Date">
            <summary>
            Returns the logical date of the day whose day header was clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.IScheduleControl.OnColorSchemeResolvedChanged">
            <summary>
            Invoked when the color scheme has been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.IScheduleControl.OnSettingsChanged(System.Object,System.String,System.Object)">
            <summary>
            Invoked when the Settings or a property on the settings of the ScheduleDataManager has changed.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="property">The property that changed.</param>
            <param name="extraInfo">Either Null or an instance of DependencyPropertyChangedEventArgs, NotifyCollectionChangedEventArgs or PropertyChangedEventArgs.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.IScheduleControl.RefreshDisplay">
            <summary>
            Releases the entire element tree so it can be recreated
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.IScheduleControl.VerifyInitialState(System.Collections.Generic.List{Infragistics.DataErrorInfo})">
            <summary>
            Called to verify that the data control has sufficient state to operate.
            </summary>
            <param name="errorList">A list to receive the erros</param>
            <remarks>
            <para class="note"><b>Note</b>: this method gets called once by the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> when it is verifying its inital state.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider">
            <summary>
            Class which exposes brush properties which are used by the visual elements of the shedule controls
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BrushProviderProperty">
            <summary>
            Identifies the BrushProvider attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.GetBrushProvider(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.SetBrushProvider(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.GetBrushProvider(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached BrushProvider DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BrushProviderProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.SetBrushProvider(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.SetBrushProvider(System.Windows.DependencyObject,Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider)">
            <summary>
            Sets the value of the attached BrushProvider DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BrushProviderProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.GetBrushProvider(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.GetBrush(Infragistics.Controls.Schedules.Primitives.CalendarBrushId)">
            <summary>
            Returns a brush based on the specified Id.
            </summary>
            <param name="id">The id of the brush</param>
            <returns></returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BaseColor">
            <summary>
            Color used as the base color from which all other color
            properties exposed by this class are derived.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.BrushVersion">
            <summary>
            Returns the version of the brush cache. 
            </summary>
            <remarks>
            <para class="body">When something changes that invalidates the cache, e.g. the <see cref="T:Infragistics.Controls.Schedules.OfficeColorScheme"/> is changed then this number is incremented.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.Item(System.Object)">
            <summary>
            Indexer takes a string or a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Primitives.CalendarBrushProvider.Item(System.String)">
            <summary>
            Indexer takes a string that can be converted into a <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarBrushId"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetDynamicResourceString(System.String)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetDynamicResourceString(System.String,System.Object[])">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetDynamicResourceString(System.String,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <param name="culture">Culture whose resource should loaded. The resource will go through a fallback process to locate the appropriate resources.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item</param>
            <returns>An object containing the specified resource</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleControlBase">
            <summary>
            Custom control used to display XamSchedule related information.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.MeasureOnlyItemId">
            <summary>
            Identifer used as the tag for objects that we create to use for measurement.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is released
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Called when text has been entered via the keyboard
            </summary>
            <param name="e">The event args with the entered text.</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.BlockingErrorProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.BlockingError"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.BrushVersionProperty">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetBrushVersion(System.Windows.DependencyObject)">
            <summary>
            For internal use only
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.BrushVersionProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetBrushVersion(System.Windows.DependencyObject,System.Int32)"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarHeaderAreaVisibilityResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarHeaderAreaVisibilityResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.DataManagerProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.DefaultBrushProviderProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DefaultBrushProvider"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.ScrollBarStyleProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ScrollBarStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButtonProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButton"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarOverlayButtonProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarOverlayButton"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleCalendarCountProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleCalendarCount"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.ControlProperty">
            <summary>
            Identifies the Control attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetControl(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Schedules.ScheduleControlBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetControl(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached Control DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ControlProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Schedules.ScheduleControlBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Schedules.ScheduleControlBase)">
            <summary>
            Sets the value of the attached Control DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ControlProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetControl(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetCalendarGroupAutomationScrollInfo(Infragistics.Controls.Primitives.ScrollInfo@,Infragistics.Controls.Primitives.ScrollInfo@)">
            <summary>
            Returns the horizontal and vertical scrollinfo instances to be used by the automation peer for the CalendarGroupTimeslotArea.
            </summary>
            <param name="horizontal">Out parameter set to the horizontal scrollinfo or null</param>
            <param name="vertical">Out parameter set to the vertical scrollinfo or null</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.IsAttachedElementProperty">
            <summary>
            Identifies the IsAttachedElement attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetIsAttachedElement(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetIsAttachedElement(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetIsAttachedElement(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached IsAttachedElement DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.IsAttachedElementProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetIsAttachedElement(System.Windows.DependencyObject,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.SetIsAttachedElement(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the attached IsAttachedElement DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.IsAttachedElementProperty"/>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetIsAttachedElement(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.BeginInit">
            <summary>
            Indicates that the initialization process for the element is starting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.EndInit">
            <summary>
            Indicates that the initialization process for the element is complete.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.RefreshDisplay">
            <summary>
            Releases the entire element tree so it can be recreated
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.VerifyState">
            <summary>
            Ensures that any pending operations have been processed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.AdjustVisibleDates(System.Boolean,System.Boolean,Infragistics.Controls.Schedules.VisibleDateAdjustment)">
            <summary>
            Changes the visible dates by a given offset indicated by the parameters
            </summary>
            <param name="next">True to shift forward; otherwise false to shift back</param>
            <param name="shift">True to try and maintain the offset between the visible dates; otherwise false to drive the new visible dates by the offset first visible date</param>
            <param name="adjustment">Indicates the type of offset</param>
            <returns>Returns true if the visible dates were changed</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.CreateTimeslotAreaAdapter(Infragistics.Controls.Schedules.TimeslotRangeGroup,System.Func{System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Action{Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Func{System.DateTime,System.DateTime},Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Helper method for creating a timeslotgroup adapter
            </summary>
            <param name="groupInfo">Provides the date information for the group</param>
            <param name="creatorFunc">The callback used to create an instance of the timeslotbase instance.</param>
            <param name="initializer">The method used to initialize the state of the timeslotbase instance.</param>
            <param name="modifyDateFunc">Optional callback used to adjust the start/end date for a timeslot.</param>
            <param name="activityOwner">An optional group that provides the activity information or null if no activity will be shown.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetDefaultSelectedRange(System.DateTime)">
            <summary>
            Returns a local time range that represents the selection range for the specified logical date.
            </summary>
            <param name="logicalDate">The logical date whose range is to be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetSelectionAnchor">
            <summary>
            Returns the range that represents the timeslot containing the anchor point for the current selected time range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetTimeslotFromSelection(Infragistics.DateRange,System.Boolean)">
            <summary>
            Return the timeslot that represents the start or end of the current timeslot selection.
            </summary>
            <param name="selection">The selection range to evaluate</param>
            <param name="fromStart">True to get the starting timeslot for the selection; otherwise false to get the ending timeslot for the selection</param>
            <returns>The range that represents the timeslot for the start/end of the range</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetTimeslotRangeInDirection(Infragistics.Controls.Schedules.Primitives.SpatialDirection,System.Boolean,Infragistics.DateRange)">
            <summary>
            Returns a DateRange that represents the timeslot range for the specified selection range in the specified direction.
            </summary>
            <param name="selectionRange">The current selection range to start from</param>
            <param name="extendSelection">True if the range will be used to extend the selection</param>
            <param name="direction">The direction of the navigation</param>
            <returns>The range that should be navigated to</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetTimeslotScrollInfo(Infragistics.Controls.Schedules.Primitives.TimeslotPanelBase)">
            <summary>
            Returns the scrollinfo for a given panel whose offset may be updated to scroll the timeslots.
            </summary>
            <param name="panel">Panel for which the scroll info is being requested</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.IsTimeslotRangeGroupBreak(System.DateTime,System.DateTime)">
            <summary>
            Used by the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotInfo"/> to determine if 2 visible dates are considered to be part of the same group of timeslots.
            </summary>
            <param name="previousDate">Previous date processed</param>
            <param name="nextDate">Next date to be processed</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnPreVerifyGroups">
            <summary>
            Invoked when the control is about to verify the Groups
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnPostVerifyGroups">
            <summary>
            Invoked after the control has verified the Groups
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnSubObjectChanged(System.Object,System.String,System.Object)">
            <summary>
            Invoked when the Settings or a property on the settings of the ScheduleDataManager has changed.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="property">The property that changed.</param>
            <param name="extraInfo">Either Null or an instance of DependencyPropertyChangedEventArgs, NotifyCollectionChangedEventArgs or PropertyChangedEventArgs.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnTimeslotGroupRangesCreated">
            <summary>
            Invoked when the objects used to determine the timeslots have been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when the keydown is pressed after any current edit process has had a chance to process the key.
            </summary>
            <param name="e">Provides information about the key event</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.VerifyVisibleDatesOverride">
            <summary>
            Invoked if the VisibleDates have changed to allow them to be updated based on other state (e.g. expanding dates to work/full week).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.GetFlag(Infragistics.Controls.Schedules.ScheduleControlBase.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.InitializeGroup(Infragistics.Controls.Schedules.Primitives.CalendarGroupWrapper,System.Boolean)">
            <summary>
            Invoked during the VerifyGroups when an existing group is reused.
            </summary>
            <param name="group">The group being reused</param>
            <param name="isNewlyRealized">True if the group is new</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnActiveCalendarChanged(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/> event.
            </summary>
            <param name="oldValue">The old property value</param>
            <param name="newValue">The new property value</param>
            <seealso cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnSelectedActivitiesChanged">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivitiesChanged"/> event.
            </summary>
            <seealso cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivitiesChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities"/>
            <seealso cref="T:Infragistics.Controls.Schedules.SelectedActivitiesChangedEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnSelectedTimeRangeChanged(System.Nullable{Infragistics.DateRange},System.Nullable{Infragistics.DateRange})">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRangeChanged"/> event.
            </summary>
            <param name="oldValue">The old property value</param>
            <param name="newValue">The new property value</param>
            <seealso cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRangeChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar">
            <summary>
            Returns or sets the active <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.BlockingError">
            <summary>
            Gets the blocking error if any.
            </summary>
            <remarks>
            <para class="body">
            <b>BlockingError</b> property is set when an error occurs that prevents further functioning of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayMode">
            <summary>
            Returns or sets the preferred calendar display mode.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsOverride">
            <summary>
            Returns a modifiable collection of <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> instances that represent the groups in view in this control.
            </summary>
            <remarks>
            <p class="body">The CalendarGroupsOverride is primarily meant to be used when you have multiple xamSchedule controls 
            associated with the same <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/> but you want this control instance to show a different 
            set of <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> instances than those shown in a different xamSchedule control whose 
            <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/> is set to the same XamScheduleDataManager. To acheive an Outlook type behavior where all 
            the controls are displaying the same calendars and as the calendars are modified all the controls are affected you 
            would use the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/> collection instead.</p>
            <p class="bote">If there are any CalendarGroup instances in this collection then those are the calendars 
            that will be displayed by the control. If the Count is 0, then the xamScheduleDataManager's CalendarGroups will be used. 
            If that too has a Count of 0, then the <see cref="P:Infragistics.Controls.Schedules.Resource.PrimaryCalendar"/> of the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/> 
            will be displayed.</p>
            </remarks>
            <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsResolved"/>
            <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/>
            <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/>
            <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserId"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsResolved">
            <summary>
            Returns the CalendarGroupCollection that the control is using to determine the calendars that are displayed.
            </summary>
            <remarks>
            <p>By default a xamSchedule control will use the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups"/> of the 
            associated <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/> and therefore all the controls associated with that manager will remain 
            in sync. However, one could add <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> instances to the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsOverride"/> 
            to have this control instance manage its calendars independantly.</p>
            <p>The CalendarGroupsResolved returns the collection of <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/> instances that the 
            control is using to determine the display. The collection is based upon the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarDisplayMode"/> 
            and the <see cref="T:Infragistics.Controls.Schedules.CalendarGroupCollection"/> that the control is using.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarHeaderAreaVisibilityResolved">
            <summary>
            Returns a value indicating whether the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeaderArea"/> and group chrome should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarHeaderAreaVisibilityResolvedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager">
            <summary>
            Returns or sets the object that provides the activity and resource information that will be displayed by the control.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.DataManagerProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.DefaultBrushProvider">
            <summary>
            Returns the default brush provider for elements that don't have a specific <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> context (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.DefaultBrushProviderProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ScrollBarStyle">
            <summary>
            Returns the style to use for scrollbars (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: this value is obtained from the <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>'s <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ScrollBarStyleProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities">
            <summary>
            Returns a collection of activities that are selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange">
            <summary>
            Returns or sets the selected time range of the control
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRangeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButton">
            <summary>
            Returns or sets whether a close button will be displayed in the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            </summary>
            <remarks>
            <p class="body">This property determines whether the close button is displayed within the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>. By default 
            this property is set to null and the property value used is resolved based on the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing"/>. 
            If that property is set to false then the close button will be hidden. Otherwise it is up to the control as to whether it will display 
            the button. <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>, for example, will not display the button by default.</p>
            <b class="note">Note: The enabled state is based upon the <see cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing"/>. So if ShowCalendarCloseButton is 
            set to true and AllowCalendarClosing is set to false, the button will be displayed but will be disabled.</b>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarCloseButtonProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.CloseButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.AllowCalendarClosing"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarOverlayButton">
            <summary>
            Returns or sets whether an overlay button will be displayed in the <see cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.ShowCalendarOverlayButtonProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.CalendarHeader"/>
            <seealso cref="P:Infragistics.Controls.Schedules.Primitives.CalendarHeader.OverlayButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleCalendarCount">
            <summary>mdmd
            Returns the total number of viewable calendars in the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsResolved"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleCalendarCountProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.VisibleDates">
            <summary>
            Returns a collection of the dates that are displayed within the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveGroup">
            <summary>
            Returns the group containing the active calendar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActivityColumnHeight">
            <summary>
            The height of activity in an activity panel that aligns activity along horizontally arranged timeslots
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActivityGutterHeight">
            <summary>
            The height of activity in an activity panel that aligns activity along horizontally arranged timeslots
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.CurrentLogicalDate">
            <summary>
            Returns the calendar date for the today if the date is in view. Otherwise it returns null.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ExtraActivities">
            <summary>
            Returns a collection of activities that are not part of query results but should be displayed by the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyGroupsPending">
            <summary>
            Returns a boolean indicating if the Groups is considered dirty and a verification is pending.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyingState">
            <summary>
            Returns a boolean indicating if the VerifyState method is being processed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyStateNeeded">
            <summary>
            Returns a boolean indicating if the VerifyStateOverride is needed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyUIStateNeeded">
            <summary>
            Returns a boolean indicating if some deferred ui state needs to be verified.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ShouldReinitializeGroups">
            <summary>
            Used to determine if the InitializeGroup should be re-executed when the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyGroupsPending"/> is false
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.SupportsTodayHighlight">
            <summary>
            Returns a boolean indicating if the control is capable of showing a highlight around the current day.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotAreaTimeslotOrientation">
            <summary>
            The orientation of timeslots within a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotGroupOrientation">
            <summary>
            The orientation the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/> instances within a <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged">
            <summary>
            Occurs when the value of the ActiveCalendar property changes
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnActiveCalendarChanged(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ResourceCalendar)"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivitiesChanged">
            <summary>
            Occurs when the contents of the SelectedActivities collection has changed.
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnSelectedActivitiesChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedActivities"/>
            <seealso cref="T:Infragistics.Controls.Schedules.SelectedActivitiesChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRangeChanged">
            <summary>
            Occurs when the value of the SelectedTimeRange property changes
            </summary>
            <seealso cref="M:Infragistics.Controls.Schedules.ScheduleControlBase.OnSelectedTimeRangeChanged(System.Nullable{Infragistics.DateRange},System.Nullable{Infragistics.DateRange})"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsProvider.None">
            <summary>
            There is no current user so nothing is shown.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsProvider.ControlGroups">
            <summary>
            The control is using its CalendarGroupsOverride
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsProvider.DataManagerGroups">
            <summary>
            The control is using the CalendarGroups of the DataManager
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleControlBase.CalendarGroupsProvider.CurrentUser">
            <summary>
            The control is displaying the PrimaryCalendar of the CurrentUser
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleEditHelper.AddNew(System.DateTime,System.DateTime,System.Boolean,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Initiates an inplace edit for a new activity with the specified information
            </summary>
            <param name="startLocal">The start of the appointment in the local timezone</param>
            <param name="endLocal">The end of the appointment in the local timezone</param>
            <param name="isAllDay">True if the appointment is an all day event</param>
            <param name="calendar">The calendar for which the appt is being created</param>
            <returns>True if the add occurred and it began edit mode; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleEditHelper.AddNew(System.DateTime,System.DateTime,System.Boolean,Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.Primitives.ActivityPresenter@,Infragistics.Controls.Schedules.ActivityType)">
            <summary>
            Initiates an inplace edit for a new activity with the specified information
            </summary>
            <param name="startLocal">The start of the appointment in the local timezone</param>
            <param name="endLocal">The end of the appointment in the local timezone</param>
            <param name="isAllDay">True if the appointment is an all day event</param>
            <param name="calendar">The calendar for which the appt is being created</param>
            <param name="activityPresenter">The activity presenter that represents the newly added activity</param>
            <param name="activityType">Type of activity to create</param>
            <returns>True if the add occurred and it began edit mode; otherwise false</returns>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleEditHelper.Activity">
            <summary>
            Returns the activity being edited
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleEditHelper.IsDragging">
            <summary>
            Returns a boolean indicating if a drag operation is in progress
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleEditHelper.IsResizing">
            <summary>
            Returns a boolean indicating if a resize operation is in progress
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleTimeslotInfo.CreateTimeslotGroups(System.Func{System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Action{Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Func{System.DateTime,System.DateTime},Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Creates the adapters for a group of timeslots
            </summary>
            <param name="creatorFunc">The delegate invoked when a TimeslotBase is to be allocated</param>
            <param name="initializer">The delegate invoked when an item is created or Reinitialize is invoked. This is meant to be used to update state on a given timeslot</param>
            <param name="modifyDateFunc">Optional callback used to adjust the start/end date for a timeslot.</param>
            <param name="activityOwner">The calendargroup whose activities will be displayed</param>
            <returns>A list of timeslot group adapters that represent the groups of timeslots</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleTimeslotInfo.GetInViewRange(Infragistics.DateRange)">
             <summary>
            Helper method to get the timeslot range that contains (fully or partially) the specified range. 
             </summary>
             <param name="range">The range to evaluate</param>
             <returns>The range of timeslots that intersects with the specified range or null if none intersect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleTimeslotInfo.InvalidateWorkingHours">
            <summary>
            Indicates that the working hours are potentially invalid. If the working hours affect the timeslots then the time ranges may need to be rebuilt.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.ScheduleTimeslotInfo.ReinitializeTimeRanges(Infragistics.Controls.Schedules.Primitives.CalendarGroupTimeslotAreaAdapter,Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Helper method to update the TimeslotGroup instances within a TimeslotCalendarGroup based on the current ranges.
            </summary>
            <param name="calendarGroup">The group to update</param>
            <param name="activityOwner">The CalendarGroup whose activities will be shown or null for no activities</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.WeekModeHelper.AdjustWeeks(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Changes the visible weeks by a given offset indicated by the parameters
            </summary>
            <param name="next">True to shift forward; otherwise false to shift back</param>
            <param name="shift">True to try and maintain the offset between the visible dates; otherwise false to drive the new visible dates by the offset first visible date</param>
            <param name="page">True to offset by the number of calendar groups; otherwise false to offset by a single item</param>
            <returns>Returns true if the visible dates were changed</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.WeekModeHelper.GetFirstLastDayInWeek(System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Returns the first or last day of the week containing the specified range for the weeks in view. If the range is null, the first or last date among all the weeks.
            </summary>
            <param name="first">True to get the first day of the week and false to get the last</param>
            <param name="date">The date to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleControlBase.WeekModeHelper.SetFirstWeekDate(System.DateTime)">
            <summary>
            Updates the weeks to include the specified week as the first week.
            </summary>
            <param name="date">A date that belongs in the first week that should be in view. The number of weeks depends on the number currently available.</param>
        </member>
        <member name="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase">
            <summary>
            Base class for a control used to display appointments relative to the associated time slots.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.ScheduleTimeControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.GetDefaultSelectedRange(System.DateTime)">
            <summary>
            Returns a local time range that represents the selection range for the specified logical date.
            </summary>
            <param name="logicalDate">The logical date whose range is to be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnActiveCalendarChanged(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/> event.
            </summary>
            <param name="oldValue">The old property value</param>
            <param name="newValue">The new property value</param>
            <seealso cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnPreVerifyGroups">
            <summary>
            Invoked when the control is about to verify the Groups
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnSelectedTimeRangeChanged(System.Nullable{Infragistics.DateRange},System.Nullable{Infragistics.DateRange})">
            <summary>
            Invoked when the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> has changed.
            </summary>
            <param name="oldValue">The previous selected range</param>
            <param name="newValue">The new selected range</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnSubObjectChanged(System.Object,System.String,System.Object)">
            <summary>
            Invoked when the Settings or a property on the settings of the ScheduleDataManager has changed.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="property">The property that changed.</param>
            <param name="extraInfo">Either Null or an instance of DependencyPropertyChangedEventArgs, NotifyCollectionChangedEventArgs or PropertyChangedEventArgs.</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.RefreshDisplay">
            <summary>
            Releases the entire element tree so it can be recreated
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.CurrentTimeIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.CurrentTimeIndicatorVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.PrimaryTimeZoneLabelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.PrimaryTimeZoneLabel"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabel"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneIdProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneId"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShowWorkingHoursOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShowWorkingHoursOnly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotIntervalProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotInterval"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.OnTimeslotIntervalChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Invoked when the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotInterval"/> has changed.
            </summary>
            <param name="oldInterval">The old interval</param>
            <param name="newInterval">The new interval</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotScrollBarVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSource"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.BringTimeslotIntoView(System.DateTime,System.Nullable{System.Double},System.Boolean)">
            <summary>
            Attempts to bring the specified timeslot into view and returns true if it is in view.
            </summary>
            <param name="datetime">The timeslot date/time to bring into view</param>
            <param name="timeslotOffsetPercent">The percentage (0-1) that the specified time should be offset within the view or null to just ensure it is in view.</param>
            <param name="useNearestTime">True to find the timeslot closest to the specified time</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.GetNextPreviousLogicalDate(System.DateTime,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a logical date adjacent to the specified date considering the current visible dates.
            </summary>
            <param name="logicalDate">The logical date to start with</param>
            <param name="next">True to return the next date; otherwise false to return the previous date</param>
            <param name="considerVisibleDates">True to evaluate the visible dates when navigating in case there are discontiguous days selected</param>
            <param name="limitToVisibleDates">True to not look for a date outside the visible dates</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.PerformInitialScrollIntoViewImpl">
            <summary>
            This method is not meant to be called directly except by the ScheduleTimeControlBase
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.GetFlag(Infragistics.Controls.Schedules.ScheduleTimeControlBase.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.ScheduleTimeControlBase.InitializeTimeslotHeaders">
            <summary>
            Helper method to update the current and additional timezone elements based on the timeslot ranges.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShouldReinitializeGroups">
            <summary>
            Used to determine if the InitializeGroup should be re-executed when the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.IsVerifyGroupsPending"/> is false
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.CurrentTimeIndicatorVisibility">
            <summary>
            Returns or sets a value indicating whether an indicator identifying the current time is displayed within the time slot area.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.CurrentTimeIndicatorVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.PrimaryTimeZoneLabel">
            <summary>
            Returns or sets the label that is displayed by the time slot area for the current time zone.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.PrimaryTimeZoneLabelProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabel">
            <summary>
            Returns or sets the label that is displayed by the time slot area for the alternate time zone.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabelProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneId"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneId">
            <summary>
            Returns or sets the id for the additional time zone.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneIdProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabel"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibility"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProvider"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.TimeZoneInfoProviderResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibility">
            <summary>
            Returns or sets a value indicating whether the time slot area for the additional time zone should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneLabel"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.SecondaryTimeZoneId"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShowWorkingHoursOnly">
            <summary>
            Returns or sets a boolean indicating whether the control should filter out non-working hour timeslots.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShowWorkingHoursOnlyProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotInterval">
            <summary>
            Returns or sets a value indicating the duration of each time slot.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotIntervalProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotScrollBarVisibility">
            <summary>
            Returns or sets a value that indicates whether the timeslot scrollbar is displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.TimeslotScrollBarVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayMode">
            <summary>
            Returns or sets a value used to determine which dates are displayed within the control.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSource">
            <summary>
            Returns or sets a value indicating what object is considered when calculating the working hours.
            </summary>
            <remarks>
            <p class="note">This property does not affect what is used to calculate whether a timeslot is considered a 
            working hour or not. That calculation is based on the <see cref="P:Infragistics.Controls.Schedules.ResourceCalendar.OwningResource"/> for the <see cref="P:Infragistics.Controls.Schedules.CalendarGroupBase.SelectedCalendar"/>  of the containing 
            <see cref="T:Infragistics.Controls.Schedules.CalendarGroupBase"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WorkingHoursSourceProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.WeekDisplayMode"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleTimeControlBase.ShowWorkingHoursOnly"/>
        </member>
        <member name="T:Infragistics.ErrorSeverity">
            <summary>
            Used to specifiy the <see cref="P:Infragistics.DataErrorInfo.Severity"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.ErrorSeverity.Diagnostic">
            <summary>
            Diagnostic errors are intended for developers. They are informational in nature.
            </summary>
        </member>
        <member name="F:Infragistics.ErrorSeverity.Warning">
            <summary>
            Warnigs are suitable for end use display.
            </summary>
        </member>
        <member name="F:Infragistics.ErrorSeverity.Error">
            <summary>
            Errors should be displayed to the user.
            </summary>
        </member>
        <member name="F:Infragistics.ErrorSeverity.SevereError">
            <summary>
            Severe or blocking errors indicate a state where the control can not operate as expected.
            </summary>
        </member>
        <member name="T:Infragistics.DataErrorInfo">
            <summary>
            Contains information about one or more errors.
            </summary>
        </member>
        <member name="M:Infragistics.DataErrorInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.DataErrorInfo"/>.
            </summary>
            <param name="error">Error message.</param>
        </member>
        <member name="M:Infragistics.DataErrorInfo.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.DataErrorInfo"/>.
            </summary>
            <param name="exception">The source exception.</param>
        </member>
        <member name="M:Infragistics.DataErrorInfo.#ctor(System.Collections.Generic.IList{Infragistics.DataErrorInfo})">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.DataErrorInfo"/>.
            </summary>
            <param name="errorList">List of errors.</param>
        </member>
        <member name="M:Infragistics.DataErrorInfo.ToString">
            <summary>
            Returns a string representation of the error(s).
            </summary>
            <returns>A concatenated list of the error messages.</returns>
        </member>
        <member name="M:Infragistics.DataErrorInfo.CreateFromList(System.Collections.Generic.IList{Infragistics.DataErrorInfo})">
            <summary>
            If the errorList is empty, returns null. If it has one item, returns that item. Otherwise it creates
            a new data error info that wraps the error list.
            </summary>
            <param name="errorList"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.DataErrorInfo.Context">
            <summary>
            Gets the context object if any associated with the error.
            </summary>
            <remarks>
            <para class="body">
            If the error is specific to an activity, the context will the activity object itself.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.DataErrorInfo.DiagnosticText">
            <summary>
            Text that can be used to diagnose the error.
            </summary>
        </member>
        <member name="P:Infragistics.DataErrorInfo.Exception">
            <summary>
            Gets the Exception object if any associated with the error.
            </summary>
        </member>
        <member name="P:Infragistics.DataErrorInfo.ErrorList">
            <summary>
            If multiple errors occurred during an operation then this list will return the list of errors.
            </summary>
        </member>
        <member name="P:Infragistics.DataErrorInfo.Severity">
            <summary>
            Specifies the severity of the error.
            </summary>
        </member>
        <member name="P:Infragistics.DataErrorInfo.UserErrorText">
            <summary>
            Text to be displayed to the end user.
            </summary>
        </member>
        <member name="T:Infragistics.DateRange">
            <summary>
            Structure used to represents a range of dates.
            </summary>
        </member>
        <member name="M:Infragistics.DateRange.#ctor(System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.DateRange"/>
            </summary>
            <param name="date">The date to use for the start and end dates.</param>
        </member>
        <member name="M:Infragistics.DateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.DateRange"/>
            </summary>
            <param name="start">The start date</param>
            <param name="end">The end date</param>
        </member>
        <member name="M:Infragistics.DateRange.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance</returns>
        </member>
        <member name="M:Infragistics.DateRange.Equals(System.Object)">
            <summary>
            Compares the specified object to this object to see if they are equivalent.
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.DateRange.op_Equality(Infragistics.DateRange,Infragistics.DateRange)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.DateRange"/> structures for equality
            </summary>
            <param name="range1">The first structure</param>
            <param name="range2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.DateRange.op_Inequality(Infragistics.DateRange,Infragistics.DateRange)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.DateRange"/> structures for inequality
            </summary>
            <param name="range1">The first structure</param>
            <param name="range2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.DateRange.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>A string that represents this <see cref="T:Infragistics.DateRange"/></returns>
        </member>
        <member name="M:Infragistics.DateRange.ToString(System.String)">
            <summary>
            Returns a string representation of the range using the specified format to format the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/>
            </summary>
            <param name="format">The format used to format the Start and End dates.</param>
            <returns>A string that represents this <see cref="T:Infragistics.DateRange"/></returns>
        </member>
        <member name="M:Infragistics.DateRange.Contains(System.DateTime)">
            <summary>
            Indicates if the specified date falls within the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> dates for this range.
            </summary>
            <param name="date">The date to evaluate</param>
            <returns>True if the specified date is greater than or equal to the <see cref="P:Infragistics.DateRange.Start"/> and on or before the <see cref="P:Infragistics.DateRange.End"/>.</returns>
        </member>
        <member name="M:Infragistics.DateRange.Contains(Infragistics.DateRange)">
            <summary>
            Indicates if the dates of the specified range fall completely within the dates of this range instance.
            </summary>
            <param name="range">The range to evaluate</param>
            <returns>True if the start and end date fall entirely within or equal to the start and end of this range instance.</returns>
        </member>
        <member name="M:Infragistics.DateRange.Intersect(Infragistics.DateRange)">
            <summary>
            Attempts to update the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> if the specified range intersects with this instance
            </summary>
            <param name="range">The range to intersect</param>
            <returns>True if the ranges intersect; false if the ranges do not intersect.</returns>
            <remarks>
            <p class="body">If the specified range does not intersect then this instance's Start and End will not be changed. If they 
            do intersect then the Start and End will be updated to reflect the intersection of the normalized two ranges.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.DateRange.IntersectsWith(Infragistics.DateRange)">
            <summary>
            Indicates if the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> of the specified <see cref="T:Infragistics.DateRange"/> intersects with this object's dates.
            </summary>
            <param name="range">The range to evaluate.</param>
            <returns>True if any date within the specified range overlaps with the start/end of this range.</returns>
            <exception cref="T:System.ArgumentNullException">The 'range' cannot be null.</exception>
        </member>
        <member name="M:Infragistics.DateRange.Offset(System.TimeSpan)">
            <summary>
            Moves the date range by the specified offset.
            </summary>
            <param name="offset">The timespan used to adjust the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> dates</param>
        </member>
        <member name="M:Infragistics.DateRange.Normalize">
            <summary>
            Ensures that the start date is less than or equal to the end date.
            </summary>
        </member>
        <member name="M:Infragistics.DateRange.Normalize(Infragistics.DateRange)">
            <summary>
            Returns a DateRange where the <see cref="P:Infragistics.DateRange.Start"/> is less than or equal to the end time
            </summary>
            <param name="range">The range to normalize</param>
        </member>
        <member name="M:Infragistics.DateRange.RemoveTime">
            <summary>
            Removes the time portion from the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/>
            </summary>
        </member>
        <member name="M:Infragistics.DateRange.ContainsExclusive(System.DateTime)">
            <summary>
            Indicates if the specified date falls within the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> dates for this range.
            </summary>
            <param name="date">The date to evaluate</param>
            <returns>True if the specified date is greater than or equal to the <see cref="P:Infragistics.DateRange.Start"/> and before the <see cref="P:Infragistics.DateRange.End"/>.</returns>
        </member>
        <member name="M:Infragistics.DateRange.IntersectsWithExclusive(Infragistics.DateRange)">
            <summary>
            Indicates if the <see cref="P:Infragistics.DateRange.Start"/> and <see cref="P:Infragistics.DateRange.End"/> of the specified <see cref="T:Infragistics.DateRange"/> intersects with this object's dates.
            </summary>
            <param name="range">The range to evaluate.</param>
            <returns>True if any date within the specified range overlaps with the start/end of this range considering the End of the ranges as exclusive.</returns>
            <exception cref="T:System.ArgumentNullException">The 'range' cannot be null.</exception>
        </member>
        <member name="M:Infragistics.DateRange.Equals(Infragistics.DateRange)">
            <summary>
            Compares two <see cref="T:Infragistics.DateRange"/>
            </summary>
            <param name="other">The object to compare to this instance</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.DateRange.CompareTo(Infragistics.DateRange)">
            <summary>
            Compares this instance to the specified <see cref="T:Infragistics.DateRange"/>
            </summary>
            <param name="other">The range to compare</param>
            <returns>A signed number indicating the relative values of this and the specified range.</returns>
        </member>
        <member name="P:Infragistics.DateRange.Infinite">
            <summary>
            Returns a data range from DateTime.MinValue to DateTime.MaxValue
            </summary>
        </member>
        <member name="P:Infragistics.DateRange.IsEmpty">
            <summary>
            Returns true if the Start and End are the same values.
            </summary>
        </member>
        <member name="P:Infragistics.DateRange.Start">
            <summary>
            Returns or sets the earliest/start date for the range.
            </summary>
        </member>
        <member name="P:Infragistics.DateRange.End">
            <summary>
            Returns or sets the latest/end date for the range.
            </summary>
        </member>
        <member name="T:Infragistics.DateRangeConverter">
            <summary>
            Type converter for the <see cref="T:Infragistics.DateRange"/> structure
            </summary>
        </member>
        <member name="M:Infragistics.DateRangeConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.DateRangeConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.DateRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert from the type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType"> A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.DateRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType"> A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.DateRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from one type to another.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>        
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.DateRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="T:Infragistics.DeferredOperation">
            <summary>
            Helper class for invoking an action asynchronously with the ability to cancel the operation or invoke it synchronously at an earlier point.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.DialogManager">
            <summary>
            A helper class for displaying dialogs that abstracts away the differences between displaying dialogs in Silverlight and WPF.
            For Silverlight the class uses <b>XamDialogWindow</b> and for WPF the class uses Infragistics.Windows.Controls.ToolWindow/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.FixedValueConverter">
            <summary>
            Custom value converter that returns the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/> if the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/> matches the value provided
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.FixedValueConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.FixedValueConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.FixedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/> value if the <paramref name="value"/> equals the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/>
            </summary>
            <param name="value">The value to compare to the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/></param>
            <param name="targetType">The type of the target property</param>
            <param name="parameter">The parameter to use for the conversion. This parameter is not used.</param>
            <param name="culture">The culture to use for the conversion. This parameter is not used.</param>
            <returns>The <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/> or DependencyProperty.UnsetValue if the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/> doesn't match the <paramref name="value"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.FixedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/> if the <paramref name="value"/> equals the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/>
            </summary>
            <param name="value">The value to compare to the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/></param>
            <param name="targetType">The type of the target property</param>
            <param name="parameter">The parameter to use for the conversion. This parameter is not used.</param>
            <param name="culture">The culture to use for the conversion. This parameter is not used.</param>
            <returns>The <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue"/> or DependencyProperty.UnsetValue if the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/> doesn't match the <paramref name="value"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.FixedValueConverter.SourceValue">
            <summary>
            The value that is compared against the value provided to the Convert method and also the value potentially returned from the ConvertBack.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If this value is not set the <see cref="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue"/> is always returned from the convert method.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Primitives.FixedValueConverter.DestinationValue">
            <summary>
            The value returned from the Convert if the SourceValue matches and the value compared against the value in the ConvertBack.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.GridBagPanel">
            <summary>
            A panel that arranges its children based on their Column, Row, ColumnSpan and RowSpan settings.
            </summary>
            <remarks>
            <para class="body">
            <b>GridBagPanel</b> by default arranges children by laying them out horizontally. You can control
            the positioning of each child by setting Column, Row, ColumnSpan and RowSpan attached properties.
            Column and Row values of -1 indicate the child element is to be positioned relative to the previous
            child element. ColumnSpan or RowSpan of 0 indicates the child element is to occupy the rest of the 
            horizontal or vertical area and further items with Column or Row values of -1 (relative) will be 
            positioned on the next logical row or column.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Layouts.GridBagPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Overridden. Called the visual children change.
            </summary>
            <param name="visualAdded">Visual that was added.</param>
            <param name="visualRemoved">Visual that was removed.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.ColumnProperty">
            <summary>
            Identifies the Column attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetColumn(System.Windows.UIElement)">
            <summary>
            Gets the value of the Column attached property of the specified element. Default value is -1, which indicates
            that the element will be positioned relative to the previous element in the panel.
            </summary>
            <param name="elem">This element's Column value will be returned.</param>
            <returns>The value of the Column attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetColumn(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Column attached property of the specified element. Default value is -1, which indicates
            that the element will be positioned relative to the previous element in the panel.
            </summary>
            <param name="elem">This element's Column value will be set.</param>
            <param name="value">Value to set. This can be -1 which will position the element relative to previous element in the panel.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.ColumnSpanProperty">
            <summary>
            Identifies the ColumnSpan attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetColumnSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the ColumnSpan attached property of the specified element. Default value is 0, which indicates
            that the element will occupy the remainder of the space in its logical column.
            </summary>
            <param name="elem">This element's ColumnSpan value will be returned.</param>
            <returns>The value of the ColumnSpan attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetColumnSpan(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the ColumnSpan attached property of the specified element. Default value is 0, which indicates
            that the element will occupy the remainder of the space in its logical column.
            </summary>
            <param name="elem">This element's ColumnSpan value will be set.</param>
            <param name="value">Value to set. This can be 0 to indicate that the element should occupy the remainder of the logical column.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.ColumnWeightProperty">
            <summary>
            Identifies the ColumnWeight attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetColumnWeight(System.Windows.UIElement)">
            <summary>
            Gets the value of the ColumnWeight attached property of the specified element. ColumnWeight specifies
            how any extra width will be distributed among elements.
            </summary>
            <param name="elem">This element's ColumnWeight value will be returned.</param>
            <returns>The value of the ColumnWeight attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetColumnWeight(System.Windows.UIElement,System.Single)">
            <summary>
            Sets the value of the ColumnWeight attached property of the specified element. ColumnWeight specifies
            how any extra width will be distributed among elements.
            </summary>
            <param name="elem">This element's ColumnWeight value will be returned.</param>
            <param name="value">Value to set.</param>
            <returns>The value of the ColumnWeight attached property.</returns>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.PreferredHeightProperty">
            <summary>
            Identifies the PreferredHeight attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetPreferredHeight(System.Windows.DependencyObject)">
            <summary>
            Gets the preferred height of the element. Default value is double.NaN.
            </summary>
            <param name="d">Element whose preferred height to get.</param>
            <returns>Returns the preferred height of the specified element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetPreferredHeight(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the preferred height of the element. This height will be used by the panel to
            determine how much space to allocate to the element.
            </summary>
            <param name="d">Element to set the preferred height on.</param>
            <param name="value">Preferred height to set.</param>
            <remarks>
            <para class="body">
            PreferredHeight property is different from setting the Height property of the element
            directly. When you set Height property of the element, that will be its final height.
            It may be desirable instead to specify a preferred height and then let the layout panel
            adjust the size (make it bigger or smaller) based on the availability of space.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.PreferredWidthProperty">
            <summary>
            Identifies the PreferredWidth attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetPreferredWidth(System.Windows.DependencyObject)">
            <summary>
            Gets the preferred width of the element. Default value is double.NaN.
            </summary>
            <param name="d">Element whose preferred width to get.</param>
            <returns>Returns the preferred width of the specified element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetPreferredWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the preferred width of the element. This width will be used by the panel to
            determine how much space to allocate to the element. 
            </summary>
            <param name="d">Element to set the preferred width on.</param>
            <param name="value">Preferred width to set.</param>
            <remarks>
            <para class="body">
            PreferredWidth property is different from setting the Width property of the element
            directly. When you set Width property of the element, that will be its final width.
            It may be desirable instead to specify a preferred width and then let the layout panel
            adjust the size (make it bigger or smaller) based on the availability of space.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.RowProperty">
            <summary>
            Identifies the Row attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetRow(System.Windows.UIElement)">
            <summary>
            Gets the value of the Row attached property of the specified element. Default value is -1, which indicates
            that the element will be positioned relative to the previous element in the panel.
            </summary>
            <param name="elem">This element's Row value will be returned.</param>
            <returns>The value of the Row attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetRow(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Row attached property of the specified element. Default value is -1, which indicates
            that the element will be positioned relative to the previous element in the panel.
            </summary>
            <param name="elem">This element's Row value will be set.</param>
            <param name="value">Value to set. This can be -1 which will position the element relative to previous element in the panel.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.RowSpanProperty">
            <summary>
            Identifies the RowSpan attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetRowSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the RowSpan attached property of the specified element. Default value is 0, which indicates
            that the element will occupy the remainder of the space in its logical column.
            </summary>
            <param name="elem">This element's RowSpan value will be returned.</param>
            <returns>The value of the RowSpan attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetRowSpan(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the RowSpan attached property of the specified element. Default value is 0, which indicates
            that the element will occupy the remainder of the space in its logical row.
            </summary>
            <param name="elem">This element's RowSpan value will be set.</param>
            <param name="value">Value to set. This can be 0 to indicate that the element should occupy the remainder of the logical row.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.GridBagPanel.RowWeightProperty">
            <summary>
            Identifies the RowWeight attached dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.GetRowWeight(System.Windows.UIElement)">
            <summary>
            Gets the value of the RowWeight attached property of the specified element. RowWeight specifies
            how any extra height will be distributed among elements.
            </summary>
            <param name="elem">This element's RowWeight value will be returned.</param>
            <returns>The value of the RowWeight attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.SetRowWeight(System.Windows.UIElement,System.Single)">
            <summary>
            Sets the value of the RowWeight attached property of the specified element. RowWeight specifies
            how any extra height will be distributed among elements.
            </summary>
            <param name="elem">This element's RowWeight value will be returned.</param>
            <param name="value">Value to set.</param>
            <returns>The value of the RowWeight attached property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.LayoutContainer.#ctor(Infragistics.Controls.Layouts.GridBagPanel,System.Windows.Rect,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="gbPanel">The panel whose children will be measured/arranged</param>
            <param name="rect">The bounding rect for the measure/arrange</param>
            <param name="isMeasure">True if the container is to measure the elements only and false if the elements are to be arranged</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.LayoutContainer.GetBounds(System.Object)">
            <summary>
            Returns the rect in which elements are to be laid out.
            </summary>
            <param name="containerContext"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.LayoutContainer.PositionItem(Infragistics.Controls.Layouts.Primitives.ILayoutItem,System.Windows.Rect,System.Object)">
            <summary>
            Positions the element associated with the specified layout item.
            </summary>
            <param name="i">Layout item.</param>
            <param name="rect">Arrange rect of the item.</param>
            <param name="containerContext">Container context.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.GridBagPanel.LayoutItem.#ctor(System.Windows.UIElement,Infragistics.Controls.Layouts.GridBagPanel)">
            <summary>
            Constructor
            </summary>
            <param name="elem">Associated element.</param>
            <param name="panel">The containing panel</param>
        </member>
        <member name="T:Infragistics.Controls.Primitives.BestFitPanel">
            <summary>
            Arranges into view only the largest single child element that is fully visible, based on the <see cref="P:Infragistics.Controls.Primitives.BestFitPanel.Criteria"/> setting. And arranges all other children out of view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.BestFitPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.BestFitPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.BestFitPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.BestFitPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Controls.Primitives.BestFitPanel.CriteriaProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.BestFitPanel.Criteria"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.BestFitPanel.ShowPartialProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.BestFitPanel.ShowPartial"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.BestFitPanel.Criteria">
            <summary>
            Returns or sets whether to use the width or height to determine is a child element fits within this panel.
            </summary>
            <seealso cref="F:Infragistics.Controls.Primitives.BestFitPanel.CriteriaProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Primitives.BestFitPanel.ShowPartial">
            <summary>
            Returns or sets whether to show the smallest item partially if none can fit.
            </summary>
            <seealso cref="F:Infragistics.Controls.Primitives.BestFitPanel.ShowPartialProperty"/>
            <seealso cref="P:Infragistics.Controls.Primitives.BestFitPanel.Criteria"/>
        </member>
        <member name="T:Infragistics.Controls.Primitives.BestFitCriteria">
            <summary>
            Determines what criteria to use, width or height, when determining it an element fits within its parent panel.
            </summary>
            <seealso cref="T:Infragistics.Controls.Primitives.BestFitPanel"/>
            <seealso cref="P:Infragistics.Controls.Primitives.BestFitPanel.Criteria"/>
        </member>
        <member name="F:Infragistics.Controls.Primitives.BestFitCriteria.UseWidth">
            <summary>
            Display the widest child element that completely fits in the panel
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.BestFitCriteria.UseHeight">
            <summary>
            Display the tallest child element that completely fits in the panel
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.MinMaxConverter">
            <summary>
            Custom value converter that deals with <see cref="T:System.IComparable"/> instances and ensures that the specified value is within a given range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.MinMaxConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.MinMaxConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.MinMaxConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns a value between the <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MinValue"/> and <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MaxValue"/>
            </summary>
            <param name="value">The value to compare to the <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MinValue"/> and <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MaxValue"/></param>
            <param name="targetType">The type of the target property</param>
            <param name="parameter">The parameter to use for the conversion. This parameter is not used.</param>
            <param name="culture">The culture to use for the conversion. This parameter is not used.</param>
            <returns>The <paramref name="value"/> constrained by the range defined by the <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MinValue"/> and <see cref="P:Infragistics.Controls.Primitives.MinMaxConverter.MaxValue"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.MinMaxConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns DependencyProperty.UnsetValue since this method is not supported.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The type of the target property</param>
            <param name="parameter">The parameter to use for the conversion. This parameter is not used.</param>
            <param name="culture">The culture to use for the conversion. This parameter is not used.</param>
            <returns>Returns DependencyProperty.UnsetValue</returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.MinMaxConverter.MinValue">
            <summary>
            The minimum value returned by the Convert method or null to not constrain the minimum
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.MinMaxConverter.MaxValue">
            <summary>
            The maximum value returned by the Convert method or null to not constrain the maximum.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.ClickHelper">
            <summary>
            Helper class for invoking an action on the left mouse up.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.NullableRoutedPropertyChangedEventArgs`1">
            <summary>
            Custom event arguments for a property change event involving a Nullable&lt;T&gt;
            </summary>
            <typeparam name="T">The value type for the nullable property change</typeparam>
        </member>
        <member name="M:Infragistics.Controls.NullableRoutedPropertyChangedEventArgs`1.#ctor(System.Nullable{`0},System.Nullable{`0})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.NullableRoutedPropertyChangedEventArgs`1"/>
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Infragistics.Controls.NullableRoutedPropertyChangedEventHandler`1">
            <summary>
            Delegate used to represent a method that will handle a property change involving a nullable property.
            </summary>
            <typeparam name="T">The underlying type of property value for the event</typeparam>
            <param name="sender">The object for which the event is being raised.</param>
            <param name="e">The event arguments that provides additional information about the property change.</param>
        </member>
        <member name="M:Infragistics.IObjectFactory`1.Create">
            <summary>
            Creates an instance of <typeparamref name="T"/>
            </summary>
            <returns>An instance of <typeparamref name="T"/></returns>
        </member>
        <member name="P:Infragistics.IObjectFactory`1.Type">
            <summary>
            Returns the type that the object will create.
            </summary>
        </member>
        <member name="T:Infragistics.PropertySerializationInfo">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.PropertySerializationInfo.#ctor(System.Type,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="type">Type of the property.</param>
            <param name="name">Name of the property.</param>
        </member>
        <member name="M:Infragistics.PropertySerializationInfo.GetHashCode">
            <summary>
            Overridden. Returns the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.PropertySerializationInfo.Equals(System.Object)">
            <summary>
            Overridden. Checks to see if the specified object is equal to this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.PropertySerializationInfo.Type">
            <summary>
            Type of the property.
            </summary>
        </member>
        <member name="P:Infragistics.PropertySerializationInfo.Name">
            <summary>
            Name of the property.
            </summary>
        </member>
        <member name="T:Infragistics.DependencyObjectSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing dependency objects.
            </summary>
        </member>
        <member name="M:Infragistics.DependencyObjectSerializationInfo.#ctor(System.Type,System.Windows.DependencyProperty[])">
            <summary>
            Constructor.
            </summary>
            <param name="type"></param>
            <param name="dpProps"></param>
        </member>
        <member name="T:Infragistics.ReflectionSerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing an object using reflection. 
            It only serializes public properties.
            </summary>
        </member>
        <member name="M:Infragistics.ReflectionSerializationInfo.#ctor(System.Type,System.Func{System.Object},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="type">Type of objects that this serialization info will serialize.</param>
            <param name="objectCreator">Used to create the object when deserializing. If null then public parameterless constructor will be used.</param>
            <param name="serializeDefaultValues">Specifies whether to serialize null values.</param>
        </member>
        <member name="M:Infragistics.AttributeValueParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.AttributeValueParser.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="dataPresenterCompatibilityMode">This parameter is for maintaining data presenter
            load-save behavior where it uses some wpf specific converters as well as has fallback
            logic for generically parsing some types using Utilities.ConvertDataValule.</param>
        </member>
        <member name="T:Infragistics.ObjectSerializer">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.ObjectSerializer.#ctor(Infragistics.AttributeValueParser)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.ObjectSerializer.RegisterInfo(System.Type,Infragistics.ObjectSerializationInfo)">
            <summary>
            Registers an instance of ObjectSerializationInfo for a specific type where ObjectSerializationInfo
            can serialize and deserialize instances of that type.
            </summary>
            <param name="type"></param>
            <param name="info"></param>
        </member>
        <member name="M:Infragistics.ObjectSerializer.RegisterReflectionSerializationInfo(System.Type)">
            <summary>
            Registers an instance of ReflectionSerializationInfo for the specified type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Infragistics.ObjectSerializer.GetRegisteredInfo(System.Type)">
            <summary>
            Gets the object serialization information that was registed with <see cref="M:Infragistics.ObjectSerializer.RegisterInfo(System.Type,Infragistics.ObjectSerializationInfo)"/> method.
            </summary>
            <param name="type">Type for which to get the registered object serialization information</param>
            <returns><see cref="T:Infragistics.ObjectSerializationInfo"/> instance.</returns>
        </member>
        <member name="M:Infragistics.ObjectSerializer.GetRegisteredInfo(System.Type,System.String)">
            <summary>
            Gets the object serialization info for the type with the name of the 'typeName' and that is a base of the
            specified 'baseType'.
            </summary>
            <param name="baseType">Base type to match.</param>
            <param name="typeName">Name of the type to match.</param>
            <returns>ObjectSerializationInfo instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.PresentationUtilities.GetVisualDescendant``1(System.Windows.DependencyObject,System.Predicate{``0},System.Predicate{System.Windows.DependencyObject})">
            <summary>
            Helper method to enumerate into the visual descendants of an element.
            </summary>
            <typeparam name="T">The type of element being sought</typeparam>
            <param name="element">The element whose descendants are to be traversed</param>
            <param name="match">The method invoked when a <typeparamref name="T"/> is found to determine if that is the one being sought</param>
            <param name="skipDescend">The method invoked when an element is about to be traversed to determine if the descendants should be checked</param>
            <returns>The element located or null if one was not found</returns>
        </member>
        <member name="M:Infragistics.Controls.PresentationUtilities.GetImmediateDescendant(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Helper routine similar to find ancestor except that it returns the direct child that 
            contains the descendant.
            </summary>
            <param name="descendant">The nested descendant from which to start searching the ancestors</param>
            <param name="ancestor">The ancestor whose direct child is to be returned</param>
        </member>
        <member name="M:Infragistics.Controls.PresentationUtilities.HasNoOtherModifiers(System.Windows.Input.ModifierKeys)">
            <summary>
            Helper method to ensure that no modifier keys except optionally the ones specified are pressed
            </summary>
            <param name="modifiersToIgnore">The modifier keys which can be ignored</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.PresentationUtilities.IsModifierPressed(System.Windows.Input.ModifierKeys,System.Windows.Input.ModifierKeys)">
            <summary>
            Helper method to see if only the specified key is pressed
            </summary>
            <param name="modifier">The modifier key to check for</param>
            <param name="modifiersToIgnore">The modifiers that may be ignore. For example this could be Shift if you are concerned with Ctrl or Ctrl-Shift.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.PresentationUtilities.MayBeVisible(System.Windows.FrameworkElement)">
            <summary>
            Used to eliminate elements that are definitely not in view.
            </summary>
            <param name="element">Element to evaluate</param>
            <returns>Returns false if the element is collapsed, has no visual parent, etc.; otherwise returns true.</returns>
        </member>
        <member name="P:Infragistics.Controls.BindingPart.Path">
            <summary>
            This is only needed if indexing into a property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.BindingPart.PathParameter">
            <summary>
            This should be a DP (for WPF), a FieldInfo (in SL this should only be for attached props), a PropertyInfo or a PropertyDescriptor (for WPF).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.RotateDecorator">
            <summary>
            Element used to rotate its content
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.RotateDecorator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.RotateDecorator"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.RotateDecorator.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="arrangeBounds">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.RotateDecorator.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="constraint">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.RotateDecorator.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Primitives.RotateDecorator.AngleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Primitives.RotateDecorator.Angle"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.RotateDecorator.Angle">
            <summary>
            Returns or sets the angle to rotate the content
            </summary>
            <seealso cref="F:Infragistics.Controls.Primitives.RotateDecorator.AngleProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollInfo">
            <summary>
            Exposes scrollbar related settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.ScrollInfo"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.Initialize(System.Double,System.Double,System.Double)">
            <summary>
            Initializes the state of the scroll info.
            </summary>
            <param name="viewport">The viewport extent (i.e. the visible area)</param>
            <param name="extent">The overall extent (i.e. the size of the content)</param>
            <param name="offset">The position within the scrollable area</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ScrollInfo.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property notification should be sent.
            </summary>
            <param name="propertyName">The string identifying the property being changed</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ComputedScrollBarIsEnabled">
            <summary>
            Returns a value indicating the preferred IsEnabled state of the scrollbar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ComputedScrollBarVisibility">
            <summary>
            Returns a value indicating the preferred visibility of the scrollbar.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Extent">
            <summary>
            Returns the Extent value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Maximum">
            <summary>
            Returns the Maximum
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Minimum">
            <summary>
            Returns the Minimum value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Offset">
            <summary>
            Returns the Offset value
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ScrollBarVisibility">
            <summary>
            Returns or sets a value used to determine when the scroll bar should be visible
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.ScrollableExtent">
            <summary>
            Returns the difference between the viewport and extent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollInfo.Viewport">
            <summary>
            Returns the Viewport value
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Primitives.ScrollInfo.PropertyChanged">
            <summary>
            Invoked when the value of a property of the object has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollBarInfoMediator">
            <summary>
            Helper class for managing the properties of a ScrollBar and ScrollInfo
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ScrollBarInfoMediator.IsInitializingScrollBar">
            <summary>
            Returns a boolean indicating if the scrollbar is being initialized based on the scroll info.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollBarVisibilityCoordinator">
            <summary>
            Helper class for synchronizing/coordinating the visibility of multiple ScrollBarInfoMediator instances. Essentially this 
            is used when there are multiple scrollbars in the ui and their Visibility should be tied together.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ElementScrollInfo">
            <summary>
            Custom ScrollInfo class that is associated with a specific element and will invalidate the measure when the scroll position changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.MergedScrollInfo">
            <summary>
            Custom scroll info that is used to aggregate the values (other than offset) of multiple scroll infos
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ScrollInfoAutomationProvider">
            <summary>
            Automation IScrollProvider that deals with a horizontal and vertical <see cref="T:Infragistics.Controls.Primitives.ScrollInfo"/>
            </summary>
        </member>
        <member name="T:Infragistics.TimeRange">
            <summary>
            Represents a range of time.
            </summary>
            <remarks>
            <para class="body">
            <b>TimeRange</b> class represents a range of time as defined by start and end <i>TimeSpan</i> values.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.TimeRange.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.TimeRange"/>.
            </summary>
            <param name="start">Start time of the time range, inclusive.</param>
            <param name="end">Start time of the time range, exclusive.</param>
        </member>
        <member name="P:Infragistics.TimeRange.End">
            <summary>
            Specifies the end time of the time range.
            </summary>
        </member>
        <member name="P:Infragistics.TimeRange.Start">
            <summary>
            Specifies the start time of the time range.
            </summary>
        </member>
        <member name="T:Infragistics.TimeRange.SerializationInfo">
            <summary>
            Provides necessary information to the ObjectSerializerBase for serializing and deserializing a TimeRange.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Primitives.ValueConverterGroup">
            <summary>
            Custom value converter where the results are based upon the value converters in the <see cref="P:Infragistics.Controls.Primitives.ValueConverterGroup.Converters"/> collection
            </summary>
            <remarks>
            <p class="body">This value converter will enuerate the converters in the <see cref="P:Infragistics.Controls.Primitives.ValueConverterGroup.Converters"/> collection when its 
            Convert and ConvertBack method are invoked. The first converter that returns a value other than DependencyProperty.UnsetValue will 
            be returned from the method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ValueConverterGroup.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Primitives.ValueConverterGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ValueConverterGroup.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the result of the first converter in the <see cref="P:Infragistics.Controls.Primitives.ValueConverterGroup.Converters"/> collection that returns a value for the specified parameters.
            </summary>
            <param name="value">The value to convert</param>
            <param name="targetType">The destination type of the conversion</param>
            <param name="parameter">The parameter for the conversion</param>
            <param name="culture">The culture to use during the conversion</param>
            <returns>The result of the first converter to return a value; otherwise DependencyProperty.UnsetValue if there is no converted value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.ValueConverterGroup.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the result of the first converter in the <see cref="P:Infragistics.Controls.Primitives.ValueConverterGroup.Converters"/> collection that returns a value for the specified parameters.
            </summary>
            <param name="value">The value to convert</param>
            <param name="targetType">The destination type of the conversion</param>
            <param name="parameter">The parameter for the conversion</param>
            <param name="culture">The culture to use during the conversion</param>
            <returns>The result of the first converter to return a value; otherwise DependencyProperty.UnsetValue if there is no converted value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Primitives.ValueConverterGroup.Converters">
            <summary>
            The collection of converters that will be used to convert the value.
            </summary>
        </member>
        <member name="M:Infragistics.Collections.WeakSet`1.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Collections.WeakSet`1"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.XamDayView">
            <summary>
            Custom control used to display activity relative to time slots in a vertical arrangement.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.CreateTimeslotAreaAdapter(Infragistics.Controls.Schedules.TimeslotRangeGroup,System.Func{System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Action{Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Func{System.DateTime,System.DateTime},Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Helper method for creating a timeslotgroup adapter
            </summary>
            <param name="groupInfo">Provides the date information for the group</param>
            <param name="creatorFunc">The callback used to create an instance of the timeslotbase instance.</param>
            <param name="initializer">The method used to initialize the state of the timeslotbase instance.</param>
            <param name="modifyDateFunc">Optional callback used to adjust the start/end date for a timeslot.</param>
            <param name="activityOwner">An optional group that provides the activity information or null if no activity will be shown.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.GetCalendarGroupAutomationScrollInfo(Infragistics.Controls.Primitives.ScrollInfo@,Infragistics.Controls.Primitives.ScrollInfo@)">
            <summary>
            Returns the horizontal and vertical scrollinfo instances to be used by the automation peer for the CalendarGroupTimeslotArea.
            </summary>
            <param name="horizontal">Out parameter set to the horizontal scrollinfo or null</param>
            <param name="vertical">Out parameter set to the vertical scrollinfo or null</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.GetTimeslotFromSelection(Infragistics.DateRange,System.Boolean)">
            <summary>
            Return the timeslot that represents the start or end of the current timeslot selection.
            </summary>
            <param name="selection">The selection range to evaluate</param>
            <param name="fromStart">True to get the starting timeslot for the selection; otherwise false to get the ending timeslot for the selection</param>
            <returns>The range that represents the timeslot for the start/end of the range</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.IsTimeslotRangeGroupBreak(System.DateTime,System.DateTime)">
            <summary>
            Used by the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotInfo"/> to determine if 2 visible dates are considered to be part of the same group of timeslots.
            </summary>
            <param name="previousDate">Previous date processed</param>
            <param name="nextDate">Next date to be processed</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamDayViewAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.RefreshDisplay">
            <summary>
            Releases the entire element tree so it can be recreated
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamDayView.MultiDayActivityAreaVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamDayView.MultiDayActivityAreaVisibility"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.GetFlag(Infragistics.Controls.Schedules.XamDayView.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamDayView.OnDayHeaderClick(Infragistics.Controls.Schedules.ResourceCalendar,System.DateTime)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamDayView.DayHeaderClick"/> event.
            </summary>
            <param name="calendar">ResourceCalendar whose week header was clicked</param>
            <param name="date">The start of the logical day whose header was clicked</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamDayView.DayHeaderClick"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.DayViewDayHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamDayView.IsVerifyStateNeeded">
            <summary>
            Returns a boolean indicating if the VerifyStateOverride is needed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamDayView.SupportsTodayHighlight">
            <summary>
            Returns a boolean indicating if the control is capable of showing a highlight around the current day.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamDayView.TimeslotAreaTimeslotOrientation">
            <summary>
            The orientation of timeslots within a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeslotArea"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamDayView.MultiDayActivityAreaVisibility">
            <summary>
            Returns or sets a value indicating whether the multi day activity area should be displayed beneath each day header.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamDayView.MultiDayActivityAreaVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamDayView.DayHeaderActivityScrollInfo">
            <summary>
            Returns the scrollinfo used to control the scrolling of the activity in the all day activity area.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamDayView.DayHeaderClick">
            <summary>
            Occurs when the user clicks on the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.XamMonthView">
            <summary>
            Custom control used to display activity relative to the weeks they occupy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.CreateTimeslotAreaAdapter(Infragistics.Controls.Schedules.TimeslotRangeGroup,System.Func{System.DateTime,System.DateTime,Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Action{Infragistics.Controls.Schedules.Primitives.TimeslotBase},System.Func{System.DateTime,System.DateTime},Infragistics.Controls.Schedules.CalendarGroupBase)">
            <summary>
            Helper method for creating a timeslotgroup adapter
            </summary>
            <param name="groupInfo">Provides the date information for the group</param>
            <param name="creatorFunc">The callback used to create an instance of the timeslotbase instance.</param>
            <param name="initializer">The method used to initialize the state of the timeslotbase instance.</param>
            <param name="modifyDateFunc">Optional callback used to adjust the start/end date for a timeslot.</param>
            <param name="activityOwner">An optional group that provides the activity information or null if no activity will be shown.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.GetCalendarGroupAutomationScrollInfo(Infragistics.Controls.Primitives.ScrollInfo@,Infragistics.Controls.Primitives.ScrollInfo@)">
            <summary>
            Returns the horizontal and vertical scrollinfo instances to be used by the automation peer for the CalendarGroupTimeslotArea.
            </summary>
            <param name="horizontal">Out parameter set to the horizontal scrollinfo or null</param>
            <param name="vertical">Out parameter set to the vertical scrollinfo or null</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.GetDefaultSelectedRange(System.DateTime)">
            <summary>
            Returns a local time range that represents the selection range for the specified logical date.
            </summary>
            <param name="logicalDate">The logical date whose range is to be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.IsTimeslotRangeGroupBreak(System.DateTime,System.DateTime)">
            <summary>
            Used by the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotInfo"/> to determine if 2 visible dates are considered to be part of the same group of timeslots.
            </summary>
            <param name="previousDate">Previous date processed</param>
            <param name="nextDate">Next date to be processed</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnActiveCalendarChanged(Infragistics.Controls.Schedules.ResourceCalendar,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/> event.
            </summary>
            <param name="oldValue">The old property value</param>
            <param name="newValue">The new property value</param>
            <seealso cref="E:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendarChanged"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.ActiveCalendar"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.XamMonthView"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamMonthViewAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnSelectedTimeRangeChanged(System.Nullable{Infragistics.DateRange},System.Nullable{Infragistics.DateRange})">
            <summary>
            Invoked when the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.SelectedTimeRange"/> has changed.
            </summary>
            <param name="oldValue">The previous selected range</param>
            <param name="newValue">The new selected range</param>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamMonthView.ShowWeekNumbersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamMonthView.ShowWeekNumbers"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamMonthView.ShowWorkingDaysOfWeekOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamMonthView.ShowWorkingDaysOfWeekOnly"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamMonthView.WeekScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamMonthView.WeekScrollBarVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamMonthView.WorkingDaysSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamMonthView.WorkingDaysSource"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.GetFlag(Infragistics.Controls.Schedules.XamMonthView.InternalFlags)">
            <summary>
            Returns true if any of the specified bits are true.
            </summary>
            <param name="flag">Flag(s) to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnDayHeaderClick(Infragistics.Controls.Schedules.ResourceCalendar,System.DateTime)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamMonthView.DayHeaderClick"/> event.
            </summary>
            <param name="calendar">ResourceCalendar whose week header was clicked</param>
            <param name="date">The start of the logical day whose header was clicked</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamMonthView.DayHeaderClick"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamMonthView.OnWeekHeaderClick(Infragistics.Controls.Schedules.ResourceCalendar,System.DateTime)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamMonthView.WeekHeaderClick"/> event.
            </summary>
            <param name="calendar">ResourceCalendar whose week header was clicked</param>
            <param name="date">The start of the logical week</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamMonthView.WeekHeaderClick"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamMonthView.ShowWeekNumbers">
            <summary>
            Returns or sets a value indicating whether week numbers should be displayed in the week headers instead of the date range.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamMonthView.ShowWeekNumbersProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamMonthView.ShowWorkingDaysOfWeekOnly">
            <summary>
            Returns or sets a value indicating whether non-working days of the week should be excluded from the display.
            </summary>
            <remarks>
            <p class="body">This property is used to hide an entire day of the week if the currently selected weeks do not contain any 
            dates </p>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.XamMonthView.ShowWorkingDaysOfWeekOnlyProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamMonthView.WeekScrollBarVisibility">
            <summary>
            Returns or sets a value that indicates whether the week scrollbar is displayed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamMonthView.WeekScrollBarVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamMonthView.WorkingDaysSource">
            <summary>
            Returns or sets a value that indicates what is used to resolved the working days when the <see cref="P:Infragistics.Controls.Schedules.XamMonthView.ShowWorkingDaysOfWeekOnly"/> is enabled.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamMonthView.WorkingDaysSourceProperty"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamMonthView.DayHeaderClick">
            <summary>
            Occurs when the user clicks on the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewDayHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamMonthView.WeekHeaderClick">
            <summary>
            Occurs when the user clicks on the <see cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> The <see cref="P:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs.Date"/> represents the logical day that is the start of the week whose header was clicked.</p>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.MonthViewWeekHeader"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleHeaderClickEventArgs"/>
        </member>
        <member name="T:Infragistics.Controls.Schedules.XamScheduleDataManager">
            <summary>
            XamScheduleDataManager class manages schedule data.
            </summary>
            <remarks>
            <para class="body">
            <b>XamScheduleDataManager</b> class manages schedule data. Various schedule controls, like the <see cref="T:Infragistics.Controls.Schedules.XamDayView"/>,
            are provided with an instance of <i>XamScheduleDataManager</i> from which they retrieve the scheduling information
            displayed by them.
            </para>
            <para class="body">
            The <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/> property is used to associate a schedule control with an
            instance of <i>XamScheduleDataManager</i>.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Schedules.XamScheduleDataManager"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnApplyTemplate">
            <summary>
            Invoked when the template for the control has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivitiesDragging(Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragging"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragging"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivitiesDragged(Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragged"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityDialogDisplaying(Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityAdding(Infragistics.Controls.Schedules.ActivityAddingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityAdded(Infragistics.Controls.Schedules.ActivityAddedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityChanging(Infragistics.Controls.Schedules.ActivityChangingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityChanged(Infragistics.Controls.Schedules.ActivityChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRecurrenceDialogDisplaying(Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceDialogDisplaying"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceDialogDisplaying"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRecurrenceChooserDialogDisplaying(Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceChooserDialogDisplaying"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRemoving(Infragistics.Controls.Schedules.ActivityRemovingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRemoved(Infragistics.Controls.Schedules.ActivityRemovedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoved"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoved"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityResizing(Infragistics.Controls.Schedules.ActivityResizingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResizing"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResizing"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityResized(Infragistics.Controls.Schedules.ActivityResizedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResized"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResized"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnError(Infragistics.Controls.Schedules.ErrorEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnErrorDisplaying(Infragistics.Controls.Schedules.ErrorDisplayingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ErrorDisplaying"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ErrorDisplaying"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnReminderActivated(Infragistics.Controls.Schedules.ReminderActivatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderActivated"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderActivated"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnReminderDialogDisplaying(Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderDialogDisplaying"/> event.
            </summary>
            <param name="args">Event args for raising the event.</param>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderDialogDisplaying"/>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserIdProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserId"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnectorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnector"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProvider"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DialogFactoryProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DialogFactory"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.HasPendingOperationsProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.HasPendingOperations"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.PromptForLocalTimeZoneProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.PromptForLocalTimeZone"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItemsPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItems"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItemsProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItems"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.SettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.Settings"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.BlockingErrorProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.BlockingError"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentDateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentDate"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.AreActivitiesSupported(Infragistics.Controls.Schedules.ActivityType)">
            <summary>
            Indicates whether the activities of the specified activity type are supported by this data connector.
            </summary>
            <param name="activityType">Activity type.</param>
            <returns>True if the specified activities are supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if activities of the specified type are supported by the data connector.
            If they are not supported, relevant user interface will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.BeginEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Begins modifications to an activity.
            </summary>
            <param name="activity">ActivityBase derived object that is to be modified.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A value indicating whether the operation succeeded.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> BeginEdit cannot be called more than once without an intervening call to CancelEdit or EndEdit. Successive BeginEdit
            calls will result an error and return false.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.BeginEditWithCopy(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,Infragistics.DataErrorInfo@)">
            <summary>
            Used to make a copy of an activity for the purposes of editing it without affecting the original activity until all the changes need to be committed.
            </summary>
            <param name="activity">ActivityBase derived object for which a copy will be created.</param>
            <param name="synchronizeChangesFromOriginalActivity">If true any changes made to the original activity will be
            applied to the copy that's returned.</param>
            <param name="error">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>Cloned copy of the specified activity.</returns>
            <remarks>
            <para class="body">
            <b>BeginEditWithCopy</b> method is meant to be used to create a copy of an activity so the copy can be
            modified without affecting the original activity. It returns a copy of the original activity.
            When the changes made to the copy need to be committed to the original activity, call 
            <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method passing to it the clone activity that's returned by this method. Also to 
            cancel and discard the clone activity, you need to call CancelEdit passing it the clone activity.
            </para>
            <para class="body">
            <b>Note</b> that successive calls to this method without intervening cancel edit or end edit operations
            on the returned clone will result in the same clone being returned.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)">
            <summary>
            Cancels a new activity that was created by the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> call however one that 
            hasn't been commited yet.
            </summary>
            <param name="activity">ActivityBase derived object that was created using <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method however
            one that hasn't been committed yet.</param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>Note:</b> <b>CancelEdit</b> method is called to cancel a new activity that was created using the 
            <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method however the activity must not have been commited yet. This is 
            typically done when the user cancels the dialog for creating a new activity, like the new appointment dialog.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelPendingOperation(Infragistics.OperationResult)">
            <summary>
            Cancels a pending operation.
            </summary>
            <param name="operation">Pending operation that is to be canceled.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>CancelPendingOperation</b> method is called to cancel a pending operation. It's only valid for
            operations that are still pending, that is their <see cref="P:Infragistics.OperationResult.IsComplete"/> is false.
            </para>
            <para class="body">
            An example of how this method is used is as follows. <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)"/>
            method returns <see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> object. The activities can be retrieved 
            asynchronously. Before the activities are retrieved, there may be a need for canceling the operation.
            For example, the user scrolls the schedule control to a different range of dates in which case
            it's not necessary to retrieve activities for the perviously visible date range. In such a case,
            the previous query operation will be canceled if it's still pending.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)">
            <summary>
            Creates a new ActivityBase derived instance based on the activityType parameter.
            </summary>
            <param name="activityType"></param>
            <param name="errorInfo">If there's an error this will be set to a new DataErrorInfo object with the error information.</param>
            <returns>A new ActivityBase derived object created according to the activityType parameter.</returns>
            <remarks>
            <para class="body">
            <b>CreateActivity</b> creates a new <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived object, like Appointment, Journal or Task.
            Which activity type to create is specified by the <paramref name="activityType"/> parameter. Note that the created activity 
            doesn't get commited to the data source until <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/> method is called. Also if you wish to
            not commit the created activity then it is necessary to call <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/> 
            so the activity object can be properly discarded by the the schedule data connector.
            </para>
            <para class="body">
            <b>Note:</b> <b>CreateNew</b> method is called to create a new Appointment, Journal or Task object. 
            This is typically done when the user initiates creation of a new activity in one of the calendar view controls. If 
            the user commits the appointment then <i>EndEdit</i> method is called to commit the activity. 
            If the user cancels the activity creation then <i>CancelEdit</i> method is called to discard the activity object.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Commits a new or modified activity.
            </summary>
            <param name="activity">A new or modified ActivityBase derived instance. 
            If <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.BeginEditWithCopy(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,Infragistics.DataErrorInfo@)"/> is used to start edit operation, you can pass the copy that 
            was returned from that method.</param>
            <param name="force">True to force the edit operation to end. Used when user interface
            being used to perform the edit operation cannot remain in edit mode.
            </param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityOperationResult"/> instance which may be initialized with the result
            asynchronously.</returns>
            <remarks>
            <para class="body">
            <b>EndEdit</b> method is used to commit a modified activity or a new activity that 
            was created using the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/> method.
            </para>
            <para class="body">
            <b>Note</b> that the operation of committing an activity can be performed either synchronously
            or asynchronously. If the operation is performed synchronously then the information regarding
            the result of the operation will be contained in the returned <i>ActivityOperationResult</i>
            instance. If the operation is performed asynchronously, the method will return an 
            <i>ActivityOperationResult</i> instance whose results will be initialized later when they
            are available via the ActivityOperationResult's <see cref="M:Infragistics.Controls.Schedules.ActivityOperationResult.InitializeResult(Infragistics.DataErrorInfo,System.Boolean)"/>
            method. The caller, which may be a schedule control, will indicate via the UI that the operation
            is pending and when the results are initialized, it will show the user with appropriate
            status of the operation.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.Remove(Infragistics.Controls.Schedules.ActivityBase)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityFeature)">
            <summary>
            Indicates whether the specified feature is supported for the activities of the specified type.
            </summary>
            <param name="activity">Activity object to check if the specified feature is supported.</param>
            <param name="activityFeature">Feature to check for support.</param>
            <returns>True if the feature is supported. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityFeatureSupported(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityFeature,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified feature is supported for the activities of the specified type.
            </summary>
            <param name="activityType">Activity type for which to check if the specified feature is supported.</param>
            <param name="activityFeature">Feature to check for support.</param>
            <param name="calendar">Resource calendar context.</param>
            <returns>True if the feature is supported. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityOperationAllowed(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activity">Activity instance.</param>
            <param name="activityOperation">Activity operation.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the activities of the specified type.
            If the operation is not supported, relevant user interface will be disabled or hidden in the schedule controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityOperationAllowed(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ActivityOperation,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Indicates whether the specified activity operation for the specified activity type is supported.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="activityOperation">Activity operation.</param>
            <param name="calendar">ResourceCalendar for which to check if the operation can be performed.</param>
            <returns>True if the operation is supported. False otherwise.</returns>
            <remarks>
            <para class="body">
            This method is used by the data manager to determine if the specified operation is supprted for the activities of the 
            specified type for the specified ResourceCalendar. If the operation is not supported, relevant user interface will 
            be disabled or hidden in the schedule controls.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.Remove(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Deletes an activity.
            </summary>
            <param name="activity">ActivityBase derived instance to delete.</param>
            <returns>True to indicate that the operation was successfull, False otherwise.</returns>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CreateNew(Infragistics.Controls.Schedules.ActivityType,Infragistics.DataErrorInfo@)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEdit(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CancelEdit(Infragistics.Controls.Schedules.ActivityBase,Infragistics.DataErrorInfo@)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayActivityDialog(Infragistics.Controls.Schedules.ActivityType,System.Windows.FrameworkElement,Infragistics.Controls.Schedules.ResourceCalendar,System.DateTime,System.TimeSpan,System.Boolean)">
            <summary>
            Displays a dialog that allows the user to add an <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived activity (e.g., <see cref="T:Infragistics.Controls.Schedules.Appointment"/>, <see cref="T:Infragistics.Controls.Schedules.Journal"/> and <see cref="T:Infragistics.Controls.Schedules.Task"/>).
            </summary>
            <param name="activityType">The type of see<see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived activity to display the dialog for.</param>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <param name="calendar">The <see cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/> to which the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> should be added.</param>
            <param name="startTime">The preferred start time of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> .</param>
            <param name="duration">The preferred duration of the <see cref="T:Infragistics.Controls.Schedules.Appointment"/> </param>
            <param name="isTimeZoneNeutral">True if the activity's times are time-zone neutral (i.e., 'floating').  </param>
            <returns>True if a dialog was displayed, otherwise false.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityType"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ResourceCalendar"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayActivityDialog(Infragistics.Controls.Schedules.ActivityBase,System.Windows.FrameworkElement)">
            <summary>
            Displays a dialog that allows the user to edit an <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived activity (e.g., <see cref="T:Infragistics.Controls.Schedules.Appointment"/>, <see cref="T:Infragistics.Controls.Schedules.Journal"/> and <see cref="T:Infragistics.Controls.Schedules.Task"/>).
            </summary>
            <param name="activity">The <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> derived instance to display the dialog for.</param>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <returns>True if a dialog was displayed, otherwise false.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityType"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Appointment"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Journal"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Task"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayActivityRecurrenceDialog(System.Windows.FrameworkElement,Infragistics.Controls.Schedules.ActivityBase,System.Object,System.Func{System.Boolean},System.Action{System.Nullable{System.Boolean}})">
            <summary>
            Displays the Activity Recurrence dialog.
            </summary>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <param name="activity">The activity to edit.</param>
            <param name="header">The header (caption) of the dialog</param>
            <param name="closingCallback">A callback to call when when the window is closing, since the call to show the dialog may not be blocking.</param>
            <param name="closedCallback">A callback to call when when the window has closed, since the call to show the dialog may not be blocking.</param>
            <returns>Returns true if the dialog was displayed; otherwise false is returned</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayActivityRecurrenceChooserDialog(System.Windows.FrameworkElement,System.Object,Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.RecurrenceChooserType,Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult,System.Func{System.Boolean},System.Action{System.Nullable{System.Boolean}})">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> which lets the end user choose a Recurrence Series or Occurrence.  A parameter can be passed to the dialog
            that specifies whether the choice applies to the opening or deletion of the Series/Occurrence.
            </summary>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <param name="header">The header (caption) of the dialog</param>
            <param name="activity">The recurring <see cref="T:Infragistics.Controls.Schedules.ActivityBase"/> for which the choice is being made.</param>
            <param name="chooserType">The type of <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> to display, i.e. a chooser for opening recurrences or deleting recurrences.</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult"/> instance.  The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog.RecurrenceChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
            <param name="closingCallback">A callback to call when when the window is closing, since the call to show the dialog may not be blocking.</param>
            <param name="closedCallback">A callback to call when when the window has closed, since the call to show the dialog may not be blocking.</param>
            <returns>Returns true if the dialog was displayed</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayReminderDialog(System.Windows.FrameworkElement,System.Object,System.Func{System.Boolean},System.Action{System.Nullable{System.Boolean}})">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/> which lets the end user dismiss or snooze active Reminders.
            </summary>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <param name="header">The header (caption) of the dialog</param>
            <param name="closingCallback">A callback to call when when the window is closing, since the call to show the dialog may not be blocking.</param>
            <param name="closedCallback">A callback to call when when the window has closed, since the call to show the dialog may not be blocking.</param>
            <returns>Returns true if the dialog was displayed (or activated if the window was still displayed); otherwise false if the dialog was not displayed.</returns>
            <seealso cref="T:Infragistics.Controls.Schedules.Reminder"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ReminderDialog"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.DisplayTimeZoneChooserDialog(System.Windows.FrameworkElement,System.Object,Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult,System.Func{System.Boolean},System.Action{System.Nullable{System.Boolean}})">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog"/> which lets the end user choose a TimeZone Series or Occurrence.  A parameter can be passed to the dialog
            that specifies whether the choice applies to the opening or deletion of the Series/Occurrence.
            </summary>
            <param name="container">The FrameworkElement that will contain the dialog.</param>
            <param name="header">The header (caption) of the dialog</param>
            <param name="chooserResult">A reference to a <see cref="T:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult"/> instance.  The dialog will set the <see cref="P:Infragistics.Controls.Schedules.Primitives.TimeZoneChooserDialog.TimeZoneChooserResult.Choice"/> property when the dialog closes to reflect the user's choice.</param>
            <param name="closingCallback">A callback to call when when the window is closing, since the call to show the dialog may not be blocking.</param>
            <param name="closedCallback">A callback to call when when the window has closed, since the call to show the dialog may not be blocking.</param>
            <returns>Returns true if the dialog was displayed</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetActivities(Infragistics.Controls.Schedules.ActivityQuery)">
            <summary>
            Returns activities matching the criteria specified by the query parameter.
            </summary>
            <param name="query">Contains information regarding which activties to get.</param>
            <returns><see cref="T:Infragistics.Controls.Schedules.ActivityQueryResult"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetResolvedDefaultWorkingHours">
            <summary>
            Gets the default working hours.
            </summary>
            <returns>A read-only WorkingHoursCollection instance.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetWorkingHours(Infragistics.Controls.Schedules.Resource,System.DateTime)">
            <summary>
            Gets the working hours for the specified resource on the day specified by the 'date' parameter.
            </summary>
            <param name="resource">Resource whose working hours to get.</param>
            <param name="date">Day for which to get the working hours.</param>
            <returns>WorkingHoursCollection instance that contains the working hours or null if the day is not a work-day.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsWorkDayResolved(Infragistics.Controls.Schedules.Resource,System.DayOfWeek)">
            <summary>
            Gets a value indicating whether the specified day of week is a work-day.
            </summary>
            <param name="resource">Resource whose information to get.</param>
            <param name="dayOfWeek">Day of week.</param>
            <returns>True if the day of week is a work-day, false otherwise.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsWorkDayResolved(Infragistics.Controls.Schedules.Resource,System.DateTime)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsWorkDayResolved(Infragistics.Controls.Schedules.Resource,System.DateTime)">
            <summary>
            Gets a value indicating whether the day specified by the 'date' parameter is a work-day.
            </summary>
            <param name="resource">Resource whose information to get.</param>
            <param name="date">Day for which to get the information.</param>
            <returns>True if the day is a work-day, false otherwise.</returns>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.WorkingHours"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleSettings.DaysOfWeek"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsWorkDayResolved(Infragistics.Controls.Schedules.Resource,System.DayOfWeek)"/>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.RefreshDisplay">
            <summary>
            Calls RefreshDisplay on all associated controls
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.CommitActivityHelper(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Calls BeginEdit and EndEdit on the activity to commit any changes that may have been
            made to the activity.
            </summary>
            <param name="activity">Activity to commit.</param>
            <remarks>
            This is necessary because a data connector may rely on EndEdit as a trigger to update
            the underlying backend. If that's the case then simply changing an activity's property
            will not cause the connector to commit it. To put less responsibility on connector 
            implementations, we'll go through BeginEdit and EndEdit process when we make a change
            to an activity. Furthermore, any errors in the process can be handled by the UI.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityDraggingAllowed(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ResourceCalendar,System.Boolean)">
            <summary>
            Gets a value indicating if activity dragging is supported and if so whether it can be dragged to a different calendar of the same resource
            or a calendar of a different user.
            </summary>
            <param name="activity">Activity that is to be dragged.</param>
            <param name="targetCalendar">The calendar to which the activity is being dragged or null when the drag is about to be invoked</param>
            <param name="copy">Determines if the drag operation will be a copy or a move</param>
            <returns>A boolean indicating if the drag operation is allowed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityOperationAllowedHelper(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.ActivityOperation,System.Boolean)">
            <summary>
            Helper method used by the controls to determine if operations are allowed.
            </summary>
            <param name="activity">Activity for which the operation will be performed</param>
            <param name="operation">The operation to query</param>
            <param name="checkPendingOperation">True to consider the PendingOperation</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityReminderAllowed(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Indicates whether the user can specify activity reminders.
            </summary>
            <param name="activity">Activity object to check.</param>
            <returns>True if the reminder is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsActivityResizeAllowed(Infragistics.Controls.Schedules.ActivityBase,System.Boolean)">
            <summary>
            Indicates whether the end user may resize an activity within the ui
            </summary>
            <param name="activity">Activity to evaluate</param>
            <param name="start">True for the leading edge, otherwise false for the trailing edge</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsRecurringActivityAllowed(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets a resolved value indicating whether the user allowed to create recurring activities.
            </summary>
            <param name="activity">Activity object to check if it can be made recurring.</param>
            <returns>True if recurrence is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsRecurringActivityAllowed(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Gets a resolved value indicating whether the user allowed to create recurring activities.
            </summary>
            <param name="activityType">Activity type - one of appointment, journal or task.</param>
            <param name="calendar">Calendar associated with the activity in question.</param>
            <returns>True if the recurring activity is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsTimeZoneNeutralActivityAllowed(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets a resolved value indicating whether the user allowed to create time-zone neutral activities.
            </summary>
            <param name="activity">Activity object to check if it can be made time-zone neutral.</param>
            <returns>True if the time-zone neutral activity is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsTimeZoneNeutralActivityAllowed(Infragistics.Controls.Schedules.ActivityType,Infragistics.Controls.Schedules.ResourceCalendar)">
            <summary>
            Gets a resolved value indicating whether the user allowed to create time-zone neutral activities.
            </summary>
            <param name="activityType">Activity type - one of appointment, journal or task.</param>
            <param name="calendar">Calendar associated with the activity in question.</param>
            <returns>True if the time-zone neutral activity is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.IsVarianceActivityAllowed(Infragistics.Controls.Schedules.ActivityBase)">
            <summary>
            Gets a resolved value indicating whether the user allowed to create variance of the specified occurrence.
            </summary>
            <param name="activity">An activity that is an occurrence of a recurring activity.</param>
            <returns>True if making the activity a variance is allowed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.GetFirstOccurrenceStartTime(Infragistics.Controls.Schedules.ActivityBase,System.DateTime,Infragistics.Controls.Schedules.RecurrenceBase)">
            <summary>
            Returns the date-time of the first occurrence of the recurrence that occurs at or after the specified 'start' value.
            </summary>
            <param name="activity">Activity object. Provides the context of the time-zones.</param>
            <param name="start">The date-time of the first occurrence that occurs at or after this date-time will be returned by this method.</param>
            <param name="recurrence">Object describing the recurrence rules.</param>
            <returns>The date-time of the first occurrence at or after the 'start' parameter is returned. If
            the rules described by the specified recurrence do not have an occurrence at or after the 'start' time 
            null is returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.HasOverlappingOccurrences(Infragistics.Controls.Schedules.ActivityBase,Infragistics.Controls.Schedules.DateRecurrence)">
            <summary>
            Returns a value indicating if the specified recurrence rules will result in overlapping occurrences.
            </summary>
            <param name="activity">Activity instance used to get <see cref="P:Infragistics.Controls.Schedules.ActivityBase.Start"/> of the series as well as the 
            duration of each occurrence based on its <see cref="P:Infragistics.Controls.Schedules.ActivityBase.End"/> property value.</param>
            <param name="recurrence">Recurrence rules.</param>
            <returns>True if two or more occurrences overlap. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.ClearSelectedActivities">
            <summary>
            Clears selected activities in all controls.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleDataManager.EndEditOnCopyHelper(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,System.Boolean)">
            <summary>
            Ends or cancels edit operation that was started via the <see cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.BeginEditWithCopy(Infragistics.Controls.Schedules.ActivityBase,System.Boolean,Infragistics.DataErrorInfo@)"/> method.
            </summary>
            <param name="cloneActivity">The cloned activity that was returned by the <i>BeginEditWithCopy</i> method.</param>
            <param name="cancel">If true, cancels the edit operation. If false, commits the changes made to the clone to the original activity.</param>
            <param name="force"></param>
            <returns>When canceling, returns a DataErrorInfo or null. When committing, returns an ActivityOperationResult instance or DataErrorInfo instance.</returns>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragging">
            <summary>
            Raised when an activity is about to be dragged
            </summary>
            <remarks>
            <para class="body">The <b>ActivitiesDragging</b> event is raised when an activity is about to be dragged</para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivitiesDragging(Infragistics.Controls.Schedules.ActivitiesDraggingEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivitiesDragged">
            <summary>
            Raised after a drag operation involving one or more activities has been completed.
            </summary>
            <remarks>
            <para class="body">The <b>ActivitiesDragged</b> event is raised after a drag operation involving one or more activities has been completed.</para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivitiesDragged(Infragistics.Controls.Schedules.ActivitiesDraggedEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying">
            <summary>
            Raised before an activity dialog is displayed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityDialogDisplaying</b> event is raised before an activity dialog is displayed.
            The dialog can be displayed for the purposes of viewing or modifying an existing activity or
            adding a new activity.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityDialogDisplaying(Infragistics.Controls.Schedules.ActivityDialogDisplayingEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding">
            <summary>
            Raised before an activity is added.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityAdding</b> event is raised before a new activity is added by the user.
            The event is raised after the new activity dialog is okayed.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityAddingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityAdding(Infragistics.Controls.Schedules.ActivityAddingEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdded">
            <summary>
            Raised after an activity is added.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityAdded</b> event is raised after a new activity is successfully commited.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityAddedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityAdded(Infragistics.Controls.Schedules.ActivityAddedEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityDialogDisplaying"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityAdding"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging">
            <summary>
            Raised right before user changes to an activity are being committed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityChanging</b> event is raised right before user changes to an 
            activity are being committed.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityChangingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityChanging(Infragistics.Controls.Schedules.ActivityChangingEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanged">
            <summary>
            Raised after user changes to an activity are committed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityChanged</b> event is raised after user changes to an 
            activity are committed.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityChangedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityChanged(Infragistics.Controls.Schedules.ActivityChangedEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityChanging"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceDialogDisplaying">
            <summary>
            Raised before an activity dialog is displayed.
            </summary>
            <remarks>
            <para class="body">
            The <see cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceDialogDisplaying"/> event is raised before an <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/> is displayed.
            The dialog can be displayed for the purposes of viewing or modifying an existing activity or
            adding a new activity.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRecurrenceDialogDisplaying(Infragistics.Controls.Schedules.ActivityRecurrenceDialogDisplayingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceDialogCore"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRecurrenceChooserDialogDisplaying">
            <summary>
            Raised before the dialog that allows the end user to choose between dealing with the series or occurrence of a recurring activity is displayed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityRecurrenceChooserDialogDisplaying</b> event is raised before the <see cref="T:Infragistics.Controls.Schedules.Primitives.ActivityRecurrenceChooserDialog"/> is displayed. The dialog allows 
            the end user to choose whether to affect the occurrence or the series of a recurring activity. The <see cref="P:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs.ChooserAction"/> 
            may be set to cancel the operation or to explicitly use the series or occurrence without prompting the user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRecurrenceChooserDialogDisplaying(Infragistics.Controls.Schedules.ActivityRecurrenceChooserDialogDisplayingEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving">
            <summary>
            Raised before an activity is removed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityRemoving</b> event is raised before an activity is removed by the user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityRemovingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRemoving(Infragistics.Controls.Schedules.ActivityRemovingEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoved"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoved">
            <summary>
            Raised after an activity is removed.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityRemoved</b> event is raised after an activity is removed by the user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityRemovedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityRemoved(Infragistics.Controls.Schedules.ActivityRemovedEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityRemoving"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResizing">
            <summary>
            Raised before an activity is resized.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityResizing</b> event is raised before an activity is resized by the user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityResizingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityResizing(Infragistics.Controls.Schedules.ActivityResizingEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResized"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResized">
            <summary>
            Raised after an activity is Resized.
            </summary>
            <remarks>
            <para class="body">
            <b>ActivityResized</b> event is raised after an activity is Resized by the user.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ActivityResizedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnActivityResized(Infragistics.Controls.Schedules.ActivityResizedEventArgs)"/>
            <seealso cref="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ActivityResizing"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.Error">
            <summary>
            Raised when an error occurs.
            </summary>
            <remarks>
            <para class="body">
            <b>Error</b> event is raised when an error occurs.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ErrorEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnError(Infragistics.Controls.Schedules.ErrorEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ErrorDisplaying">
            <summary>
            Raised when an error is to be displayed to the end user.
            </summary>
            <remarks>
            <para class="body">This event is raised after an error has occurred and that error is about to be displayed to the end user. The type of 
            display is indicated by the <see cref="P:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.DisplayType"/>. The <see cref="P:Infragistics.Controls.Schedules.ErrorDisplayingEventArgs.Cancel"/> property 
            may be set to true to prevent the error from being displayed.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ErrorEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnError(Infragistics.Controls.Schedules.ErrorEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderActivated">
            <summary>
            Raised when a reminder has been triggered.
            </summary>
            <remarks>
            <para class="body">The <b>ReminderActivated</b> event is raised when a reminder has been triggered.</para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ReminderActivatedEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnReminderActivated(Infragistics.Controls.Schedules.ReminderActivatedEventArgs)"/>
        </member>
        <member name="E:Infragistics.Controls.Schedules.XamScheduleDataManager.ReminderDialogDisplaying">
            <summary>
            Raised when the reminder dialog is about to be displayed.
            </summary>
            <remarks>
            <para class="body">The <b>ReminderDialogDisplaying</b> event is raised when the reminder dialog is about to be displayed.</para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs"/>
            <seealso cref="M:Infragistics.Controls.Schedules.XamScheduleDataManager.OnReminderDialogDisplaying(Infragistics.Controls.Schedules.ReminderDialogDisplayingEventArgs)"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ActiveReminders">
            <summary>
            Gets a collection of active reminders for the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/>.
            </summary>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme">
            <summary>
            Gets/sets the ColorScheme to use to create and cache brushes for the various elements in the associated <see cref="T:Infragistics.Controls.Schedules.ScheduleControlBase"/> derivied classes
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeResolved">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Schedules.CalendarColorScheme"/> that will be used (read-only)
            </summary>
            <value>Returns the <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/> property value if set, otherwise it returns an instance of the <see cref="T:Infragistics.Controls.Schedules.Office2010ColorScheme"/>.</value>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorSchemeResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ColorScheme"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CalendarGroups">
            <summary>
            Returns the default collection of <see cref="T:Infragistics.Controls.Schedules.CalendarGroup"/> instances that represent the groups in view in the controls whose <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.DataManager"/> is set to this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUser">
            <summary>
            Identifies current user.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserId">
            <summary>
            Specifies the resource id of the current user.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentUserIdProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnector">
            <summary>
            Gets or sets the data connector that provides the scheduling data.
            </summary>
            <remarks>
            <b>DataConnector</b> property is used to specify a <see cref="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase"/> derived class instance
            that provides the scheduling data to this <i>XamScheduleDataManager</i> instance. Any changes made to the schedule
            information via this class or via any of the schedule controls are updated back to the data connector which may
            update its underlying data sources.
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DataConnectorProperty"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleDataConnectorBase"/>
            <seealso cref="T:Infragistics.Controls.Schedules.ListScheduleDataConnector"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProvider">
            <summary>
            Returns or sets an object that formats and manipulates dates
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProviderProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProviderResolved">
            <summary>
            Returns the object that formats and manipulates dates
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProvider"/> is not set then an instance of a <see cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProvider"/> with the current culture will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DateInfoProvider"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.DialogFactory">
            <summary>
            Returns/sets the <see cref="T:Infragistics.Controls.Schedules.ScheduleDialogFactoryBase"/> derived class that supplies dialogs for the XamSchedule controls.   
            </summary>
            <remarks>
            <para class="body">
            If this property is not set, the <b>XamSchedule</b> controls will use default the 'lightweight' dialogs contained in the
            <b>XamSchedule</b> assembly.  If you want to use the 'heavyweight' versions of the dialogs which reference external
            controls (e.g., the <b>XamRibbon</b> control), then you should add a reference to the <b>Schedule.Dialogs</b> assembly
            to your project, and set this property to an instance of the <b>ScheduleDialogFactory class defined in that assembly.</b>
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.DialogFactoryProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.HasPendingOperations">
            <summary>
            Returns a boolean indicating if there are any pending operations waiting to be completed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.HasPendingOperationsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.PendingOperations">
            <summary>
            Returns a collection of <see cref="T:Infragistics.OperationResult"/> instances that have not yet completed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.PromptForLocalTimeZone">
            <summary>
            Returns or sets an enum that determines if a prompt will be displayed asking the user to select a local time zone
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.PromptForLocalTimeZoneProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.RecurrenceCalculatorFactory">
            <summary>
            Gets the recurrence calculator factory used to get <see cref="T:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase"/> instance 
            for a <see cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>, which is used for calculating occurrences of the recurrence.
            </summary>
            <remarks>
            <para class="body">
            You can provide a custom logic for calculating recurrences by setting the ScheduleDataConnectorBase's 
            <see cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/> property.
            </para>
            </remarks>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrence"/>
            <seealso cref="T:Infragistics.Controls.Schedules.DateRecurrenceCalculatorBase"/>
            <seealso cref="P:Infragistics.Controls.Schedules.ScheduleDataConnectorBase.RecurrenceCalculatorFactory"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.ResourceItems">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Schedules.Resource"/>s.
            </summary>
            <remarks>
            <b>ResourceItems</b> property returns a collection of <see cref="T:Infragistics.Controls.Schedules.Resource"/> objects that represent the
            resources in the schedule.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.Settings">
            <summary>
            Gets or sets the ScheduleSettings object used for specifying various settings.
            </summary>
            <seealso cref="T:Infragistics.Controls.Schedules.ScheduleSettings"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.BlockingError">
            <summary>
            Gets the blocking error if any.
            </summary>
            <remarks>
            <para class="body">
            <b>BlockingError</b> property is set when an error occurs that prevents further functioning of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentDate">
            <summary>
            Returns the calendar date for the current logical day
            </summary>
            <seealso cref="F:Infragistics.Controls.Schedules.XamScheduleDataManager.CurrentDateProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Schedules.XamScheduleDataManager.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Schedules.XamScheduleView">
            <summary>
            Custom control used to display activity relative to time slots in a horizontal arrangement.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleView.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleView.GetCalendarGroupAutomationScrollInfo(Infragistics.Controls.Primitives.ScrollInfo@,Infragistics.Controls.Primitives.ScrollInfo@)">
            <summary>
            Returns the horizontal and vertical scrollinfo instances to be used by the automation peer for the CalendarGroupTimeslotArea.
            </summary>
            <param name="horizontal">Out parameter set to the horizontal scrollinfo or null</param>
            <param name="vertical">Out parameter set to the vertical scrollinfo or null</param>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleView.IsTimeslotRangeGroupBreak(System.DateTime,System.DateTime)">
            <summary>
            Used by the <see cref="P:Infragistics.Controls.Schedules.ScheduleControlBase.TimeslotInfo"/> to determine if 2 visible dates are considered to be part of the same group of timeslots.
            </summary>
            <param name="previousDate">Previous date processed</param>
            <param name="nextDate">Next date to be processed</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleView.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Schedules.XamScheduleView"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamScheduleViewAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Schedules.XamScheduleView.PerformInitialScrollIntoViewImpl">
            <summary>
            This method is not meant to be called directly except by the ScheduleTimeControlBase
            </summary>
        </member>
    </members>
</doc>
